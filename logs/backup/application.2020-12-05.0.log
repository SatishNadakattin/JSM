2020-12-05 00:20:47 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=18m28s876ms809µs300ns).
2020-12-05 00:21:25 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 00:21:40 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=55s577ms858µs200ns).
2020-12-05 09:32:37 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=9h2m57s299ms404µs400ns).
2020-12-05 09:43:20 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 19432 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 09:43:20 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 09:43:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 09:43:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 293ms. Found 22 repository interfaces.
2020-12-05 09:43:23 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 09:43:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 09:43:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 09:43:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 09:43:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 09:43:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 09:43:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 09:43:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 09:43:23 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a6313158] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 09:43:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3edef992] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 09:43:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 09:43:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1f443fae' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 09:43:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$63b39c44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 09:43:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 09:43:24 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 09:43:24 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 09:43:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 09:43:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 09:43:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 09:43:28 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 09:43:29 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 09:43:29 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 8247 ms
2020-12-05 09:43:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 09:43:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@75e09567
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@75e09567
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@75e09567
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f9fc8bd
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3c854752
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7f608e21
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@66236a0a
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@66236a0a
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66236a0a
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@795f8317
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@795f8317
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@795f8317
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@157ec23b
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@157ec23b
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@157ec23b
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@47ac613b
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@47ac613b
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@47ac613b
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@134ff8f8
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@134ff8f8
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@134ff8f8
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3902bd2c
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3902bd2c
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3902bd2c
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@727320fa
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@727320fa
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@727320fa
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@51a18b21
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@51a18b21
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@766a49c7
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@766a49c7
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6a756082
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6a756082
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2a53f215
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6749fe50
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@bbd4791
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@bbd4791
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6ee99964
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ee99964
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@361abd01
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@361abd01
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1fd9893c
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1fd9893c
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@551e4c6d
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@551e4c6d
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3fb9a67f
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3fb9a67f
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f36e8d1
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f36e8d1
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@340d6d89
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@340d6d89
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@28757abd
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@28757abd
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1945113f
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1945113f
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1db87583
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1db87583
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2f894ad9
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2f894ad9
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2f894ad9
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57545c3f
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@76a805b7
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76a805b7
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76a805b7
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@608b1fd2
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7c51782d
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7c51782d
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@411a5965
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@411a5965
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@71b639d0
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71b639d0
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@542f6803
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@542f6803
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@316acbb5
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@316acbb5
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7930ffa9
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5b7aa898
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b7aa898
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5b7aa898
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62b93086
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62b93086
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62b93086
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5731d3a
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@70c69586
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3e0fbeb5
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e0fbeb5
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3e0fbeb5
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4694f434
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4694f434
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4694f434
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5a49af50
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@60dd0587
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7fc420b8
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fc420b8
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1192b58e
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5f5effb0
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f5effb0
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2f4b98f6
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2f4b98f6
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b2954e1
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@235d659c
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5ebffb44
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3f362135
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f362135
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@724aefc3
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7cfb4736
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2a097d77
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53c1179a
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7650ded6
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5034f5dd
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@31b7d869
2020-12-05 09:43:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6a916402
2020-12-05 09:43:40 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1e225820
2020-12-05 09:43:40 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1e225820
2020-12-05 09:43:40 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@316acbb5
2020-12-05 09:43:40 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c02670f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71179b6f]
2020-12-05 09:43:43 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c02670f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5600a5da]
2020-12-05 09:43:47 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 09:43:47 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 09:43:47 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 09:43:47 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 09:43:48 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5600a5da] for TypeConfiguration
2020-12-05 09:43:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 09:43:52 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15d0b458, org.springframework.security.web.context.SecurityContextPersistenceFilter@9499643, org.springframework.security.web.header.HeaderWriterFilter@3cc2e3e, org.springframework.web.filter.CorsFilter@72a0a60d, org.springframework.security.web.authentication.logout.LogoutFilter@349aeec4, com.app.config.JwtRequestFilter@4a29fe2e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a34505a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c418496, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65930e02, org.springframework.security.web.session.SessionManagementFilter@27055a2a, org.springframework.security.web.access.ExceptionTranslationFilter@1253b822, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@77e6053]
2020-12-05 09:43:53 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 09:43:53 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 09:43:53 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 09:43:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 09:43:54 [main] INFO  com.app.Application - Started Application in 34.224 seconds (JVM running for 35.598)
2020-12-05 09:45:35 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 09:45:35 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 09:45:35 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 66 ms
2020-12-05 09:45:35 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 09:45:35 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 09:45:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-05 09:45:41 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Brother]
2020-12-05 09:45:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 09:45:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 09:45:42 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [09:45:41]
2020-12-05 09:45:42 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2020-12-05 09:45:42 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 09:45:42 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 09:45:42 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 09:45:42 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 09:45:42 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Brother]
2020-12-05 09:45:42 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [brother]
2020-12-05 09:45:42 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [81]
2020-12-05 09:49:08 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 09:55:27 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 09:55:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-05 09:55:27 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [mother]
2020-12-05 09:55:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 09:55:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 09:55:27 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [09:55:27]
2020-12-05 09:55:27 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2020-12-05 09:55:27 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 09:55:27 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 09:55:27 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 09:55:27 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 09:55:27 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [mother]
2020-12-05 09:55:27 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [mom]
2020-12-05 09:55:27 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [82]
2020-12-05 09:55:27 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 09:56:52 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 09:56:52 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 09:56:58 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 09:57:09 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 09:57:41 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 09:57:41 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 09:58:27 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 09:58:27 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 10:18:26 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 10716 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 10:18:26 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 10:18:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 10:18:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 266ms. Found 22 repository interfaces.
2020-12-05 10:18:28 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 10:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 10:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 10:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 10:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 10:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 10:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 10:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 10:18:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3cfbc758] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 10:18:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d5a98f92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 10:18:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 10:18:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@566d0c69' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 10:18:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$fa7e3244] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 10:18:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 10:18:28 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 10:18:28 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 10:18:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 10:18:29 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 10:18:29 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 10:18:29 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 10:18:30 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 10:18:30 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3851 ms
2020-12-05 10:18:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 10:18:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@692dba54
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@692dba54
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@692dba54
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33feb805
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@34332b8d
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7ff19c33
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7a4d582c
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7a4d582c
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a4d582c
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4d1ff6b1
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4d1ff6b1
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d1ff6b1
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7d247660
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7d247660
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d247660
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@513b52af
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@513b52af
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@513b52af
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4ed4a7e4
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4ed4a7e4
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4ed4a7e4
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5634a861
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5634a861
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5634a861
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@75e09567
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@75e09567
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@75e09567
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3e7b65d7
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3e7b65d7
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6949e948
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6949e948
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2e3572e8
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2e3572e8
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7c781c42
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@355c94be
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1dd74143
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1dd74143
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@66f28a1f
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@66f28a1f
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@df921b1
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@df921b1
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@eb6ec6
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@eb6ec6
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3f018494
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3f018494
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7c52fc81
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7c52fc81
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@75e27856
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@75e27856
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f3b992
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f3b992
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@59c70ceb
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@59c70ceb
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@12f49ca8
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@12f49ca8
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@21da4b5f
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@21da4b5f
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@9b76b60
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@9b76b60
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@9b76b60
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5562c2c9
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@794366a5
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@794366a5
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@794366a5
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@340d6d89
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5dc0ff7d
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5dc0ff7d
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@67531e3a
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@67531e3a
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3003e580
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3003e580
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@10a98392
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10a98392
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@697173d9
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@697173d9
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1db87583
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2f894ad9
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f894ad9
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2f894ad9
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36baa049
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36baa049
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36baa049
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@167381c7
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@591a4f8e
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@48e8c32a
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@48e8c32a
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@48e8c32a
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5377414a
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5377414a
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5377414a
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@71b639d0
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1ee27d73
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@316acbb5
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@316acbb5
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7930ffa9
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7c0777b5
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7c0777b5
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2fd954f
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2fd954f
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1eff3cfb
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e9f2c32
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4833eff3
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@31142d58
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@31142d58
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f8d86e4
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5f631ca0
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1697f2b3
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@12ad1b2a
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3134153d
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@767599a7
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f5effb0
2020-12-05 10:18:33 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25d0cb3a
2020-12-05 10:18:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3332c7a5
2020-12-05 10:18:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3332c7a5
2020-12-05 10:18:34 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@697173d9
2020-12-05 10:18:34 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@76d7881e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4aa31ffc]
2020-12-05 10:18:34 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@76d7881e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@77524ca7]
2020-12-05 10:18:36 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 10:18:36 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 10:18:36 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 10:18:36 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 10:18:36 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@77524ca7] for TypeConfiguration
2020-12-05 10:18:36 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 10:18:39 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4258106, org.springframework.security.web.context.SecurityContextPersistenceFilter@758d4aa9, org.springframework.security.web.header.HeaderWriterFilter@119f072c, org.springframework.web.filter.CorsFilter@64ef2719, org.springframework.security.web.authentication.logout.LogoutFilter@6c9e74f3, com.app.config.JwtRequestFilter@7e8c58fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7096d451, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b33892a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b423f90, org.springframework.security.web.session.SessionManagementFilter@667dd150, org.springframework.security.web.access.ExceptionTranslationFilter@147375b3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@17d19538]
2020-12-05 10:18:39 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 10:18:39 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 10:18:39 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 10:18:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 10:18:39 [main] INFO  com.app.Application - Started Application in 14.525 seconds (JVM running for 16.249)
2020-12-05 10:18:48 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 10:18:48 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 10:18:48 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-12-05 10:18:48 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 10:18:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [1]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:47]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [2]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:57]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [RD]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [3]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:09]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [FD]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [5]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:44]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [satish]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:18:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy Withdraw]
2020-12-05 10:20:47 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 10:20:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.name=?
2020-12-05 10:20:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Recurring Deposite]
2020-12-05 10:20:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 10:20:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into gen_std_deposit_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 10:20:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [10:20:47]
2020-12-05 10:20:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [keerthana]
2020-12-05 10:20:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 10:20:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 10:20:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 10:20:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 10:20:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Recurring Deposite]
2020-12-05 10:20:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [83]
2020-12-05 10:20:57 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 10:20:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [1]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:47]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [2]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:57]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [RD]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [3]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:09]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [FD]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [5]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:44]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [satish]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy Withdraw]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [6]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [10:20:47]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [keerthana]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-05]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:20:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Recurring Deposite]
2020-12-05 10:21:54 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 10:21:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.name=?
2020-12-05 10:21:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Term  Deposite]
2020-12-05 10:21:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 10:21:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into gen_std_deposit_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 10:21:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [10:21:54]
2020-12-05 10:21:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [keerthana]
2020-12-05 10:21:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 10:21:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 10:21:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 10:21:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 10:21:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Term  Deposite]
2020-12-05 10:21:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [84]
2020-12-05 10:22:01 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 10:22:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [1]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:47]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [2]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:57]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [RD]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [3]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:09]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [FD]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [5]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:44]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [satish]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy Withdraw]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [6]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [10:20:47]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [keerthana]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-05]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Recurring Deposite]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [7]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [10:21:54]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [keerthana]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-05]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:22:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Term  Deposite]
2020-12-05 10:22:55 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 10:22:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.slno=?
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [7]
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [7]
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [10:21:54]
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [keerthana]
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-05]
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Term  Deposite]
2020-12-05 10:22:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.name=?
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Fixed Deposite]
2020-12-05 10:22:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - update gen_std_deposit_type set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Fixed Deposite]
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [keerthana]
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [10:22:55]
2020-12-05 10:22:55 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [7]
2020-12-05 10:23:05 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 10:23:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.slno=?
2020-12-05 10:23:05 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [7]
2020-12-05 10:23:05 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [7]
2020-12-05 10:23:05 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [10:21:54]
2020-12-05 10:23:05 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [keerthana]
2020-12-05 10:23:05 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-05]
2020-12-05 10:23:05 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [10:22:55]
2020-12-05 10:23:05 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [keerthana]
2020-12-05 10:23:05 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [2020-12-05]
2020-12-05 10:23:05 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Fixed Deposite]
2020-12-05 10:23:25 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 10:23:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.slno=?
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [7]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [7]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [10:21:54]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [keerthana]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-05]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [10:22:55]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [keerthana]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [2020-12-05]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Fixed Deposite]
2020-12-05 10:23:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.name=?
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [FD]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [3]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:09]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-05 10:23:25 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [FD]
2020-12-05 10:23:34 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 10:23:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.slno=?
2020-12-05 10:23:34 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [7]
2020-12-05 10:23:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [7]
2020-12-05 10:23:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [10:21:54]
2020-12-05 10:23:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [keerthana]
2020-12-05 10:23:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-05]
2020-12-05 10:23:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [10:22:55]
2020-12-05 10:23:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [keerthana]
2020-12-05 10:23:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [2020-12-05]
2020-12-05 10:23:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Fixed Deposite]
2020-12-05 10:23:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - DELETE FROM gen_std_deposit_type WHERE slno = ?
2020-12-05 10:23:34 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [7]
2020-12-05 10:23:50 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 10:23:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.slno=?
2020-12-05 10:23:50 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [7]
2020-12-05 12:03:26 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 20588 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 12:03:26 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 12:03:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 12:03:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 178ms. Found 23 repository interfaces.
2020-12-05 12:03:28 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 12:03:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 12:03:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 12:03:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 12:03:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 12:03:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 12:03:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 12:03:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 12:03:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3b4495bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 12:03:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d3f25df6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 12:03:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 12:03:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4e4c3a38' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 12:03:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f8c700a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 12:03:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 12:03:29 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 12:03:29 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 12:03:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 12:03:30 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 12:03:30 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 12:03:30 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 12:03:30 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 12:03:30 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3264 ms
2020-12-05 12:03:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 12:03:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@34332b8d
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@34332b8d
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34332b8d
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7ff19c33
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@462abec3
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5626d18c
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@45f756e6
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@45f756e6
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@45f756e6
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@656f62dc
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@656f62dc
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@656f62dc
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5a8c93
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5a8c93
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a8c93
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1c7350b0
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1c7350b0
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1c7350b0
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2b0dc227
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2b0dc227
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2b0dc227
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2a334bac
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2a334bac
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2a334bac
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3c854752
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3c854752
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3c854752
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@210d2a6c
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@210d2a6c
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77c10a5f
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77c10a5f
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@355c94be
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@355c94be
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@157ec23b
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@526a9908
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@60a19573
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@60a19573
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4db60246
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4db60246
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@34d45ec0
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@34d45ec0
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3ce443f9
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3ce443f9
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7523a3dc
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7523a3dc
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6bccd036
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6bccd036
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a53f215
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a53f215
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@261db982
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@261db982
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7165d530
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7165d530
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@551e4c6d
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@551e4c6d
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3fb9a67f
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3fb9a67f
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3f36e8d1
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3f36e8d1
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3f36e8d1
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@480b57e2
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1ee47d9e
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1ee47d9e
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1ee47d9e
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64920dc2
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2b38b1f
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b38b1f
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@28757abd
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28757abd
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@30839e44
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@30839e44
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@ceddaf8
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@ceddaf8
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27329d2a
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27329d2a
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5afbd567
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@41184371
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@41184371
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@41184371
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@608b1fd2
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@608b1fd2
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@608b1fd2
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7c51782d
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@20a7953c
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4e83a98
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4e83a98
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4e83a98
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ee27d73
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ee27d73
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ee27d73
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5583098b
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7ce85af2
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3e906375
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e906375
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@41b13f3d
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@29ebbdf4
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@29ebbdf4
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7e9f2c32
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7e9f2c32
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e0fbeb5
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b0a1231
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@793d163b
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@12ad1b2a
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@12ad1b2a
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5f5effb0
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@25d0cb3a
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@345cbf40
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6e3eb0cd
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@463561c5
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@659feb22
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3468ee6e
2020-12-05 12:03:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2f4b98f6
2020-12-05 12:03:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@19c1820d
2020-12-05 12:03:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@19c1820d
2020-12-05 12:03:32 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@27329d2a
2020-12-05 12:03:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4b862408] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6ddee60f]
2020-12-05 12:03:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4b862408] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@39e53bef]
2020-12-05 12:03:33 [main] DEBUG org.hibernate.SQL - create table gen_std_compounding_period (slno int8 not null, created_at time, created_by varchar(255), created_on DATE, modified_at time, modified_by varchar(255), modified_on DATE, name varchar(255), primary key (slno))
2020-12-05 12:03:33 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 12:03:33 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 12:03:33 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 12:03:33 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 12:03:33 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@39e53bef] for TypeConfiguration
2020-12-05 12:03:33 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 12:03:35 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ac406d4, org.springframework.security.web.context.SecurityContextPersistenceFilter@3b4f1eb, org.springframework.security.web.header.HeaderWriterFilter@85c3522, org.springframework.web.filter.CorsFilter@72646d16, org.springframework.security.web.authentication.logout.LogoutFilter@5ea0a7a9, com.app.config.JwtRequestFilter@5d15789f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f3a8166, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7cd25bf5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6ec2d990, org.springframework.security.web.session.SessionManagementFilter@391e85df, org.springframework.security.web.access.ExceptionTranslationFilter@72a0a60d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@288b73c1]
2020-12-05 12:03:36 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 12:03:36 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 12:03:36 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 12:03:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 12:03:36 [main] INFO  com.app.Application - Started Application in 10.483 seconds (JVM running for 11.309)
2020-12-05 12:07:45 [http-nio-8080-exec-9] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 12:07:45 [http-nio-8080-exec-9] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 12:07:45 [http-nio-8080-exec-9] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-12-05 12:07:45 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:07:59 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:08:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:08:00 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [monthly]
2020-12-05 12:08:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 12:08:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 12:08:00 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [12:08:00]
2020-12-05 12:08:00 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2020-12-05 12:08:00 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:08:00 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 12:08:00 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 12:08:00 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 12:08:00 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [monthly]
2020-12-05 12:08:00 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [85]
2020-12-05 12:08:04 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:08:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:08:04 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [monthly]
2020-12-05 12:08:04 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-05 12:08:04 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:08:00]
2020-12-05 12:08:04 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [null]
2020-12-05 12:08:04 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:08:04 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 12:08:04 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 12:08:04 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 12:08:04 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [monthly]
2020-12-05 12:08:26 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:08:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:08:26 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [monthly]
2020-12-05 12:08:26 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-05 12:08:26 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:08:00]
2020-12-05 12:08:26 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [null]
2020-12-05 12:08:26 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:08:26 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 12:08:26 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 12:08:26 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 12:08:26 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [monthly]
2020-12-05 12:10:14 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:10:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:10:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [monthly]
2020-12-05 12:10:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 12:10:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 12:10:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [12:10:14]
2020-12-05 12:10:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 12:10:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:10:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 12:10:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 12:10:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 12:10:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [monthly]
2020-12-05 12:10:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [86]
2020-12-05 12:10:23 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:10:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:10:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [yearly]
2020-12-05 12:10:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 12:10:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 12:10:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [12:10:23]
2020-12-05 12:10:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 12:10:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:10:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 12:10:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 12:10:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 12:10:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [yearly]
2020-12-05 12:10:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [87]
2020-12-05 12:10:55 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:10:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:10:55 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [quarterly]
2020-12-05 12:10:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 12:10:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 12:10:55 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [12:10:55]
2020-12-05 12:10:55 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 12:10:55 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:10:55 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 12:10:55 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 12:10:55 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 12:10:55 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [quarterly]
2020-12-05 12:10:55 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [88]
2020-12-05 12:10:57 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:10:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:10:57 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [quarterly]
2020-12-05 12:10:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [3]
2020-12-05 12:10:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:55]
2020-12-05 12:10:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:10:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:10:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 12:10:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 12:10:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 12:10:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [quarterly]
2020-12-05 12:11:19 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:11:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:11:19 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [flat]
2020-12-05 12:11:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 12:11:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 12:11:19 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [12:11:19]
2020-12-05 12:11:19 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 12:11:19 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:11:19 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 12:11:19 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 12:11:19 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 12:11:19 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [flat]
2020-12-05 12:11:19 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [89]
2020-12-05 12:11:29 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:11:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:11:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [on maturity]
2020-12-05 12:11:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 12:11:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 12:11:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [12:11:29]
2020-12-05 12:11:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 12:11:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:11:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 12:11:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 12:11:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 12:11:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [on maturity]
2020-12-05 12:11:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [90]
2020-12-05 12:11:35 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:11:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:14]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [monthly]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:23]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [yearly]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [3]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:55]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [quarterly]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [4]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:11:19]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [flat]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [5]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:11:29]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 12:11:35 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [on maturity]
2020-12-05 12:13:11 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:13:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:13:11 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-05 12:13:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-05 12:13:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:14]
2020-12-05 12:13:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:13:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:13:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 12:13:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 12:13:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 12:13:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [monthly]
2020-12-05 12:13:24 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:13:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:13:24 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:13:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:13:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:23]
2020-12-05 12:13:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:13:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:13:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 12:13:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 12:13:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 12:13:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [yearly]
2020-12-05 12:14:22 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:14:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:23]
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [yearly]
2020-12-05 12:14:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - UPDATE gen_std_compounding_period set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [12:14:22]
2020-12-05 12:14:22 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [2]
2020-12-05 12:14:25 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:14:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:23]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [12:14:22]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [maturity]
2020-12-05 12:14:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - UPDATE gen_std_compounding_period set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [12:14:25]
2020-12-05 12:14:25 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [2]
2020-12-05 12:14:26 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:14:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:23]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [12:14:25]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [maturity]
2020-12-05 12:14:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - UPDATE gen_std_compounding_period set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [12:14:26]
2020-12-05 12:14:26 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [2]
2020-12-05 12:14:27 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:14:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:23]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [12:14:26]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [maturity]
2020-12-05 12:14:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - UPDATE gen_std_compounding_period set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [12:14:27]
2020-12-05 12:14:27 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [2]
2020-12-05 12:14:28 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:14:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:23]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [12:14:27]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [maturity]
2020-12-05 12:14:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - UPDATE gen_std_compounding_period set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [12:14:28]
2020-12-05 12:14:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [2]
2020-12-05 12:14:29 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:14:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:23]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [12:14:28]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [maturity]
2020-12-05 12:14:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - UPDATE gen_std_compounding_period set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [12:14:29]
2020-12-05 12:14:29 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [2]
2020-12-05 12:14:30 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:14:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:23]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [12:14:29]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [satish]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [maturity]
2020-12-05 12:14:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:14:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - UPDATE gen_std_compounding_period set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [12:14:30]
2020-12-05 12:14:30 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [2]
2020-12-05 12:15:11 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:15:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:15:11 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:15:11 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:15:11 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:23]
2020-12-05 12:15:11 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:15:11 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:15:11 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [12:14:30]
2020-12-05 12:15:11 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [satish]
2020-12-05 12:15:11 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:15:11 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [maturity]
2020-12-05 12:15:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - DELETE FROM gen_std_member_type WHERE slno = ?
2020-12-05 12:15:11 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:15:11 [http-nio-8080-exec-4] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: update or delete on table "gen_std_member_type" violates foreign key constraint "fk348sx24x26dw68uwqj4n13g1u" on table "gen_std_share_parameter"
  Detail: Key (slno)=(2) is still referenced from table "gen_std_share_parameter".
2020-12-05 12:15:27 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:15:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:15:27 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:15:27 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:15:27 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:23]
2020-12-05 12:15:27 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:15:27 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:15:27 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [12:14:30]
2020-12-05 12:15:27 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [satish]
2020-12-05 12:15:27 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:15:27 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [maturity]
2020-12-05 12:15:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - DELETE FROM gen_std_member_type WHERE slno = ?
2020-12-05 12:15:27 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:15:27 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: update or delete on table "gen_std_member_type" violates foreign key constraint "fk348sx24x26dw68uwqj4n13g1u" on table "gen_std_share_parameter"
  Detail: Key (slno)=(2) is still referenced from table "gen_std_share_parameter".
2020-12-05 12:16:16 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 14620 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 12:16:16 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 12:16:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 12:16:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 226ms. Found 23 repository interfaces.
2020-12-05 12:16:18 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 12:16:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 12:16:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 12:16:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 12:16:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 12:16:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 12:16:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 12:16:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 12:16:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8d27ffbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 12:16:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$25d5c7f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 12:16:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 12:16:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7c455e96' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 12:16:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$4aaa6aaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 12:16:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 12:16:19 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 12:16:19 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 12:16:19 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 12:16:20 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 12:16:20 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 12:16:20 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 12:16:20 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 12:16:20 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4004 ms
2020-12-05 12:16:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 12:16:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4db60246
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4db60246
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4db60246
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d32e714
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18137eab
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f018494
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7c52fc81
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7c52fc81
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7c52fc81
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@75e27856
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@75e27856
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@75e27856
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1f3b992
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1f3b992
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f3b992
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf7bf6
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf7bf6
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf7bf6
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@40a72ecd
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@40a72ecd
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@40a72ecd
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@257ef9ed
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@257ef9ed
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@257ef9ed
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@575b5f7d
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@575b5f7d
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@575b5f7d
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b2df3aa
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b2df3aa
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@625a9c5d
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@625a9c5d
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@127705e4
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@127705e4
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15c487a8
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@794366a5
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@443faa85
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@443faa85
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@59a79443
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@59a79443
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1d50a7ca
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1d50a7ca
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@21a02556
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@21a02556
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f174dd2
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f174dd2
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3d90eeb3
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3d90eeb3
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7978e022
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7978e022
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@326e0b8e
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@326e0b8e
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57c00115
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57c00115
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@18a25bbd
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@18a25bbd
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5583098b
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5583098b
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@56f730b2
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56f730b2
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56f730b2
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1e60b459
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@41b13f3d
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41b13f3d
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41b13f3d
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2a39aa2b
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2fd954f
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2fd954f
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6dc1dc69
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6dc1dc69
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3976ebfa
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3976ebfa
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@56928e17
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@56928e17
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60dd0587
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60dd0587
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@338766de
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@31142d58
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@31142d58
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@31142d58
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1697f2b3
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1697f2b3
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1697f2b3
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@25d0cb3a
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@463561c5
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@58c1da09
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@58c1da09
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@58c1da09
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4232b34a
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4232b34a
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4232b34a
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@47e51549
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5ebffb44
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7e307087
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e307087
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@234cff57
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6bc24e72
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bc24e72
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@31b7d869
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@31b7d869
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6d2a2560
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24eeac69
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@346f41a9
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6f6c6077
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6f6c6077
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31120021
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3df1a1ac
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58606c91
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a9cd0f8
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4baed682
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7be2f29a
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@203d1d93
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c2a027c
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@58a84a12
2020-12-05 12:16:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@58a84a12
2020-12-05 12:16:21 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@60dd0587
2020-12-05 12:16:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@208205ed] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@73afe2b7]
2020-12-05 12:16:22 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@208205ed] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3709748f]
2020-12-05 12:16:23 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 12:16:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 12:16:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 12:16:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 12:16:23 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3709748f] for TypeConfiguration
2020-12-05 12:16:23 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 12:16:25 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5ddf5118, org.springframework.security.web.context.SecurityContextPersistenceFilter@4dd752e8, org.springframework.security.web.header.HeaderWriterFilter@4790b897, org.springframework.web.filter.CorsFilter@7b9d1a4, org.springframework.security.web.authentication.logout.LogoutFilter@2f39b534, com.app.config.JwtRequestFilter@771d4db, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@55317c63, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5340ccb9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@fcd3a6f, org.springframework.security.web.session.SessionManagementFilter@28a3fc34, org.springframework.security.web.access.ExceptionTranslationFilter@6821c63c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5b2c7186]
2020-12-05 12:16:25 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 12:16:25 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 12:16:25 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 12:16:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 12:16:25 [main] INFO  com.app.Application - Started Application in 10.172 seconds (JVM running for 10.96)
2020-12-05 12:16:29 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 12:16:29 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 12:16:29 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-12-05 12:16:29 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:16:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:16:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:16:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-05 12:16:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:23]
2020-12-05 12:16:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 12:16:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:16:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [12:14:30]
2020-12-05 12:16:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [satish]
2020-12-05 12:16:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 12:16:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [maturity]
2020-12-05 12:16:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - DELETE FROM gen_std_compounding_period WHERE slno = ?
2020-12-05 12:16:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 12:16:32 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 12:16:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 12:16:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-05 13:04:39 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:04:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:14]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [monthly]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [3]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:55]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [quarterly]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [4]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:11:19]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [flat]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [5]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:11:29]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:04:39 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [on maturity]
2020-12-05 13:05:50 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:05:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 13:05:50 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [compound interest]
2020-12-05 13:05:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 13:05:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 13:05:50 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:05:50]
2020-12-05 13:05:50 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [divya]
2020-12-05 13:05:50 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 13:05:50 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 13:05:50 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 13:05:50 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 13:05:50 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [compound interest]
2020-12-05 13:05:50 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [91]
2020-12-05 13:05:57 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:05:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:14]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [monthly]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [3]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:55]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [quarterly]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [4]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:11:19]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [flat]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [5]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:11:29]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [on maturity]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [6]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [13:05:50]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [divya]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:05:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [compound interest]
2020-12-05 13:07:44 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:07:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 13:07:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [simple interest]
2020-12-05 13:07:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 13:07:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 13:07:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:07:44]
2020-12-05 13:07:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [divya]
2020-12-05 13:07:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 13:07:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 13:07:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 13:07:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 13:07:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [simple interest]
2020-12-05 13:07:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [92]
2020-12-05 13:07:50 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:07:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:14]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [monthly]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [3]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:55]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [quarterly]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [4]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:11:19]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [flat]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [5]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:11:29]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [on maturity]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [6]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [13:05:50]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [divya]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [compound interest]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [7]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [13:07:44]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [divya]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:07:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [simple interest]
2020-12-05 13:08:26 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:08:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 13:08:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [6]
2020-12-05 13:08:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [6]
2020-12-05 13:08:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [13:05:50]
2020-12-05 13:08:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [divya]
2020-12-05 13:08:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:08:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:08:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:08:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:08:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [compound interest]
2020-12-05 13:08:47 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:08:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [7]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [7]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [13:07:44]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [divya]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [simple interest]
2020-12-05 13:08:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [simple interest]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [7]
2020-12-05 13:08:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - UPDATE gen_std_compounding_period set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [simple interest]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [13:08:47]
2020-12-05 13:08:47 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [7]
2020-12-05 13:08:54 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:08:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:14]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [monthly]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [3]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:10:55]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [quarterly]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [4]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:11:19]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [flat]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [5]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [12:11:29]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [on maturity]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [6]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [13:05:50]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [divya]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [compound interest]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [7]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [13:07:44]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [divya]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [13:08:47]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [satish]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:08:54 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [simple interest]
2020-12-05 13:09:11 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:09:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 13:09:11 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [7]
2020-12-05 13:09:11 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [7]
2020-12-05 13:09:11 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [13:07:44]
2020-12-05 13:09:11 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [divya]
2020-12-05 13:09:11 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:09:11 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [13:08:47]
2020-12-05 13:09:11 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [satish]
2020-12-05 13:09:11 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:09:11 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [simple interest]
2020-12-05 13:09:54 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:09:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 13:09:54 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [7]
2020-12-05 13:09:54 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [7]
2020-12-05 13:09:54 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [13:07:44]
2020-12-05 13:09:54 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [divya]
2020-12-05 13:09:54 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:09:54 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [13:08:47]
2020-12-05 13:09:54 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [satish]
2020-12-05 13:09:54 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:09:54 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [simple interest]
2020-12-05 13:09:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - DELETE FROM gen_std_compounding_period WHERE slno = ?
2020-12-05 13:09:54 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [7]
2020-12-05 13:10:49 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:10:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 13:10:49 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [7]
2020-12-05 13:11:10 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:11:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [6]
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [6]
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [13:05:50]
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [divya]
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [compound interest]
2020-12-05 13:11:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [simple interest]
2020-12-05 13:11:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - UPDATE gen_std_compounding_period set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [simple interest]
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [divya]
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [13:11:10]
2020-12-05 13:11:10 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [6]
2020-12-05 13:11:26 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 13:11:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-05 13:11:26 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [6]
2020-12-05 13:11:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [6]
2020-12-05 13:11:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [13:05:50]
2020-12-05 13:11:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [divya]
2020-12-05 13:11:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:11:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [13:11:10]
2020-12-05 13:11:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [divya]
2020-12-05 13:11:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [2020-12-05]
2020-12-05 13:11:26 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [simple interest]
2020-12-05 13:53:21 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 21452 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 13:53:21 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 13:53:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 13:53:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 197ms. Found 24 repository interfaces.
2020-12-05 13:53:23 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 13:53:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 13:53:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 13:53:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 13:53:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 13:53:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 13:53:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 13:53:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 13:53:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d99ff66a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:53:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$724dbea4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:53:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:53:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1bfe3203' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:53:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$97226156] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:53:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:53:24 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 13:53:24 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 13:53:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 13:53:25 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 13:53:25 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 13:53:25 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 13:53:25 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 13:53:25 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3289 ms
2020-12-05 13:53:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 13:53:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@66236a0a
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@66236a0a
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@66236a0a
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@176555c
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@633fd91
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@c386958
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3166f664
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3166f664
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3166f664
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@44a085e5
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@44a085e5
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@44a085e5
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2152ab30
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2152ab30
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2152ab30
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@18137eab
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@18137eab
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@18137eab
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@57fbc06f
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@57fbc06f
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@57fbc06f
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2806d6da
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2806d6da
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2806d6da
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4f4c88f9
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4f4c88f9
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4f4c88f9
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6b63e6ad
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6b63e6ad
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@ae73c80
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@ae73c80
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@76a14c8d
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@76a14c8d
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@257ef9ed
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64f981e2
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@12f49ca8
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@12f49ca8
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@21da4b5f
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@21da4b5f
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@9b76b60
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@9b76b60
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@15c487a8
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@15c487a8
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@40f35e52
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@40f35e52
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41da3aee
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41da3aee
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@13dbed9e
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@13dbed9e
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2e766822
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2e766822
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1d6d1d42
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1d6d1d42
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@326e0b8e
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@326e0b8e
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@15f35bc3
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15f35bc3
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@53ed80d3
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@53ed80d3
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@53ed80d3
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77bc2e16
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4fe533ff
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fe533ff
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fe533ff
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@17aa8a11
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5e5aafc6
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5e5aafc6
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7ce85af2
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7ce85af2
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1e60b459
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1e60b459
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@41b13f3d
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@41b13f3d
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@254449bb
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@254449bb
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2fd954f
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6dc1dc69
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6dc1dc69
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6dc1dc69
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3976ebfa
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3976ebfa
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3976ebfa
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@56928e17
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3b1dc579
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@338766de
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@338766de
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@338766de
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31142d58
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31142d58
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31142d58
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4f8d86e4
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@12ad1b2a
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@463561c5
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@463561c5
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f4b98f6
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4232b34a
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4232b34a
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@311ff287
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@311ff287
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@109f8c7e
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e307087
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@49fa1d74
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3811510
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3811510
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@748f93bb
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f2d31af
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e7157c7
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2a43e0ac
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@22d9bc14
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@346f41a9
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1084f78c
2020-12-05 13:53:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25f723b0
2020-12-05 13:53:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4ac8768e
2020-12-05 13:53:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4ac8768e
2020-12-05 13:53:27 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@254449bb
2020-12-05 13:53:27 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29a33620] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@ea04cab]
2020-12-05 13:53:27 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'state'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stateRepository': Cannot create inner bean '(inner bean)#5b84f14' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#5b84f14': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.HolidayList
2020-12-05 13:53:27 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-05 13:53:27 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 13:53:27 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 13:53:27 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-05 13:53:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-05 13:53:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-05 13:53:27 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-05 13:53:27 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'state'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stateRepository': Cannot create inner bean '(inner bean)#5b84f14' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#5b84f14': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.HolidayList
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'state'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stateRepository': Cannot create inner bean '(inner bean)#5b84f14' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#5b84f14': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.HolidayList
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stateRepository': Cannot create inner bean '(inner bean)#5b84f14' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#5b84f14': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.HolidayList
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#5b84f14': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.HolidayList
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 80 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.HolidayList
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 88 common frames omitted
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.HolidayList
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:778)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:250)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:231)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:274)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 95 common frames omitted
2020-12-05 13:56:14 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9928 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 13:56:14 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 13:56:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 13:56:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 210ms. Found 24 repository interfaces.
2020-12-05 13:56:16 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 13:56:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 13:56:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 13:56:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 13:56:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 13:56:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 13:56:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 13:56:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 13:56:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$25db2ad6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:56:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$be88f310] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:56:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:56:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2c16fadb' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:56:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e35d95c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:56:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:56:16 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 13:56:16 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 13:56:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 13:56:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 13:56:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 13:56:17 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 13:56:18 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 13:56:18 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3964 ms
2020-12-05 13:56:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 13:56:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@656f62dc
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@656f62dc
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@656f62dc
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fdca00a
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3bed3315
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4ed4a7e4
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5634a861
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5634a861
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5634a861
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@75e09567
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@75e09567
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@75e09567
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3e7b65d7
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3e7b65d7
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3e7b65d7
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6949e948
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6949e948
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6949e948
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2e3572e8
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2e3572e8
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e3572e8
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@633fd91
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@633fd91
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@633fd91
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@44d64d4e
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@44d64d4e
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44d64d4e
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@60d6fdd4
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@60d6fdd4
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@619f2afc
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@619f2afc
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7d32e714
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7d32e714
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@18137eab
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f018494
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7c52fc81
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c52fc81
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@75e27856
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@75e27856
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1f3b992
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1f3b992
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@52bf7bf6
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@52bf7bf6
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@40a72ecd
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@40a72ecd
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@257ef9ed
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@257ef9ed
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@575b5f7d
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@575b5f7d
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1b2df3aa
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1b2df3aa
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@794366a5
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@794366a5
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@41da3aee
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@41da3aee
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@13dbed9e
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13dbed9e
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2e766822
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e766822
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e766822
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@21a02556
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5f174dd2
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f174dd2
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f174dd2
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@697173d9
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1d6d1d42
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d6d1d42
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6993c8df
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6993c8df
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@34585ac9
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@34585ac9
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@56382bc9
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@56382bc9
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@77bc2e16
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@77bc2e16
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@57c00115
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@17aa8a11
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@17aa8a11
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@17aa8a11
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5e5aafc6
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5e5aafc6
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5e5aafc6
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7ce85af2
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@47311277
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@40230eb9
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@40230eb9
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@40230eb9
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2a39aa2b
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2a39aa2b
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2a39aa2b
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4e642ee1
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5731d3a
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5d4e13e1
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d4e13e1
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2676dc05
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3b1dc579
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3b1dc579
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4976085
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4976085
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31142d58
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4f8d86e4
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@25d0cb3a
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@f5ce0bb
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f5ce0bb
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@360e9c06
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5ebffb44
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@311ff287
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7377781e
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@31db34da
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@109f8c7e
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5edacf20
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16a5eb6d
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@10244722
2020-12-05 13:56:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@10244722
2020-12-05 13:56:19 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@77bc2e16
2020-12-05 13:56:19 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1150d471] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@709f0202]
2020-12-05 13:56:20 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1150d471] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@8fcc534]
2020-12-05 13:56:21 [main] DEBUG org.hibernate.SQL - create table gen_std_holiday_list (slno int8 not null, created_at time, created_by varchar(255), created_on DATE, holiday_date timestamp, holiday_name varchar(255), modified_at time, modified_by varchar(255), modified_on DATE, branch_slno int8 not null, financial_year_slno int8 not null, primary key (slno))
2020-12-05 13:56:21 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 13:56:21 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_holiday_list add constraint FKj22i3eeqiaglxaog60xvee7bw foreign key (branch_slno) references gen_std_branch
2020-12-05 13:56:21 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_holiday_list add constraint FKccvv60asdgkva3b6kvis0niig foreign key (financial_year_slno) references gen_std_financial_year
2020-12-05 13:56:21 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 13:56:21 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 13:56:21 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 13:56:21 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@8fcc534] for TypeConfiguration
2020-12-05 13:56:21 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 13:56:23 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
2020-12-05 13:56:23 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-05 13:56:23 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 13:56:23 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 13:56:23 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-05 13:56:23 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 13:56:23 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@8fcc534] for TypeConfiguration
2020-12-05 13:56:23 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6315bb4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@8fcc534]
2020-12-05 13:56:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-05 13:56:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-05 13:56:23 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-05 13:56:23 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property date found for type HolidayList!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-12-05 13:59:00 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 20524 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 13:59:00 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 13:59:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 13:59:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 235ms. Found 24 repository interfaces.
2020-12-05 13:59:02 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 13:59:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 13:59:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 13:59:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 13:59:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 13:59:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 13:59:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 13:59:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 13:59:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d2593a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:59:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a5d35bdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:59:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:59:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@15fa55a6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:59:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$caa7fe91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:59:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 13:59:03 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 13:59:03 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 13:59:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 13:59:03 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 13:59:03 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 13:59:03 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 13:59:04 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 13:59:04 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3673 ms
2020-12-05 13:59:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 13:59:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@119b0892
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@119b0892
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@119b0892
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c7350b0
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50448409
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@37ad042b
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@470d183
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@470d183
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@470d183
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3ddeaa5f
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3ddeaa5f
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3ddeaa5f
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3bec5821
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3bec5821
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3bec5821
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@176555c
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@176555c
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@176555c
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@97a145b
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@97a145b
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@97a145b
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@526a9908
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@526a9908
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@526a9908
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@60a19573
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@60a19573
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60a19573
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4db60246
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4db60246
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@34d45ec0
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@34d45ec0
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3ce443f9
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3ce443f9
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@62b790a5
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2806d6da
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4f4c88f9
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4f4c88f9
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6b63e6ad
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6b63e6ad
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@ae73c80
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@ae73c80
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@76a14c8d
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@76a14c8d
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@46f902e0
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@46f902e0
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7165d530
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7165d530
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7219ac49
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7219ac49
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2eed37f4
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2eed37f4
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@41da3aee
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@41da3aee
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2b38b1f
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b38b1f
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@28757abd
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28757abd
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@30839e44
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@30839e44
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@30839e44
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45aca496
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7fb53256
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7fb53256
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7fb53256
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7978e022
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@326e0b8e
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@326e0b8e
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@15f35bc3
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15f35bc3
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@53ed80d3
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53ed80d3
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@20a7953c
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20a7953c
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e83a98
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e83a98
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18a25bbd
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5583098b
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5583098b
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5583098b
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@56f730b2
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@56f730b2
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@56f730b2
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e906375
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@41b13f3d
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@254449bb
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@254449bb
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@254449bb
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a0f2853
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a0f2853
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a0f2853
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6dc1dc69
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5d4e13e1
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@56928e17
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56928e17
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3b1dc579
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4976085
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4976085
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5f631ca0
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5f631ca0
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3134153d
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@25d0cb3a
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@421def93
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@31db34da
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@31db34da
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16a5eb6d
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e307087
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1220ef43
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1a8b81e8
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@234cff57
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5e8507f1
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bcaa195
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d08edc5
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@709f0202
2020-12-05 13:59:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@709f0202
2020-12-05 13:59:05 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4e83a98
2020-12-05 13:59:05 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f366587] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6003ad65]
2020-12-05 13:59:06 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f366587] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56a4abd0]
2020-12-05 13:59:07 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 13:59:07 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 13:59:07 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 13:59:07 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 13:59:07 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@56a4abd0] for TypeConfiguration
2020-12-05 13:59:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 13:59:09 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
2020-12-05 13:59:09 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-05 13:59:09 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 13:59:09 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 13:59:09 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-05 13:59:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 13:59:09 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@56a4abd0] for TypeConfiguration
2020-12-05 13:59:09 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@34e07e65] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@56a4abd0]
2020-12-05 13:59:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-05 13:59:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-05 13:59:09 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-05 13:59:09 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property date found for type HolidayList!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-12-05 15:05:22 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 19336 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 15:05:22 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 15:05:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 15:05:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 209ms. Found 24 repository interfaces.
2020-12-05 15:05:24 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 15:05:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 15:05:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:05:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:05:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:05:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:05:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:05:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:05:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$da848454] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:05:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$73324c8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:05:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:05:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@22d9c961' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:05:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9806ef40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:05:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:05:24 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 15:05:24 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 15:05:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 15:05:26 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 15:05:26 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 15:05:26 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 15:05:26 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 15:05:26 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3933 ms
2020-12-05 15:05:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 15:05:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@37ad042b
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@37ad042b
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37ad042b
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@75e09567
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f9fc8bd
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3c854752
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@210d2a6c
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@210d2a6c
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@210d2a6c
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@77c10a5f
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@77c10a5f
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77c10a5f
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@355c94be
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@355c94be
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@355c94be
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1dd74143
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1dd74143
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1dd74143
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@66f28a1f
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@66f28a1f
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@66f28a1f
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@df921b1
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@df921b1
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@df921b1
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@eb6ec6
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@eb6ec6
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@eb6ec6
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3f018494
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3f018494
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7c52fc81
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7c52fc81
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@75e27856
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@75e27856
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6a756082
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2a53f215
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@261db982
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@261db982
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@73971965
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@73971965
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@59c70ceb
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@59c70ceb
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@59bbb974
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@59bbb974
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@44be69aa
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@44be69aa
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d1e0fbb
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d1e0fbb
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5562c2c9
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5562c2c9
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@794366a5
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@794366a5
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51ab1ee3
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51ab1ee3
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@10a98392
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@10a98392
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@697173d9
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@697173d9
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d6d1d42
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d6d1d42
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d6d1d42
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f894ad9
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@36baa049
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36baa049
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36baa049
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@76a805b7
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@591a4f8e
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@591a4f8e
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@48e8c32a
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48e8c32a
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5377414a
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5377414a
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5d5b9ecb
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d5b9ecb
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5807efad
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5807efad
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@316acbb5
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@717d7587
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@717d7587
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@717d7587
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7c0777b5
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7c0777b5
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7c0777b5
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4e642ee1
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5731d3a
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7e9f2c32
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7e9f2c32
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7e9f2c32
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2676dc05
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2676dc05
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2676dc05
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4694f434
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5a49af50
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3b7eac14
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b7eac14
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7fc420b8
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@12ad1b2a
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12ad1b2a
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@463561c5
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@463561c5
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f4b98f6
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2b2954e1
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@47e51549
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4bcaa195
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bcaa195
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3f362135
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@21eee94f
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6bc24e72
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@724aefc3
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7cfb4736
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a097d77
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@53c1179a
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7650ded6
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4be0a27d
2020-12-05 15:05:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4be0a27d
2020-12-05 15:05:28 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5807efad
2020-12-05 15:05:28 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a9860] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7ca16adc]
2020-12-05 15:05:29 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a9860] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@46a123e4]
2020-12-05 15:05:29 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 15:05:30 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 15:05:30 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 15:05:30 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 15:05:30 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@46a123e4] for TypeConfiguration
2020-12-05 15:05:30 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 15:05:31 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
2020-12-05 15:05:31 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-05 15:05:31 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 15:05:31 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 15:05:31 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-05 15:05:31 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 15:05:31 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@46a123e4] for TypeConfiguration
2020-12-05 15:05:31 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6595ffce] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@46a123e4]
2020-12-05 15:05:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-05 15:05:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-05 15:05:31 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-05 15:05:31 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.HolidayListRepository.findByDate(java.lang.String)! No property date found for type HolidayList!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property date found for type HolidayList!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-12-05 15:07:40 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 19232 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 15:07:40 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 15:07:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 15:07:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 200ms. Found 24 repository interfaces.
2020-12-05 15:07:42 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 15:07:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 15:07:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:07:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:07:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:07:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:07:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:07:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:07:43 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ae0bf703] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:07:43 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$46b9bf3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:07:43 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:07:43 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@49601f82' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:07:43 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6b8e61ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:07:43 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:07:43 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 15:07:43 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 15:07:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 15:07:44 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 15:07:44 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 15:07:44 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 15:07:44 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 15:07:44 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3794 ms
2020-12-05 15:07:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 15:07:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@176555c
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@176555c
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@176555c
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@633fd91
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c386958
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1dd74143
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@66f28a1f
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@66f28a1f
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66f28a1f
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@df921b1
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@df921b1
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@df921b1
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@eb6ec6
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@eb6ec6
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@eb6ec6
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3f018494
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3f018494
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f018494
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c52fc81
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c52fc81
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7c52fc81
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@75e27856
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@75e27856
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75e27856
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1f3b992
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1f3b992
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f3b992
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@52bf7bf6
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@52bf7bf6
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@40a72ecd
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@40a72ecd
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@257ef9ed
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@257ef9ed
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@64f981e2
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@59bbb974
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@44be69aa
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@44be69aa
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5d1e0fbb
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5d1e0fbb
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5562c2c9
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5562c2c9
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@794366a5
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@794366a5
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@443faa85
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@443faa85
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@59a79443
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@59a79443
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d50a7ca
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d50a7ca
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21a02556
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21a02556
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2f894ad9
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2f894ad9
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34585ac9
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34585ac9
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@56382bc9
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56382bc9
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@77bc2e16
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@77bc2e16
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@77bc2e16
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57c00115
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@17aa8a11
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@17aa8a11
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@17aa8a11
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5d5b9ecb
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5807efad
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5807efad
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@47311277
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47311277
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40230eb9
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40230eb9
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2a39aa2b
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2a39aa2b
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2fd954f
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2fd954f
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1eff3cfb
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5d4e13e1
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d4e13e1
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5d4e13e1
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4833eff3
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4833eff3
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4833eff3
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3b1dc579
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@77f905e3
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@777d191f
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@777d191f
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@777d191f
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4f8d86e4
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4f8d86e4
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4f8d86e4
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@12ad1b2a
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5f5effb0
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2f4b98f6
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2f4b98f6
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b2954e1
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@47e51549
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@47e51549
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@109f8c7e
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@109f8c7e
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e307087
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@234cff57
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6bc24e72
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@748f93bb
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@748f93bb
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2a43e0ac
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@22d9bc14
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@346f41a9
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1084f78c
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@25f723b0
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4aa11206
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@40d60f2
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3382cf68
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5cff6b74
2020-12-05 15:07:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5cff6b74
2020-12-05 15:07:46 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2fd954f
2020-12-05 15:07:46 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52559a69] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@285583d4]
2020-12-05 15:07:47 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52559a69] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7a84788f]
2020-12-05 15:07:47 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 15:07:47 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 15:07:47 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 15:07:47 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 15:07:48 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7a84788f] for TypeConfiguration
2020-12-05 15:07:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 15:07:50 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@696105c4, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f67ece5, org.springframework.security.web.header.HeaderWriterFilter@62410e1f, org.springframework.web.filter.CorsFilter@21ab919c, org.springframework.security.web.authentication.logout.LogoutFilter@75c8d8e7, com.app.config.JwtRequestFilter@5bc14211, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c9e6d95, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7cd3860, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5edd9b4f, org.springframework.security.web.session.SessionManagementFilter@17dbca0a, org.springframework.security.web.access.ExceptionTranslationFilter@72bce309, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@665b441e]
2020-12-05 15:07:50 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 15:07:50 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 15:07:51 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 15:07:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 15:07:51 [main] INFO  com.app.Application - Started Application in 10.897 seconds (JVM running for 11.749)
2020-12-05 15:08:16 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 15:08:16 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 15:08:16 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 33 ms
2020-12-05 15:08:17 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 15:08:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-05 15:08:18 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-05 15:08:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 15:08:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 15:08:18 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [15:08:18]
2020-12-05 15:08:18 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-05 15:08:18 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 15:08:18 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 15:08:18 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 15:08:18 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 15:08:18 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [maturity]
2020-12-05 15:08:18 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [93]
2020-12-05 15:17:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.from_year=? and financialy0_.to_year=?
2020-12-05 15:17:36 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [2021]
2020-12-05 15:17:36 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [2022]
2020-12-05 15:17:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 15:17:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into gen_std_financial_year (created_at, created_by, created_on, from_year, modified_at, modified_by, modified_on, to_year, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 15:17:36 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [15:17:36]
2020-12-05 15:17:36 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-12-05 15:17:36 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 15:17:36 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [2021]
2020-12-05 15:17:36 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-05 15:17:36 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-05 15:17:36 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-05 15:17:36 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [2022]
2020-12-05 15:17:36 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [94]
2020-12-05 15:18:47 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 15:18:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [mysore1]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [HSR-20203]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [pooja11]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:21:38]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [969362587411]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [HSR3]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [5236419871]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [587201]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-05 15:18:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 15:18:47 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-05 15:18:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno is null
2020-12-05 15:20:15 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 15836 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 15:20:15 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 15:20:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 15:20:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 189ms. Found 24 repository interfaces.
2020-12-05 15:20:17 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 15:20:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 15:20:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:20:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:20:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:20:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:20:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:20:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:20:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$65ccf12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:20:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9f0a974c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:20:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:20:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3b6c624' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:20:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c3df39fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:20:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:20:17 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 15:20:17 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 15:20:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 15:20:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 15:20:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 15:20:18 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 15:20:18 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 15:20:18 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3216 ms
2020-12-05 15:20:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 15:20:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a53f215
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a53f215
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2a53f215
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6749fe50
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@ae73c80
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@40a72ecd
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@257ef9ed
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@257ef9ed
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@257ef9ed
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@575b5f7d
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@575b5f7d
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@575b5f7d
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1b2df3aa
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1b2df3aa
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b2df3aa
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@625a9c5d
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@625a9c5d
2020-12-05 15:20:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@625a9c5d
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@127705e4
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@127705e4
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@127705e4
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7c011174
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7c011174
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7c011174
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@561953e3
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@561953e3
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@561953e3
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64920dc2
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64920dc2
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2b38b1f
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2b38b1f
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@28757abd
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@28757abd
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@138aa3cc
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5f174dd2
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3d90eeb3
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d90eeb3
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7978e022
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7978e022
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@326e0b8e
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@326e0b8e
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@15f35bc3
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@15f35bc3
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@53ed80d3
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@53ed80d3
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@20a7953c
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@20a7953c
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e83a98
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e83a98
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1ee27d73
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1ee27d73
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@41b13f3d
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@41b13f3d
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@29ebbdf4
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@29ebbdf4
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@70c69586
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70c69586
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e0fbeb5
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e0fbeb5
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e0fbeb5
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b0a1231
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5a49af50
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5a49af50
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5a49af50
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60dd0587
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4976085
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4976085
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1192b58e
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1192b58e
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3134153d
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3134153d
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6e3eb0cd
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e3eb0cd
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@421def93
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@421def93
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58d6e55a
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@f5ce0bb
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@f5ce0bb
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@f5ce0bb
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@311ff287
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@311ff287
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@311ff287
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@16a5eb6d
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1a8b81e8
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@49fa1d74
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@49fa1d74
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@49fa1d74
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7cfb4736
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7cfb4736
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7cfb4736
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7650ded6
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6a916402
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@748f93bb
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@748f93bb
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a43e0ac
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3382cf68
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3382cf68
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6cd98a05
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6cd98a05
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6f6c6077
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@31120021
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2c2a027c
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5b5a4aed
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5b5a4aed
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f973a14
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76130a29
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@124d02b2
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3451f01d
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@72503b19
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1cfc2538
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@66deec87
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d342959
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1a538ed8
2020-12-05 15:20:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1a538ed8
2020-12-05 15:20:20 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@421def93
2020-12-05 15:20:20 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65514add] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79e7188e]
2020-12-05 15:20:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65514add] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1efac5b9]
2020-12-05 15:20:22 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 15:20:22 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 15:20:22 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 15:20:22 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 15:20:22 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1efac5b9] for TypeConfiguration
2020-12-05 15:20:22 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 15:20:24 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3dec769, org.springframework.security.web.context.SecurityContextPersistenceFilter@10724a72, org.springframework.security.web.header.HeaderWriterFilter@55e4dd68, org.springframework.web.filter.CorsFilter@282c5075, org.springframework.security.web.authentication.logout.LogoutFilter@3ddac0b6, com.app.config.JwtRequestFilter@1a77eb6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@10301d6f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8ecc457, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ed35f24, org.springframework.security.web.session.SessionManagementFilter@1a85e86e, org.springframework.security.web.access.ExceptionTranslationFilter@a859c5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@654db80b]
2020-12-05 15:20:24 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 15:20:24 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 15:20:24 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 15:20:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 15:20:24 [main] INFO  com.app.Application - Started Application in 10.188 seconds (JVM running for 11.106)
2020-12-05 15:20:29 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 15:20:29 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 15:20:29 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-12-05 15:20:29 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 15:20:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [mysore1]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [HSR-20203]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [pooja11]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:21:38]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [969362587411]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [HSR3]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [5236419871]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [587201]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-05 15:20:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-05 15:20:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-05 15:20:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE slno = ?
2020-12-05 15:20:30 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [25/03/1997]
2020-12-05 15:20:30 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: operator does not exist: bigint = character varying
  Hint: No operator matches the given name and argument type(s). You might need to add explicit type casts.
  Position: 47
2020-12-05 15:22:28 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 13336 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 15:22:28 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 15:22:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 15:22:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 201ms. Found 24 repository interfaces.
2020-12-05 15:22:30 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 15:22:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 15:22:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:22:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:22:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:22:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:22:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:22:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:22:30 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$521e00af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:22:30 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$eacbc8e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:22:30 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:22:30 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5754de72' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:22:30 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$fa06b9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:22:30 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:22:30 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 15:22:30 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 15:22:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 15:22:32 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 15:22:32 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 15:22:32 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 15:22:32 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 15:22:32 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4127 ms
2020-12-05 15:22:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 15:22:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@52bf7bf6
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@52bf7bf6
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52bf7bf6
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@22f4f8f2
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@73971965
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6ee99964
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@361abd01
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@361abd01
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@361abd01
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1fd9893c
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1fd9893c
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1fd9893c
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@551e4c6d
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@551e4c6d
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@551e4c6d
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3fb9a67f
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3fb9a67f
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3fb9a67f
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3f36e8d1
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3f36e8d1
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3f36e8d1
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@340d6d89
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@340d6d89
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@340d6d89
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5dc0ff7d
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5dc0ff7d
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5dc0ff7d
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67531e3a
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67531e3a
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3003e580
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3003e580
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@10a98392
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@10a98392
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1945113f
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@ceddaf8
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@27329d2a
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@27329d2a
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@57545c3f
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@57545c3f
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@76a805b7
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@76a805b7
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@591a4f8e
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@591a4f8e
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48e8c32a
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48e8c32a
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5377414a
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5377414a
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5b9ecb
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5b9ecb
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5807efad
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5807efad
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@62b93086
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@62b93086
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1eff3cfb
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1eff3cfb
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5d4e13e1
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d4e13e1
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4833eff3
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4833eff3
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4833eff3
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dd2856e
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@77f905e3
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77f905e3
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77f905e3
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3b7eac14
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@e38f0b7
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e38f0b7
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@12ad1b2a
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@12ad1b2a
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@345cbf40
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@345cbf40
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2f4b98f6
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f4b98f6
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@751ae8a4
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@751ae8a4
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2da16263
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ebffb44
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ebffb44
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ebffb44
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5edacf20
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5edacf20
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5edacf20
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@234cff57
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@d08edc5
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@724aefc3
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@724aefc3
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@724aefc3
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5034f5dd
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5034f5dd
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5034f5dd
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1a47a1e8
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3811510
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@22d9bc14
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22d9bc14
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@25f723b0
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@27be17c8
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@27be17c8
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4fc5563d
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4fc5563d
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3df1a1ac
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4baed682
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@49cb1baf
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@76130a29
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76130a29
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@72503b19
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cfc2538
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@66deec87
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d342959
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ecf5915
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42cc183e
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e4e8fdf
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4cb957b8
2020-12-05 15:22:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4cb957b8
2020-12-05 15:22:34 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@751ae8a4
2020-12-05 15:22:34 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10850d17] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51e754e1]
2020-12-05 15:22:34 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10850d17] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@8c0a23f]
2020-12-05 15:22:35 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 15:22:35 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 15:22:35 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 15:22:35 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 15:22:35 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@8c0a23f] for TypeConfiguration
2020-12-05 15:22:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 15:22:38 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68550d86, org.springframework.security.web.context.SecurityContextPersistenceFilter@7ebaf0d, org.springframework.security.web.header.HeaderWriterFilter@10301d6f, org.springframework.web.filter.CorsFilter@19d9ba89, org.springframework.security.web.authentication.logout.LogoutFilter@61246109, com.app.config.JwtRequestFilter@71f8ce0e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5690c2a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ddac0b6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@484876a1, org.springframework.security.web.session.SessionManagementFilter@21d3d6ec, org.springframework.security.web.access.ExceptionTranslationFilter@10724a72, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@362b384c]
2020-12-05 15:22:38 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 15:22:38 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 15:22:38 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 15:22:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 15:22:39 [main] INFO  com.app.Application - Started Application in 11.084 seconds (JVM running for 11.872)
2020-12-05 15:22:43 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 15:22:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 15:22:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-12-05 15:22:43 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 15:22:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [mysore1]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [HSR-20203]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [pooja11]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:21:38]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [969362587411]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [HSR3]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [5236419871]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [587201]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-05 15:22:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 15:22:43 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-05 15:22:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 15:22:44 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 15:22:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-05 15:22:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-05 15:22:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-05 15:22:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-05 15:22:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-05 15:22:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-05 15:22:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-05 15:22:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-05 15:22:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-05 15:22:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE holidayDate = ?
2020-12-05 15:22:44 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [25/03/1997]
2020-12-05 15:22:44 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "holidaydate" does not exist
  Hint: Perhaps you meant to reference the column "gen_std_holiday_list.holiday_date".
  Position: 42
2020-12-05 15:23:18 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 7904 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 15:23:18 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 15:23:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 15:23:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 355ms. Found 24 repository interfaces.
2020-12-05 15:23:20 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 15:23:20 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 15:23:20 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:23:20 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:23:20 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:23:20 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:23:20 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:23:20 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:23:20 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9f03a6c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:23:20 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$37b16efe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:23:20 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:23:20 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6daf2337' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:23:21 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5c8611b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:23:21 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:23:21 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 15:23:21 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 15:23:22 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 15:23:22 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 15:23:22 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 15:23:22 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 15:23:22 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 15:23:22 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4220 ms
2020-12-05 15:23:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 15:23:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 15:23:23 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@633fd91
2020-12-05 15:23:23 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@633fd91
2020-12-05 15:23:23 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@633fd91
2020-12-05 15:23:23 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c386958
2020-12-05 15:23:23 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1dd74143
2020-12-05 15:23:23 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@47ac613b
2020-12-05 15:23:23 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@134ff8f8
2020-12-05 15:23:23 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@134ff8f8
2020-12-05 15:23:23 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@134ff8f8
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3902bd2c
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3902bd2c
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3902bd2c
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@727320fa
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@727320fa
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@727320fa
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@51a18b21
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@51a18b21
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@51a18b21
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@766a49c7
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@766a49c7
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@766a49c7
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a756082
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a756082
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a756082
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7beae796
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7beae796
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7beae796
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@22f4f8f2
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@22f4f8f2
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17410c07
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17410c07
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@64f981e2
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@64f981e2
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@59bbb974
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1fd9893c
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@551e4c6d
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@551e4c6d
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3fb9a67f
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3fb9a67f
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3f36e8d1
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3f36e8d1
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@340d6d89
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@340d6d89
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5dc0ff7d
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5dc0ff7d
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@67531e3a
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@67531e3a
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3003e580
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3003e580
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@10a98392
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@10a98392
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57545c3f
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57545c3f
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@167381c7
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@167381c7
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6ba060f3
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6ba060f3
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@57c00115
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57c00115
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57c00115
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5377414a
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5d5b9ecb
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d5b9ecb
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d5b9ecb
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542f6803
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@316acbb5
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@316acbb5
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@717d7587
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@717d7587
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0777b5
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0777b5
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4e642ee1
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4e642ee1
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1eff3cfb
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1eff3cfb
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7e9f2c32
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2676dc05
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2676dc05
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2676dc05
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dd2856e
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dd2856e
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dd2856e
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@77f905e3
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3b7eac14
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@e38f0b7
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@e38f0b7
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@e38f0b7
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12ad1b2a
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12ad1b2a
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12ad1b2a
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5f5effb0
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6e3eb0cd
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2b2954e1
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b2954e1
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@235d659c
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5ebffb44
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ebffb44
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7e307087
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7e307087
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@234cff57
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@d08edc5
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2a097d77
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2a43e0ac
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2a43e0ac
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1084f78c
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@25f723b0
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4aa11206
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40d60f2
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3382cf68
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f74900b
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d8796c1
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e26173
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@29a33620
2020-12-05 15:23:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@29a33620
2020-12-05 15:23:24 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1eff3cfb
2020-12-05 15:23:24 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f85217c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1fd7a37]
2020-12-05 15:23:25 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f85217c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@65eb3597]
2020-12-05 15:23:25 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 15:23:26 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 15:23:26 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 15:23:26 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 15:23:26 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@65eb3597] for TypeConfiguration
2020-12-05 15:23:26 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 15:23:28 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5db90818, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d00b469, org.springframework.security.web.header.HeaderWriterFilter@5487a8f1, org.springframework.web.filter.CorsFilter@3c17794e, org.springframework.security.web.authentication.logout.LogoutFilter@7112fa5, com.app.config.JwtRequestFilter@254513e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b8fcdf2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43de9fc9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@414d2821, org.springframework.security.web.session.SessionManagementFilter@155c7eae, org.springframework.security.web.access.ExceptionTranslationFilter@5296f00c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2b0494a8]
2020-12-05 15:23:28 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 15:23:28 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 15:23:29 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 15:23:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 15:23:29 [main] INFO  com.app.Application - Started Application in 11.533 seconds (JVM running for 12.309)
2020-12-05 15:23:32 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 15:23:32 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 15:23:32 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-12-05 15:23:32 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 15:23:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [mysore1]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [HSR-20203]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [pooja11]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:21:38]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [969362587411]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [HSR3]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [5236419871]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [587201]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-05 15:23:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-05 15:23:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-05 15:23:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE holiday_date = ?
2020-12-05 15:23:33 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [25/03/1997]
2020-12-05 15:23:33 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: operator does not exist: timestamp without time zone = character varying
  Hint: No operator matches the given name and argument type(s). You might need to add explicit type casts.
  Position: 55
2020-12-05 15:32:00 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 10964 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 15:32:00 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 15:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 15:32:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 190ms. Found 24 repository interfaces.
2020-12-05 15:32:02 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 15:32:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 15:32:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:32:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:32:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:32:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:32:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:32:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:32:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7361b390] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:32:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c0f7bca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:32:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:32:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6093d508' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:32:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$30e41e7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:32:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:32:03 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 15:32:03 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 15:32:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 15:32:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 15:32:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 15:32:04 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 15:32:04 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 15:32:04 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3941 ms
2020-12-05 15:32:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 15:32:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@77c10a5f
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@77c10a5f
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77c10a5f
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@795f8317
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@97a145b
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@44d64d4e
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@60d6fdd4
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@60d6fdd4
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@60d6fdd4
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@619f2afc
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@619f2afc
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@619f2afc
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7d32e714
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7d32e714
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d32e714
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2935fd2c
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2935fd2c
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2935fd2c
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@62b790a5
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@62b790a5
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@62b790a5
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1db7157f
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1db7157f
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1db7157f
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@cb39552
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@cb39552
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@cb39552
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6749fe50
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6749fe50
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@bbd4791
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@bbd4791
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6ee99964
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6ee99964
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@46f902e0
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@575b5f7d
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1b2df3aa
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1b2df3aa
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@625a9c5d
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@625a9c5d
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@127705e4
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@127705e4
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c011174
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c011174
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@561953e3
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@561953e3
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@64920dc2
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@64920dc2
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b38b1f
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b38b1f
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@28757abd
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@28757abd
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7978e022
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7978e022
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@41184371
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@41184371
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@608b1fd2
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@608b1fd2
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7c51782d
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7c51782d
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7c51782d
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@20a7953c
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4e83a98
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4e83a98
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4e83a98
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@18a25bbd
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5583098b
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5583098b
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@56f730b2
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@56f730b2
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3e906375
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3e906375
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2489e84a
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2489e84a
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29ebbdf4
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29ebbdf4
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a0f2853
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@19e0dffe
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@19e0dffe
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@19e0dffe
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b0a1231
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b0a1231
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b0a1231
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5a49af50
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@60dd0587
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4976085
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4976085
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4976085
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1192b58e
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1192b58e
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1192b58e
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1697f2b3
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@767599a7
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3468ee6e
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3468ee6e
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@58c1da09
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@f5ce0bb
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f5ce0bb
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@31db34da
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@31db34da
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@16a5eb6d
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a8b81e8
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@21eee94f
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@18539cb1
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@18539cb1
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e7157c7
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2a43e0ac
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22d9bc14
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@346f41a9
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1084f78c
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@25f723b0
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4aa11206
2020-12-05 15:32:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40d60f2
2020-12-05 15:32:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4041739c
2020-12-05 15:32:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4041739c
2020-12-05 15:32:06 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@29ebbdf4
2020-12-05 15:32:06 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9accff0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@52559a69]
2020-12-05 15:32:06 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9accff0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@395f52ed]
2020-12-05 15:32:07 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 15:32:07 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 15:32:07 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 15:32:07 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 15:32:07 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@395f52ed] for TypeConfiguration
2020-12-05 15:32:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 15:32:10 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21ab919c, org.springframework.security.web.context.SecurityContextPersistenceFilter@155c7eae, org.springframework.security.web.header.HeaderWriterFilter@5296f00c, org.springframework.web.filter.CorsFilter@5edd9b4f, org.springframework.security.web.authentication.logout.LogoutFilter@3c68e82, com.app.config.JwtRequestFilter@4b99648a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d00b469, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44f23927, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5db90818, org.springframework.security.web.session.SessionManagementFilter@33765d22, org.springframework.security.web.access.ExceptionTranslationFilter@f439e0f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2ac3d530]
2020-12-05 15:32:10 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 15:32:10 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 15:32:10 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 15:32:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 15:32:10 [main] INFO  com.app.Application - Started Application in 10.933 seconds (JVM running for 11.709)
2020-12-05 15:32:14 [http-nio-8080-exec-9] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 15:32:14 [http-nio-8080-exec-9] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 15:32:14 [http-nio-8080-exec-9] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-12-05 15:32:14 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 15:32:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [mysore1]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [HSR-20203]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [pooja11]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:21:38]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [969362587411]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [HSR3]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [5236419871]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [587201]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-05 15:32:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-05 15:32:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-05 15:32:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE holiday_date = ?
2020-12-05 15:32:15 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [25/03/1997]
2020-12-05 15:32:15 [http-nio-8080-exec-9] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: operator does not exist: timestamp without time zone = character varying
  Hint: No operator matches the given name and argument type(s). You might need to add explicit type casts.
  Position: 55
2020-12-05 15:35:07 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 20508 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 15:35:07 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 15:35:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 15:35:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 202ms. Found 24 repository interfaces.
2020-12-05 15:35:09 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 15:35:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 15:35:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:35:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:35:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:35:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:35:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:35:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:35:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$557451be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:35:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ee2219f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:35:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:35:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@51e0301d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:35:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$12f6bcaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:35:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:35:09 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 15:35:10 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 15:35:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 15:35:10 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 15:35:10 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 15:35:10 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 15:35:11 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 15:35:11 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3736 ms
2020-12-05 15:35:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 15:35:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@40a72ecd
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@40a72ecd
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@40a72ecd
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@17410c07
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@59c70ceb
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@361abd01
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1fd9893c
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1fd9893c
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1fd9893c
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@551e4c6d
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@551e4c6d
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@551e4c6d
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3fb9a67f
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3fb9a67f
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3fb9a67f
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3f36e8d1
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3f36e8d1
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f36e8d1
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@340d6d89
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@340d6d89
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@340d6d89
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5dc0ff7d
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5dc0ff7d
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5dc0ff7d
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@67531e3a
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@67531e3a
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@67531e3a
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3003e580
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3003e580
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10a98392
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10a98392
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@697173d9
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@697173d9
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1db87583
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@27329d2a
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@57545c3f
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@57545c3f
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@76a805b7
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@76a805b7
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@591a4f8e
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@591a4f8e
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48e8c32a
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48e8c32a
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5377414a
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5377414a
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d5b9ecb
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d5b9ecb
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5807efad
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5807efad
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@47311277
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@47311277
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5731d3a
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5731d3a
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5d4e13e1
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d4e13e1
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4833eff3
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4833eff3
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3b1dc579
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3b1dc579
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3b1dc579
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77f905e3
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@777d191f
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@777d191f
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@777d191f
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@e38f0b7
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@12ad1b2a
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@12ad1b2a
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@345cbf40
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@345cbf40
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f4b98f6
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f4b98f6
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@751ae8a4
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@751ae8a4
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@47e51549
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@47e51549
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5ebffb44
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5edacf20
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5edacf20
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5edacf20
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@234cff57
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@234cff57
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@234cff57
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3f362135
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@724aefc3
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5034f5dd
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5034f5dd
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5034f5dd
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62d1dc3c
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62d1dc3c
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62d1dc3c
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@18539cb1
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2e7157c7
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@40d60f2
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@40d60f2
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6d8796c1
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1e95b653
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e95b653
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6a9cd0f8
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a9cd0f8
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@203d1d93
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d979d34
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3458eca5
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@66deec87
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@66deec87
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@42cc183e
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e4e8fdf
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a1d6ef2
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2721044
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205df5dc
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6aa7b67f
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bcc3f27
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@31973858
2020-12-05 15:35:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@31973858
2020-12-05 15:35:12 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@47e51549
2020-12-05 15:35:12 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67bb4dcd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@738d37fc]
2020-12-05 15:35:13 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67bb4dcd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7f27f59b]
2020-12-05 15:35:14 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 15:35:14 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 15:35:14 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 15:35:14 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 15:35:14 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7f27f59b] for TypeConfiguration
2020-12-05 15:35:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 15:35:16 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@323c6f9c, org.springframework.security.web.context.SecurityContextPersistenceFilter@21d3d6ec, org.springframework.security.web.header.HeaderWriterFilter@10724a72, org.springframework.web.filter.CorsFilter@dbca149, org.springframework.security.web.authentication.logout.LogoutFilter@a30dbc0, com.app.config.JwtRequestFilter@3e2d65e1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ebaf0d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f112ade, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68550d86, org.springframework.security.web.session.SessionManagementFilter@6cc44207, org.springframework.security.web.access.ExceptionTranslationFilter@1a85e86e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@282c5075]
2020-12-05 15:35:17 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 15:35:17 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 15:35:17 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 15:35:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 15:35:17 [main] INFO  com.app.Application - Started Application in 11.027 seconds (JVM running for 11.984)
2020-12-05 15:35:21 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 15:35:21 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 15:35:21 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-12-05 15:35:21 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 15:35:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [mysore1]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [HSR-20203]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [pooja11]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:21:38]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [969362587411]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [HSR3]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [5236419871]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [587201]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-05 15:35:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-05 15:35:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-05 15:35:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 15:35:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_holiday_list (branch_slno, created_at, created_by, created_on, financial_year_slno, holiday_date, holiday_name, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [15:35:22]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [satish]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIMESTAMP] - [Sat Dec 05 15:35:22 IST 2020]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [94]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [TIMESTAMP] - [Sat Jan 25 00:03:00 IST 1997]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Dipavali]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [TIME] - [null]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [VARCHAR] - [null]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [TIMESTAMP] - [null]
2020-12-05 15:35:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [BIGINT] - [95]
2020-12-05 15:47:48 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 20688 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 15:47:48 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 15:47:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 15:47:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 206ms. Found 24 repository interfaces.
2020-12-05 15:47:50 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 15:47:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 15:47:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:47:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:47:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:47:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:47:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 15:47:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 15:47:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1ad6ecb7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:47:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b384b4f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:47:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:47:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@87abc48' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:47:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d85957a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:47:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 15:47:51 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 15:47:51 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 15:47:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 15:47:52 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 15:47:52 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 15:47:52 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 15:47:52 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 15:47:52 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3771 ms
2020-12-05 15:47:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 15:47:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3e7b65d7
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3e7b65d7
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3e7b65d7
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a500561
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@210d2a6c
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@66236a0a
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@795f8317
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@795f8317
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@795f8317
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@157ec23b
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@157ec23b
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@157ec23b
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@47ac613b
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@47ac613b
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@47ac613b
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@134ff8f8
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@134ff8f8
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@134ff8f8
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3902bd2c
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3902bd2c
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3902bd2c
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@727320fa
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@727320fa
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@727320fa
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@51a18b21
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@51a18b21
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51a18b21
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@766a49c7
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@766a49c7
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a756082
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a756082
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7beae796
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7beae796
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@261db982
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@bbd4791
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6ee99964
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6ee99964
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@361abd01
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@361abd01
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1fd9893c
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1fd9893c
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@551e4c6d
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@551e4c6d
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3fb9a67f
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3fb9a67f
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3f36e8d1
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3f36e8d1
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@340d6d89
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@340d6d89
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5dc0ff7d
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5dc0ff7d
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30839e44
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30839e44
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1db87583
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1db87583
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2f894ad9
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2f894ad9
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@36baa049
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@36baa049
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@36baa049
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@76a805b7
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@591a4f8e
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@591a4f8e
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@591a4f8e
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c51782d
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@411a5965
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@411a5965
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@71b639d0
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@71b639d0
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@542f6803
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@542f6803
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@316acbb5
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@316acbb5
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@717d7587
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@717d7587
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b7aa898
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@62b93086
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@62b93086
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@62b93086
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5731d3a
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5731d3a
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5731d3a
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7e9f2c32
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3e0fbeb5
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4694f434
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4694f434
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4694f434
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@793d163b
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@793d163b
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@793d163b
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@221a2068
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4976085
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5f631ca0
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f631ca0
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3134153d
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@659feb22
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@659feb22
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@751ae8a4
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@751ae8a4
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2da16263
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@101a461c
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5edacf20
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2a097d77
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2a097d77
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5034f5dd
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31b7d869
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a916402
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1a47a1e8
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6d2a2560
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62d1dc3c
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3811510
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@24eeac69
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@526e8108
2020-12-05 15:47:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@526e8108
2020-12-05 15:47:54 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@717d7587
2020-12-05 15:47:54 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1903b5d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4041739c]
2020-12-05 15:47:55 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1903b5d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@26457986]
2020-12-05 15:47:55 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 15:47:56 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 15:47:56 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 15:47:56 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 15:47:56 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@26457986] for TypeConfiguration
2020-12-05 15:47:56 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 15:47:58 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17c34e62, org.springframework.security.web.context.SecurityContextPersistenceFilter@23dff243, org.springframework.security.web.header.HeaderWriterFilter@379b4e86, org.springframework.web.filter.CorsFilter@239d73ff, org.springframework.security.web.authentication.logout.LogoutFilter@74a03bd5, com.app.config.JwtRequestFilter@b529d7e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@17dbca0a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b8fcdf2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6bf28f61, org.springframework.security.web.session.SessionManagementFilter@3e5c7588, org.springframework.security.web.access.ExceptionTranslationFilter@3093b9ff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@47772462]
2020-12-05 15:47:58 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 15:47:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 15:47:58 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 15:47:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 15:47:58 [main] INFO  com.app.Application - Started Application in 10.515 seconds (JVM running for 11.73)
2020-12-05 15:48:14 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 15:48:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 15:48:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2020-12-05 15:48:14 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 15:48:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-05 15:48:14 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 15:48:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 15:48:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 15:48:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 16:11:10 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 20564 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 16:11:10 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 16:11:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 16:11:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 232ms. Found 24 repository interfaces.
2020-12-05 16:11:12 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 16:11:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 16:11:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 16:11:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 16:11:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 16:11:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 16:11:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 16:11:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 16:11:13 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e37dd37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 16:11:13 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b6e5a571] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 16:11:13 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 16:11:13 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6124287a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 16:11:13 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$dbba4823] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 16:11:13 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 16:11:13 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 16:11:13 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 16:11:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 16:11:14 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 16:11:14 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 16:11:14 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 16:11:14 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 16:11:14 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4218 ms
2020-12-05 16:11:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 16:11:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6bccd036
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6bccd036
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6bccd036
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@cb39552
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b63e6ad
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@52bf7bf6
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@40a72ecd
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@40a72ecd
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@40a72ecd
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@257ef9ed
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@257ef9ed
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@257ef9ed
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@575b5f7d
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@575b5f7d
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@575b5f7d
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1b2df3aa
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1b2df3aa
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b2df3aa
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@625a9c5d
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@625a9c5d
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@625a9c5d
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@127705e4
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@127705e4
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@127705e4
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7c011174
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7c011174
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7c011174
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@561953e3
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@561953e3
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@64920dc2
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@64920dc2
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2b38b1f
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b38b1f
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2e766822
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@21a02556
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5f174dd2
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5f174dd2
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3d90eeb3
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3d90eeb3
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7978e022
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7978e022
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@326e0b8e
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@326e0b8e
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@15f35bc3
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@15f35bc3
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@53ed80d3
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@53ed80d3
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@20a7953c
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@20a7953c
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e83a98
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e83a98
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e60b459
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e60b459
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2489e84a
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2489e84a
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@29ebbdf4
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29ebbdf4
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@70c69586
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@70c69586
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@70c69586
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19e0dffe
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@b0a1231
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@b0a1231
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@b0a1231
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@56928e17
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@60dd0587
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60dd0587
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4976085
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4976085
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1192b58e
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1192b58e
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3134153d
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3134153d
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e3eb0cd
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e3eb0cd
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3468ee6e
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@58d6e55a
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@58d6e55a
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@58d6e55a
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f5ce0bb
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f5ce0bb
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f5ce0bb
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@311ff287
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@109f8c7e
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1a8b81e8
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a8b81e8
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1a8b81e8
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@49fa1d74
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@49fa1d74
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@49fa1d74
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6bc24e72
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a097d77
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6d2a2560
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6d2a2560
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@24eeac69
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@346f41a9
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@346f41a9
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6d8796c1
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d8796c1
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c413ffc
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b8ec001
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@58606c91
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1e0fdb2f
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1e0fdb2f
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@47768e74
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2740e316
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5b5a4aed
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c991465
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5fef2aac
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7f973a14
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@76130a29
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@124d02b2
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@15fb4566
2020-12-05 16:11:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@15fb4566
2020-12-05 16:11:16 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6e3eb0cd
2020-12-05 16:11:16 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cdc7b09] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7364eed1]
2020-12-05 16:11:17 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cdc7b09] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1d2fb82]
2020-12-05 16:11:17 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 16:11:18 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 16:11:18 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 16:11:18 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 16:11:18 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1d2fb82] for TypeConfiguration
2020-12-05 16:11:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 16:11:20 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@362b384c, org.springframework.security.web.context.SecurityContextPersistenceFilter@5ef591af, org.springframework.security.web.header.HeaderWriterFilter@6f36267d, org.springframework.web.filter.CorsFilter@433b546f, org.springframework.security.web.authentication.logout.LogoutFilter@20c283b4, com.app.config.JwtRequestFilter@2db3675a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@71fb1da3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@694b1ddb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9de1b85, org.springframework.security.web.session.SessionManagementFilter@10301d6f, org.springframework.security.web.access.ExceptionTranslationFilter@6a63ff31, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@336070ab]
2020-12-05 16:11:20 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 16:11:21 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 16:11:21 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 16:11:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 16:11:21 [main] INFO  com.app.Application - Started Application in 11.601 seconds (JVM running for 12.604)
2020-12-05 16:11:48 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 16:11:48 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 16:11:48 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-12-05 16:11:48 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 16:11:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 16:11:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 16:11:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 16:11:49 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 16:12:15 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 16:12:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [mysore1]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [HSR-20203]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [pooja11]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:21:38]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [969362587411]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [HSR3]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [5236419871]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [587201]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-05 16:12:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-05 16:12:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-05 16:12:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE holiday_date = ?
2020-12-05 16:12:15 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [25/03/1997]
2020-12-05 16:12:15 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: operator does not exist: timestamp without time zone = character varying
  Hint: No operator matches the given name and argument type(s). You might need to add explicit type casts.
  Position: 55
2020-12-05 16:13:56 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 16:13:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 16:13:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 16:13:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 16:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 16:15:44 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 3364 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 16:15:44 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 16:15:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 16:15:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 249ms. Found 24 repository interfaces.
2020-12-05 16:15:47 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 16:15:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 16:15:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 16:15:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 16:15:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 16:15:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 16:15:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 16:15:47 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 16:15:47 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$521e00af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 16:15:47 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$eacbc8e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 16:15:47 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 16:15:47 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@31ee96f4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 16:15:47 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$fa06b9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 16:15:47 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 16:15:48 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 16:15:48 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 16:15:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 16:15:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 16:15:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 16:15:49 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 16:15:49 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 16:15:49 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4561 ms
2020-12-05 16:15:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 16:15:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@52bf7bf6
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@52bf7bf6
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52bf7bf6
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@22f4f8f2
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@73971965
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6ee99964
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@361abd01
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@361abd01
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@361abd01
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1fd9893c
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1fd9893c
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1fd9893c
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@551e4c6d
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@551e4c6d
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@551e4c6d
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3fb9a67f
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3fb9a67f
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3fb9a67f
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3f36e8d1
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3f36e8d1
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3f36e8d1
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@340d6d89
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@340d6d89
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@340d6d89
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5dc0ff7d
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5dc0ff7d
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5dc0ff7d
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67531e3a
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67531e3a
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3003e580
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3003e580
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@10a98392
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@10a98392
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1945113f
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@ceddaf8
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@27329d2a
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@27329d2a
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@57545c3f
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@57545c3f
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@76a805b7
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@76a805b7
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@591a4f8e
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@591a4f8e
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48e8c32a
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48e8c32a
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5377414a
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5377414a
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5b9ecb
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5b9ecb
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5807efad
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5807efad
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@62b93086
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@62b93086
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1eff3cfb
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1eff3cfb
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5d4e13e1
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d4e13e1
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4833eff3
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4833eff3
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4833eff3
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dd2856e
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@77f905e3
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77f905e3
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77f905e3
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3b7eac14
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@e38f0b7
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e38f0b7
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@12ad1b2a
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@12ad1b2a
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@345cbf40
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@345cbf40
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2f4b98f6
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f4b98f6
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@751ae8a4
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@751ae8a4
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2da16263
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ebffb44
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ebffb44
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ebffb44
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5edacf20
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5edacf20
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5edacf20
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@234cff57
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@d08edc5
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@724aefc3
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@724aefc3
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@724aefc3
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5034f5dd
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5034f5dd
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5034f5dd
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1a47a1e8
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3811510
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@22d9bc14
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22d9bc14
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@25f723b0
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@27be17c8
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@27be17c8
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4fc5563d
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4fc5563d
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3df1a1ac
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4baed682
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@49cb1baf
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@76130a29
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76130a29
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@72503b19
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cfc2538
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@66deec87
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d342959
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ecf5915
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42cc183e
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e4e8fdf
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4cb957b8
2020-12-05 16:15:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4cb957b8
2020-12-05 16:15:51 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@751ae8a4
2020-12-05 16:15:51 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10850d17] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51e754e1]
2020-12-05 16:15:52 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10850d17] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@8c0a23f]
2020-12-05 16:15:53 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 16:15:53 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 16:15:53 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 16:15:53 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 16:15:54 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@8c0a23f] for TypeConfiguration
2020-12-05 16:15:54 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 16:15:56 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@433b546f, org.springframework.security.web.context.SecurityContextPersistenceFilter@5ef591af, org.springframework.security.web.header.HeaderWriterFilter@6f36267d, org.springframework.web.filter.CorsFilter@9de1b85, org.springframework.security.web.authentication.logout.LogoutFilter@20c283b4, com.app.config.JwtRequestFilter@2db3675a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@71fb1da3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@694b1ddb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3d405fe5, org.springframework.security.web.session.SessionManagementFilter@10301d6f, org.springframework.security.web.access.ExceptionTranslationFilter@6a63ff31, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3be50b2c]
2020-12-05 16:15:56 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 16:15:56 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 16:15:56 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 16:15:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 16:15:56 [main] INFO  com.app.Application - Started Application in 12.541 seconds (JVM running for 13.317)
2020-12-05 16:16:01 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 16:16:01 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 16:16:01 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-12-05 16:16:01 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 16:16:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 16:16:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 16:16:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 16:16:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 17:00:13 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 16916 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 17:00:13 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 17:00:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 17:00:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 273ms. Found 24 repository interfaces.
2020-12-05 17:00:15 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 17:00:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 17:00:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:00:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:00:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:00:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:00:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:00:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:00:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed7b5594] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:00:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$86291dce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:00:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:00:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@35d3ab60' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:00:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$aafdc080] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:00:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:00:16 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 17:00:16 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 17:00:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 17:00:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 17:00:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 17:00:17 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 17:00:17 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 17:00:17 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4326 ms
2020-12-05 17:00:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 17:00:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@18137eab
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@18137eab
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18137eab
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f018494
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@51a18b21
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7523a3dc
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6bccd036
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6bccd036
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6bccd036
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2a53f215
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2a53f215
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a53f215
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@261db982
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@261db982
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@261db982
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@73971965
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@73971965
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@73971965
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@59c70ceb
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@59c70ceb
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@59c70ceb
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@59bbb974
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@59bbb974
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@59bbb974
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@44be69aa
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@44be69aa
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44be69aa
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5d1e0fbb
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5d1e0fbb
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5562c2c9
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5562c2c9
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@794366a5
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@794366a5
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@340d6d89
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ee47d9e
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@493ac8d3
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@493ac8d3
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@51ab1ee3
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@51ab1ee3
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3c8a7e38
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3c8a7e38
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1945113f
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1945113f
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1db87583
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1db87583
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2f894ad9
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2f894ad9
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@36baa049
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@36baa049
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@167381c7
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@167381c7
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@71b639d0
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@71b639d0
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5807efad
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5807efad
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@47311277
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@47311277
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@40230eb9
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@40230eb9
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@40230eb9
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c0777b5
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4e642ee1
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4e642ee1
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4e642ee1
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5731d3a
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7e9f2c32
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e9f2c32
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2676dc05
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2676dc05
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@dd2856e
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@dd2856e
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@77f905e3
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@77f905e3
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@777d191f
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@777d191f
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e38f0b7
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@12ad1b2a
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@12ad1b2a
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@12ad1b2a
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@345cbf40
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@345cbf40
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@345cbf40
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2f4b98f6
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2b2954e1
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2da16263
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2da16263
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2da16263
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ebffb44
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ebffb44
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ebffb44
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@31db34da
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@16a5eb6d
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d08edc5
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d08edc5
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@21eee94f
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5034f5dd
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5034f5dd
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@24eeac69
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@24eeac69
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7f2d31af
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@22d9bc14
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2f74900b
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6a9cd0f8
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a9cd0f8
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@203d1d93
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2c2a027c
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@118dcbbd
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d979d34
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@350ec690
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49cb1baf
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3664f108
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@77dba4cd
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@208205ed
2020-12-05 17:00:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@208205ed
2020-12-05 17:00:19 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@777d191f
2020-12-05 17:00:19 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77f4c040] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@606a1bc4]
2020-12-05 17:00:20 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77f4c040] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5aa76ad2]
2020-12-05 17:00:21 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 17:00:21 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 17:00:21 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 17:00:21 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 17:00:21 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5aa76ad2] for TypeConfiguration
2020-12-05 17:00:21 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:00:23 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56dde9f7, org.springframework.security.web.context.SecurityContextPersistenceFilter@342dc040, org.springframework.security.web.header.HeaderWriterFilter@1bde9a22, org.springframework.web.filter.CorsFilter@4b2acb12, org.springframework.security.web.authentication.logout.LogoutFilter@25435731, com.app.config.JwtRequestFilter@5c703860, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@281ca256, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@37083af6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@455d04d2, org.springframework.security.web.session.SessionManagementFilter@1e66bf2d, org.springframework.security.web.access.ExceptionTranslationFilter@2d3eb1ea, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@59a3eaf7]
2020-12-05 17:00:23 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 17:00:23 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 17:00:24 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 17:00:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 17:00:24 [main] INFO  com.app.Application - Started Application in 11.654 seconds (JVM running for 12.469)
2020-12-05 17:00:38 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 17:00:38 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 17:00:38 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 28 ms
2020-12-05 17:00:38 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:00:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [mysore1]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [HSR-20203]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [pooja11]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:21:38]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [969362587411]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [HSR3]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [5236419871]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [587201]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-05 17:00:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 17:00:38 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-05 17:00:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-05 17:00:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 17:00:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_holiday_list (branch_slno, created_at, created_by, created_on, financial_year_slno, holiday_date, holiday_name, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [17:00:39]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [satish]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIMESTAMP] - [Sat Dec 05 17:00:39 IST 2020]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [94]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [TIMESTAMP] - [Sat Jan 25 00:03:00 IST 1997]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Dipavali]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [TIME] - [null]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [VARCHAR] - [null]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [TIMESTAMP] - [null]
2020-12-05 17:00:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [BIGINT] - [96]
2020-12-05 17:19:54 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 7384 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 17:19:54 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 17:19:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 17:19:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 213ms. Found 24 repository interfaces.
2020-12-05 17:19:57 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 17:19:57 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 17:19:57 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:19:57 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:19:57 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:19:57 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:19:57 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:19:57 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:19:57 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a40a1be6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:19:57 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3cb7e420] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:19:57 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:19:57 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5e9456ae' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:19:57 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$618c86d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:19:57 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:19:57 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 17:19:57 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 17:19:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 17:19:59 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 17:19:59 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 17:19:59 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 17:19:59 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 17:19:59 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4812 ms
2020-12-05 17:20:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 17:20:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@619f2afc
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@619f2afc
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@619f2afc
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2152ab30
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@eb6ec6
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@727320fa
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@51a18b21
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@51a18b21
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51a18b21
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@766a49c7
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@766a49c7
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@766a49c7
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6a756082
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6a756082
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6a756082
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7beae796
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7beae796
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7beae796
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@22f4f8f2
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@22f4f8f2
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@22f4f8f2
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@17410c07
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@17410c07
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@17410c07
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@64f981e2
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@64f981e2
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@64f981e2
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@12f49ca8
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@12f49ca8
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@21da4b5f
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@21da4b5f
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@9b76b60
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@9b76b60
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5562c2c9
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f36e8d1
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@340d6d89
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@340d6d89
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5dc0ff7d
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5dc0ff7d
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@67531e3a
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@67531e3a
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3003e580
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3003e580
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10a98392
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10a98392
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@697173d9
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@697173d9
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d6d1d42
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d6d1d42
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6993c8df
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6993c8df
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@48e8c32a
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@48e8c32a
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@17aa8a11
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@17aa8a11
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5e5aafc6
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e5aafc6
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7ce85af2
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ce85af2
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ce85af2
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@47311277
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@40230eb9
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40230eb9
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40230eb9
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c0777b5
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4e642ee1
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4e642ee1
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1eff3cfb
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1eff3cfb
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d4e13e1
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d4e13e1
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4833eff3
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4833eff3
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3b1dc579
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3b1dc579
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77f905e3
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@777d191f
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@777d191f
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@777d191f
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4f8d86e4
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4f8d86e4
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4f8d86e4
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@767599a7
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@345cbf40
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2f4b98f6
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f4b98f6
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2f4b98f6
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@751ae8a4
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@751ae8a4
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@751ae8a4
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2da16263
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@101a461c
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5edacf20
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5edacf20
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1220ef43
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3f362135
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f362135
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7650ded6
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7650ded6
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a916402
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@62d1dc3c
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2a43e0ac
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3b8ec001
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b8ec001
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4fc5563d
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@286090c
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@31120021
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3df1a1ac
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@58606c91
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6a9cd0f8
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4baed682
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7be2f29a
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6436e181
2020-12-05 17:20:02 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6436e181
2020-12-05 17:20:02 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3b1dc579
2020-12-05 17:20:02 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9687f55] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5700c9db]
2020-12-05 17:20:03 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9687f55] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5e85c21b]
2020-12-05 17:20:04 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 17:20:04 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 17:20:04 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 17:20:04 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 17:20:04 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5e85c21b] for TypeConfiguration
2020-12-05 17:20:04 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:20:05 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-05 17:20:05 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-05 17:20:05 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:20:05 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:20:06 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-05 17:20:06 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:20:06 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5e85c21b] for TypeConfiguration
2020-12-05 17:20:06 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@652f26da] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5e85c21b]
2020-12-05 17:20:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-05 17:20:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-05 17:20:06 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-05 17:20:06 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-05 17:25:23 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 15924 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 17:25:23 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 17:25:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 17:25:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 201ms. Found 24 repository interfaces.
2020-12-05 17:25:25 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 17:25:25 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 17:25:25 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:25:25 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:25:25 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:25:25 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:25:25 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:25:25 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:25:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3057f9b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:25:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c905c1f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:25:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:25:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1eb6e1c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:25:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$edda64a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:25:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:25:26 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 17:25:26 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 17:25:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 17:25:27 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 17:25:27 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 17:25:27 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 17:25:27 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 17:25:27 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3791 ms
2020-12-05 17:25:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 17:25:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@17410c07
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@17410c07
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@17410c07
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@59c70ceb
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@361abd01
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7165d530
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7219ac49
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7219ac49
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7219ac49
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2eed37f4
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2eed37f4
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2eed37f4
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@673c4f6e
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@673c4f6e
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@673c4f6e
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@480b57e2
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@480b57e2
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@480b57e2
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1ee47d9e
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1ee47d9e
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1ee47d9e
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@493ac8d3
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@493ac8d3
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@493ac8d3
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@51ab1ee3
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@51ab1ee3
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51ab1ee3
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3c8a7e38
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3c8a7e38
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1945113f
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1945113f
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1db87583
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1db87583
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@27329d2a
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5afbd567
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@41184371
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@41184371
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@608b1fd2
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@608b1fd2
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c51782d
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c51782d
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@411a5965
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@411a5965
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@71b639d0
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@71b639d0
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@542f6803
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@542f6803
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@316acbb5
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@316acbb5
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@717d7587
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@717d7587
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@70c69586
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@70c69586
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2676dc05
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2676dc05
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@dd2856e
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@dd2856e
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@77f905e3
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@77f905e3
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@77f905e3
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3b7eac14
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@e38f0b7
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@e38f0b7
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@e38f0b7
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f631ca0
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5f5effb0
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5f5effb0
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@659feb22
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@659feb22
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b2954e1
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b2954e1
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2da16263
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2da16263
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5ebffb44
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5ebffb44
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31db34da
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1220ef43
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1220ef43
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1220ef43
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@d08edc5
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@d08edc5
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@d08edc5
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@724aefc3
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@53c1179a
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1a47a1e8
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a47a1e8
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1a47a1e8
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18539cb1
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18539cb1
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18539cb1
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e7157c7
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@346f41a9
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6d8796c1
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6d8796c1
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2c413ffc
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@286090c
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@286090c
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@203d1d93
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@203d1d93
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d979d34
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3664f108
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@34b87182
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@53e76c11
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@53e76c11
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a1d6ef2
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2721044
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@205df5dc
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6aa7b67f
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6bcc3f27
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@79aee22a
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36920bd6
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61514735
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@773014d3
2020-12-05 17:25:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@773014d3
2020-12-05 17:25:29 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5ebffb44
2020-12-05 17:25:29 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61bb1e4d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5c53f292]
2020-12-05 17:25:30 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61bb1e4d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@756b2d90]
2020-12-05 17:25:30 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 17:25:31 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 17:25:31 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 17:25:31 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 17:25:31 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@756b2d90] for TypeConfiguration
2020-12-05 17:25:31 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:25:32 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-05 17:25:32 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-05 17:25:32 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:25:32 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:25:32 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-05 17:25:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:25:32 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@756b2d90] for TypeConfiguration
2020-12-05 17:25:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@568ef502] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@756b2d90]
2020-12-05 17:25:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-05 17:25:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-05 17:25:32 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-05 17:25:32 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-05 17:25:43 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 8436 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 17:25:43 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 17:25:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 17:25:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 211ms. Found 24 repository interfaces.
2020-12-05 17:25:45 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 17:25:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 17:25:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:25:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:25:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:25:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:25:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:25:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:25:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$986549f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:25:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3113122f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:25:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:25:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@52a70627' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:25:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$55e7b4e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:25:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:25:46 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 17:25:46 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 17:25:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 17:25:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 17:25:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 17:25:47 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 17:25:47 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 17:25:47 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4073 ms
2020-12-05 17:25:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 17:25:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@75e27856
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@75e27856
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@75e27856
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6a756082
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2a53f215
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6749fe50
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@bbd4791
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@bbd4791
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@bbd4791
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6ee99964
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6ee99964
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ee99964
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@361abd01
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@361abd01
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@361abd01
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1fd9893c
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1fd9893c
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1fd9893c
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@551e4c6d
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@551e4c6d
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@551e4c6d
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3fb9a67f
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3fb9a67f
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3fb9a67f
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3f36e8d1
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3f36e8d1
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f36e8d1
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@340d6d89
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@340d6d89
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5dc0ff7d
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5dc0ff7d
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@67531e3a
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@67531e3a
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51ab1ee3
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28757abd
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@30839e44
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30839e44
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@ceddaf8
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@ceddaf8
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@27329d2a
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@27329d2a
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@57545c3f
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@57545c3f
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@76a805b7
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@76a805b7
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@591a4f8e
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@591a4f8e
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48e8c32a
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48e8c32a
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5377414a
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5377414a
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7930ffa9
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7930ffa9
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7c0777b5
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c0777b5
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4e642ee1
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4e642ee1
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1eff3cfb
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1eff3cfb
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1eff3cfb
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7e9f2c32
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2676dc05
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2676dc05
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2676dc05
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4694f434
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@793d163b
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@793d163b
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3b7eac14
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b7eac14
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@e38f0b7
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@e38f0b7
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@12ad1b2a
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12ad1b2a
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@345cbf40
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@345cbf40
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@659feb22
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2b2954e1
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2b2954e1
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2b2954e1
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2da16263
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2da16263
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2da16263
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5ebffb44
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@31db34da
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1220ef43
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1220ef43
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1220ef43
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@d08edc5
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@d08edc5
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@d08edc5
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@21eee94f
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7cfb4736
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1a47a1e8
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a47a1e8
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3811510
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@22d9bc14
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@22d9bc14
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2f74900b
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2f74900b
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27be17c8
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6cd98a05
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3df1a1ac
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3458eca5
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3458eca5
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34b87182
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@47768e74
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2740e316
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5b5a4aed
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2c991465
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5fef2aac
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f973a14
2020-12-05 17:25:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@76130a29
2020-12-05 17:25:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@44dc7b7d
2020-12-05 17:25:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@44dc7b7d
2020-12-05 17:25:49 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@345cbf40
2020-12-05 17:25:49 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4cb957b8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3cdc7b09]
2020-12-05 17:25:49 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4cb957b8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5a4dda2]
2020-12-05 17:25:50 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 17:25:50 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 17:25:50 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 17:25:50 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 17:25:50 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5a4dda2] for TypeConfiguration
2020-12-05 17:25:50 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:25:52 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-05 17:25:52 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-05 17:25:52 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:25:52 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:25:52 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-05 17:25:52 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:25:52 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5a4dda2] for TypeConfiguration
2020-12-05 17:25:52 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5c930fc3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5a4dda2]
2020-12-05 17:25:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-05 17:25:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-05 17:25:52 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-05 17:25:52 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-05 17:27:29 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 7604 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 17:27:29 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 17:27:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 17:27:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 260ms. Found 24 repository interfaces.
2020-12-05 17:27:31 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 17:27:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 17:27:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:27:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:27:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:27:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:27:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:27:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:27:32 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$efc69acd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:27:32 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$88746307] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:27:32 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:27:32 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2b8d084' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:27:32 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ad4905b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:27:32 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:27:32 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 17:27:32 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 17:27:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 17:27:33 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 17:27:33 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 17:27:33 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 17:27:33 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 17:27:33 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4472 ms
2020-12-05 17:27:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 17:27:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@795f8317
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@795f8317
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@795f8317
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@97a145b
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@44d64d4e
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3166f664
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@44a085e5
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@44a085e5
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@44a085e5
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2152ab30
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2152ab30
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2152ab30
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@18137eab
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@18137eab
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18137eab
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57fbc06f
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57fbc06f
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57fbc06f
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2806d6da
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2806d6da
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2806d6da
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4f4c88f9
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4f4c88f9
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4f4c88f9
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b63e6ad
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6b63e6ad
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b63e6ad
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@ae73c80
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@ae73c80
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76a14c8d
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76a14c8d
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@46f902e0
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@46f902e0
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@575b5f7d
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@12f49ca8
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@21da4b5f
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@21da4b5f
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@9b76b60
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@9b76b60
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@15c487a8
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@15c487a8
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@40f35e52
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@40f35e52
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@41da3aee
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@41da3aee
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13dbed9e
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13dbed9e
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2e766822
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2e766822
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@138aa3cc
2020-12-05 17:27:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@138aa3cc
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6993c8df
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6993c8df
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@15f35bc3
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15f35bc3
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@53ed80d3
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53ed80d3
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@20a7953c
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@20a7953c
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@20a7953c
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4fe533ff
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@18a25bbd
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18a25bbd
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18a25bbd
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e5aafc6
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7ce85af2
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7ce85af2
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1e60b459
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e60b459
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@41b13f3d
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@41b13f3d
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@254449bb
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@254449bb
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a0f2853
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a0f2853
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6dc1dc69
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3976ebfa
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3976ebfa
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3976ebfa
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@56928e17
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@56928e17
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@56928e17
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@60dd0587
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@338766de
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@31142d58
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@31142d58
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@31142d58
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1697f2b3
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1697f2b3
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1697f2b3
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@767599a7
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@345cbf40
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@58c1da09
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@58c1da09
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@751ae8a4
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@360e9c06
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@360e9c06
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@16a5eb6d
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@16a5eb6d
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a8b81e8
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4bcaa195
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7cfb4736
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2e7157c7
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2e7157c7
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@346f41a9
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1084f78c
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25f723b0
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4aa11206
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40d60f2
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3382cf68
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f74900b
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6d8796c1
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@62b57479
2020-12-05 17:27:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@62b57479
2020-12-05 17:27:35 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6a0f2853
2020-12-05 17:27:35 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1039bfc4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7f85217c]
2020-12-05 17:27:36 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1039bfc4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7a84788f]
2020-12-05 17:27:37 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 17:27:37 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 17:27:37 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 17:27:37 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 17:27:37 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7a84788f] for TypeConfiguration
2020-12-05 17:27:37 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:27:38 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-05 17:27:38 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-05 17:27:38 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:27:38 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:27:38 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-05 17:27:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:27:38 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7a84788f] for TypeConfiguration
2020-12-05 17:27:38 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6796a873] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7a84788f]
2020-12-05 17:27:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-05 17:27:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-05 17:27:39 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-05 17:27:39 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-05 17:28:14 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 21476 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 17:28:14 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 17:28:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 17:28:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 217ms. Found 24 repository interfaces.
2020-12-05 17:28:17 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 17:28:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 17:28:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:28:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:28:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:28:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:28:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:28:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:28:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a6a3830] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:28:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$2318006a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:28:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:28:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6e1f8469' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:28:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$47eca31c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:28:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:28:17 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 17:28:17 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 17:28:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 17:28:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 17:28:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 17:28:18 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 17:28:18 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 17:28:18 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4151 ms
2020-12-05 17:28:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 17:28:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@cb39552
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@cb39552
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@cb39552
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6b63e6ad
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@52bf7bf6
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@22f4f8f2
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@17410c07
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@17410c07
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17410c07
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@64f981e2
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@64f981e2
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@64f981e2
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@12f49ca8
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@12f49ca8
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@12f49ca8
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@21da4b5f
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@21da4b5f
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@21da4b5f
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@9b76b60
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@9b76b60
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9b76b60
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@15c487a8
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@15c487a8
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15c487a8
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@40f35e52
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@40f35e52
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@40f35e52
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@41da3aee
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@41da3aee
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13dbed9e
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13dbed9e
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2e766822
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2e766822
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@21a02556
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@10a98392
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@697173d9
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@697173d9
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1d6d1d42
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1d6d1d42
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6993c8df
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6993c8df
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@34585ac9
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@34585ac9
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@56382bc9
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@56382bc9
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@77bc2e16
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@77bc2e16
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4fe533ff
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4fe533ff
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18a25bbd
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18a25bbd
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@40230eb9
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@40230eb9
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@254449bb
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@254449bb
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6a0f2853
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6a0f2853
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@19e0dffe
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19e0dffe
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19e0dffe
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3976ebfa
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@56928e17
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56928e17
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56928e17
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3b1dc579
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@338766de
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@338766de
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@31142d58
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@31142d58
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1697f2b3
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1697f2b3
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@25d0cb3a
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@25d0cb3a
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3468ee6e
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3468ee6e
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58c1da09
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4232b34a
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4232b34a
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4232b34a
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@360e9c06
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@360e9c06
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@360e9c06
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@109f8c7e
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7e307087
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4bcaa195
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4bcaa195
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4bcaa195
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6bc24e72
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6bc24e72
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6bc24e72
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2a097d77
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5034f5dd
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@24eeac69
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@24eeac69
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7f2d31af
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4aa11206
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aa11206
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2c413ffc
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c413ffc
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b8ec001
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4fc5563d
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7be2f29a
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@47768e74
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@47768e74
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c991465
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5fef2aac
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7f973a14
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@76130a29
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@124d02b2
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3451f01d
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72503b19
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1cfc2538
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@e29f4f6
2020-12-05 17:28:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@e29f4f6
2020-12-05 17:28:20 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3468ee6e
2020-12-05 17:28:20 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ecc02bb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31973858]
2020-12-05 17:28:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ecc02bb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1edccfd4]
2020-12-05 17:28:22 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 17:28:22 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 17:28:22 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 17:28:22 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 17:28:22 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1edccfd4] for TypeConfiguration
2020-12-05 17:28:22 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:28:24 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-05 17:28:24 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-05 17:28:24 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:28:24 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:28:24 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-05 17:28:24 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:28:24 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1edccfd4] for TypeConfiguration
2020-12-05 17:28:24 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7b80af04] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1edccfd4]
2020-12-05 17:28:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-05 17:28:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-05 17:28:24 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-05 17:28:24 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-05 17:29:40 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 16632 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 17:29:40 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 17:29:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 17:29:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 223ms. Found 24 repository interfaces.
2020-12-05 17:29:42 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 17:29:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 17:29:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:29:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:29:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:29:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:29:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:29:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:29:43 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6e54789d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:29:43 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$70240d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:29:43 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:29:43 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@52b6319f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:29:43 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2bd6e389] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:29:43 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:29:43 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 17:29:43 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 17:29:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 17:29:44 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 17:29:44 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 17:29:44 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 17:29:44 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 17:29:44 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4417 ms
2020-12-05 17:29:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 17:29:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2152ab30
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2152ab30
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2152ab30
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@eb6ec6
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@727320fa
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3ce443f9
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7523a3dc
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7523a3dc
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7523a3dc
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6bccd036
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6bccd036
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6bccd036
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a53f215
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a53f215
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a53f215
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@261db982
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@261db982
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@261db982
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@73971965
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@73971965
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@73971965
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@59c70ceb
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@59c70ceb
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@59c70ceb
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@59bbb974
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@59bbb974
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59bbb974
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44be69aa
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44be69aa
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5d1e0fbb
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5d1e0fbb
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5562c2c9
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5562c2c9
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3f36e8d1
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@480b57e2
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1ee47d9e
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1ee47d9e
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@493ac8d3
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@493ac8d3
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@51ab1ee3
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51ab1ee3
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c8a7e38
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c8a7e38
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1945113f
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1945113f
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1db87583
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1db87583
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2f894ad9
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2f894ad9
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@36baa049
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@36baa049
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@411a5965
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@411a5965
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5d5b9ecb
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d5b9ecb
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5807efad
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5807efad
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@47311277
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@47311277
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@47311277
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@717d7587
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7c0777b5
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c0777b5
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c0777b5
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62b93086
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5731d3a
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5731d3a
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7e9f2c32
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e9f2c32
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2676dc05
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2676dc05
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@dd2856e
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@dd2856e
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@77f905e3
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@77f905e3
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3b7eac14
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@e38f0b7
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@e38f0b7
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@e38f0b7
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12ad1b2a
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12ad1b2a
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12ad1b2a
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@345cbf40
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@659feb22
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2b2954e1
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2b2954e1
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2b2954e1
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2da16263
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2da16263
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2da16263
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@101a461c
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@311ff287
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1220ef43
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1220ef43
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5e8507f1
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@724aefc3
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@724aefc3
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6a916402
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a916402
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@62d1dc3c
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@18539cb1
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1084f78c
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4fc5563d
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4fc5563d
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3df1a1ac
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58606c91
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a9cd0f8
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4baed682
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7be2f29a
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@203d1d93
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c2a027c
2020-12-05 17:29:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@118dcbbd
2020-12-05 17:29:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@65ef48f2
2020-12-05 17:29:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@65ef48f2
2020-12-05 17:29:47 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@77f905e3
2020-12-05 17:29:47 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6babffb5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2173a742]
2020-12-05 17:29:47 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6babffb5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@39832280]
2020-12-05 17:29:48 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 17:29:48 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 17:29:48 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 17:29:48 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 17:29:48 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@39832280] for TypeConfiguration
2020-12-05 17:29:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:29:51 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4eb5764d, org.springframework.security.web.context.SecurityContextPersistenceFilter@c335b9, org.springframework.security.web.header.HeaderWriterFilter@44f23927, org.springframework.web.filter.CorsFilter@54f9326c, org.springframework.security.web.authentication.logout.LogoutFilter@d65e744, com.app.config.JwtRequestFilter@55b74e6b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c68e82, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c8b37a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5016f1a, org.springframework.security.web.session.SessionManagementFilter@87fc0fc, org.springframework.security.web.access.ExceptionTranslationFilter@228958a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2dcd451f]
2020-12-05 17:29:51 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 17:29:51 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 17:29:51 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 17:29:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 17:29:52 [main] INFO  com.app.Application - Started Application in 12.406 seconds (JVM running for 13.198)
2020-12-05 17:29:55 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 17:29:55 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 17:29:55 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-12-05 17:29:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.from_year=? and financialy0_.to_year=?
2020-12-05 17:29:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [2021]
2020-12-05 17:29:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [2022]
2020-12-05 17:29:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-05 17:29:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-05 17:29:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-05 17:29:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-05 17:29:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-05 17:29:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-05 17:29:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-05 17:29:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-05 17:29:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-05 17:33:55 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:33:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [1]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:31:21]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [3]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:08]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Student Saving Account ]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [4]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:23]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [2]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:33:50]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [11:41:52]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [satish]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:33:55 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:35:25 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:35:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_ where sbtype0_.name=?
2020-12-05 17:35:25 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Savings Account]
2020-12-05 17:35:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 17:35:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - insert into gen_std_sb_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 17:35:25 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [17:35:25]
2020-12-05 17:35:25 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [sat]
2020-12-05 17:35:25 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 17:35:25 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 17:35:25 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 17:35:25 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 17:35:25 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Savings Account]
2020-12-05 17:35:25 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [97]
2020-12-05 17:35:34 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:35:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [1]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:31:21]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [3]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:08]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Student Saving Account ]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [4]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:23]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [2]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:33:50]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [11:41:52]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [satish]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [5]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:35:25]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:35:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Savings Account]
2020-12-05 17:36:11 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:36:11 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [1]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:31:21]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [3]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:08]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Student Saving Account ]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [4]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:23]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [2]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:33:50]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [11:41:52]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [satish]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [5]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:35:25]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:36:11 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Savings Account]
2020-12-05 17:36:41 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_ where sbtype0_.name=?
2020-12-05 17:36:41 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Current Account]
2020-12-05 17:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 17:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - insert into gen_std_sb_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 17:36:41 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [17:36:41]
2020-12-05 17:36:41 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [sat]
2020-12-05 17:36:41 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 17:36:41 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 17:36:41 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 17:36:41 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 17:36:41 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Current Account]
2020-12-05 17:36:41 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [98]
2020-12-05 17:36:48 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:36:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [1]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:31:21]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [3]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:08]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Student Saving Account ]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [4]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:23]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [2]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:33:50]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [11:41:52]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [satish]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [5]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:35:25]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Savings Account]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [6]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:36:41]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:36:48 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Current Account]
2020-12-05 17:37:35 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:37:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-05 17:37:35 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [6]
2020-12-05 17:37:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [6]
2020-12-05 17:37:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:36:41]
2020-12-05 17:37:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:37:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:37:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:37:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:37:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:37:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Current Account]
2020-12-05 17:38:22 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:38:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [6]
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [6]
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:36:41]
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Current Account]
2020-12-05 17:38:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_ where sbtype0_.name=?
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Salary Account]
2020-12-05 17:38:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update gen_std_sb_type set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Salary Account]
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [divyashree]
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [17:38:22]
2020-12-05 17:38:22 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [6]
2020-12-05 17:38:34 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:38:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-05 17:38:34 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [6]
2020-12-05 17:38:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [6]
2020-12-05 17:38:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:36:41]
2020-12-05 17:38:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:38:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:38:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [17:38:22]
2020-12-05 17:38:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [divyashree]
2020-12-05 17:38:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:38:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Account]
2020-12-05 17:38:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - DELETE FROM gen_std_sb_type WHERE slno = ?
2020-12-05 17:38:34 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [6]
2020-12-05 17:38:44 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:38:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-05 17:38:44 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [6]
2020-12-05 17:38:52 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:38:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [1]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:31:21]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [3]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:08]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Student Saving Account ]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [4]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:23]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [2]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:33:50]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [11:41:52]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [satish]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [5]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:35:25]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:38:52 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Savings Account]
2020-12-05 17:39:24 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:39:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-05 17:39:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [5]
2020-12-05 17:39:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [5]
2020-12-05 17:39:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:35:25]
2020-12-05 17:39:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:39:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:39:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:39:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:39:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:39:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Savings Account]
2020-12-05 17:39:41 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:39:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [1]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:31:21]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [3]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:08]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Student Saving Account ]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [4]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:23]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [2]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:33:50]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [11:41:52]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [satish]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [5]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:35:25]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:39:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Savings Account]
2020-12-05 17:44:21 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:44:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [1]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:31:21]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [3]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:08]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Student Saving Account ]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [4]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:23]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [2]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:33:50]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [11:41:52]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [satish]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [5]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:35:25]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:44:21 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Savings Account]
2020-12-05 17:46:03 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:46:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_ where sbtype0_.name=?
2020-12-05 17:46:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Salary Saving Account]
2020-12-05 17:46:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-05 17:46:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into gen_std_sb_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-05 17:46:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [17:46:03]
2020-12-05 17:46:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [Keerthana]
2020-12-05 17:46:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-05]
2020-12-05 17:46:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-05 17:46:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-05 17:46:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-05 17:46:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Salary Saving Account]
2020-12-05 17:46:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [99]
2020-12-05 17:46:24 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:46:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [1]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:31:21]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [3]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:08]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Student Saving Account ]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [4]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:23]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [2]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:33:50]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [11:41:52]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [satish]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [2020-12-02]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [5]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:35:25]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Savings Account]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [6]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:46:03]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [Keerthana]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-05 17:46:24 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account]
2020-12-05 17:49:58 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:49:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select sbaccounts0_.slno as slno1_17_, sbaccounts0_.branch_slno as branch_17_17_, sbaccounts0_.created_at as created_2_17_, sbaccounts0_.created_by as created_3_17_, sbaccounts0_.created_on as created_4_17_, sbaccounts0_.modified_at as modified5_17_, sbaccounts0_.modified_by as modified6_17_, sbaccounts0_.modified_on as modified7_17_, sbaccounts0_.penalty as penalty8_17_, sbaccounts0_.sb_max_balance as sb_max_b9_17_, sbaccounts0_.sb_min_bal_with_cheq_book_for_staff as sb_min_10_17_, sbaccounts0_.sb_min_bal_without_cheq_book_for_staff as sb_min_11_17_, sbaccounts0_.sb_min_balance as sb_min_12_17_, sbaccounts0_.sb_min_period as sb_min_13_17_, sbaccounts0_.sb_roi as sb_roi14_17_, sbaccounts0_.sb_roi_for_staff as sb_roi_15_17_, sbaccounts0_.sb_type_slno as sb_type18_17_, sbaccounts0_.service_charge as service16_17_ from gen_std_sb_accounts_parameters sbaccounts0_
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_17_] : [BIGINT]) - [1]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_17_17_] : [BIGINT]) - [48]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_17_] : [TIME]) - [10:11:15]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_17_] : [VARCHAR]) - [satish]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_17_] : [DATE]) - [2020-12-03]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_17_] : [TIME]) - [15:34:40]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_17_] : [VARCHAR]) - [satish]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_17_] : [DATE]) - [2020-12-03]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty8_17_] : [NUMERIC]) - [85.00]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_b9_17_] : [NUMERIC]) - [1000.00]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_10_17_] : [NUMERIC]) - [86.00]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_11_17_] : [NUMERIC]) - [896.00]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_12_17_] : [NUMERIC]) - [0.00]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_13_17_] : [NUMERIC]) - [158.00]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi14_17_] : [NUMERIC]) - [2.00]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_15_17_] : [NUMERIC]) - [89532.00]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type18_17_] : [BIGINT]) - [1]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service16_17_] : [NUMERIC]) - [89.00]
2020-12-05 17:49:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 17:49:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_0_, sbtype0_.created_at as created_2_18_0_, sbtype0_.created_by as created_3_18_0_, sbtype0_.created_on as created_4_18_0_, sbtype0_.modified_at as modified5_18_0_, sbtype0_.modified_by as modified6_18_0_, sbtype0_.modified_on as modified7_18_0_, sbtype0_.name as name8_18_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_0_] : [TIME]) - [11:31:21]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_0_] : [VARCHAR]) - [sat]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_0_] : [DATE]) - [2020-12-02]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_0_] : [TIME]) - [null]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_0_] : [VARCHAR]) - [null]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_0_] : [DATE]) - [null]
2020-12-05 17:49:58 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-05 17:52:47 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:52:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [15:34:40]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [2.00]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-05 17:52:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 17:52:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_0_, sbtype0_.created_at as created_2_18_0_, sbtype0_.created_by as created_3_18_0_, sbtype0_.created_on as created_4_18_0_, sbtype0_.modified_at as modified5_18_0_, sbtype0_.modified_by as modified6_18_0_, sbtype0_.modified_on as modified7_18_0_, sbtype0_.name as name8_18_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_0_] : [TIME]) - [11:31:21]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_0_] : [VARCHAR]) - [sat]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_0_] : [DATE]) - [2020-12-02]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_0_] : [TIME]) - [null]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_0_] : [VARCHAR]) - [null]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_0_] : [DATE]) - [null]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-05 17:52:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [3]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [2.0]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-05]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [17:52:47]
2020-12-05 17:52:47 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [1]
2020-12-05 17:53:00 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9260 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 17:53:00 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 17:53:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 17:53:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 199ms. Found 24 repository interfaces.
2020-12-05 17:53:02 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 17:53:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 17:53:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:53:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:53:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:53:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:53:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:53:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:53:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9f03a6c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:53:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$37b16efe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:53:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:53:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6daf2337' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:53:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5c8611b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:53:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:53:03 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 17:53:03 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 17:53:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 17:53:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 17:53:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 17:53:04 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 17:53:04 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 17:53:04 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3449 ms
2020-12-05 17:53:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 17:53:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@633fd91
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@633fd91
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@633fd91
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c386958
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1dd74143
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@47ac613b
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@134ff8f8
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@134ff8f8
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@134ff8f8
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3902bd2c
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3902bd2c
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3902bd2c
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@727320fa
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@727320fa
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@727320fa
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@51a18b21
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@51a18b21
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@51a18b21
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@766a49c7
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@766a49c7
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@766a49c7
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a756082
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a756082
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a756082
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7beae796
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7beae796
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7beae796
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@22f4f8f2
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@22f4f8f2
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17410c07
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17410c07
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@64f981e2
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@64f981e2
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@59bbb974
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1fd9893c
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@551e4c6d
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@551e4c6d
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3fb9a67f
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3fb9a67f
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3f36e8d1
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3f36e8d1
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@340d6d89
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@340d6d89
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5dc0ff7d
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5dc0ff7d
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@67531e3a
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@67531e3a
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3003e580
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3003e580
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@10a98392
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@10a98392
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57545c3f
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57545c3f
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@167381c7
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@167381c7
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6ba060f3
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6ba060f3
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@57c00115
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57c00115
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57c00115
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5377414a
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5d5b9ecb
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d5b9ecb
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d5b9ecb
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542f6803
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@316acbb5
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@316acbb5
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@717d7587
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@717d7587
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0777b5
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0777b5
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4e642ee1
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4e642ee1
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1eff3cfb
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1eff3cfb
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7e9f2c32
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2676dc05
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2676dc05
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2676dc05
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dd2856e
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dd2856e
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dd2856e
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@77f905e3
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3b7eac14
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@e38f0b7
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@e38f0b7
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@e38f0b7
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12ad1b2a
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12ad1b2a
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12ad1b2a
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5f5effb0
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6e3eb0cd
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2b2954e1
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b2954e1
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@235d659c
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5ebffb44
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ebffb44
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7e307087
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7e307087
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@234cff57
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@d08edc5
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2a097d77
2020-12-05 17:53:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2a43e0ac
2020-12-05 17:53:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2a43e0ac
2020-12-05 17:53:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1084f78c
2020-12-05 17:53:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@25f723b0
2020-12-05 17:53:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4aa11206
2020-12-05 17:53:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40d60f2
2020-12-05 17:53:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3382cf68
2020-12-05 17:53:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f74900b
2020-12-05 17:53:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d8796c1
2020-12-05 17:53:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e26173
2020-12-05 17:53:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@29a33620
2020-12-05 17:53:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@29a33620
2020-12-05 17:53:06 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1eff3cfb
2020-12-05 17:53:06 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f85217c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1fd7a37]
2020-12-05 17:53:06 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f85217c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@65eb3597]
2020-12-05 17:53:07 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 17:53:07 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 17:53:07 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 17:53:07 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 17:53:07 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@65eb3597] for TypeConfiguration
2020-12-05 17:53:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:53:09 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-05 17:53:09 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-05 17:53:09 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:53:09 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:53:09 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-05 17:53:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:53:09 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@65eb3597] for TypeConfiguration
2020-12-05 17:53:09 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4ede8888] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@65eb3597]
2020-12-05 17:53:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-05 17:53:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-05 17:53:09 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-05 17:53:09 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-05 17:54:03 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 13348 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 17:54:03 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 17:54:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 17:54:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 212ms. Found 24 repository interfaces.
2020-12-05 17:54:05 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 17:54:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 17:54:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:54:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:54:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:54:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:54:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:54:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:54:05 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$93531f6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:54:05 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$2c00e7a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:54:05 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:54:05 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@f8f56b9' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:54:05 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$50d58a57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:54:05 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:54:05 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 17:54:05 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 17:54:06 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 17:54:06 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 17:54:06 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 17:54:06 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 17:54:06 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 17:54:06 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3549 ms
2020-12-05 17:54:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 17:54:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3bed3315
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3bed3315
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3bed3315
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ed4a7e4
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3bc4ef12
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b0dc227
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2a334bac
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2a334bac
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a334bac
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3c854752
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3c854752
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c854752
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@210d2a6c
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@210d2a6c
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@210d2a6c
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@77c10a5f
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@77c10a5f
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77c10a5f
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@355c94be
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@355c94be
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@355c94be
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1dd74143
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1dd74143
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1dd74143
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66f28a1f
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66f28a1f
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66f28a1f
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@df921b1
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@df921b1
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@eb6ec6
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@eb6ec6
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3f018494
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3f018494
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51a18b21
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7523a3dc
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6bccd036
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6bccd036
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2a53f215
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2a53f215
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@261db982
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@261db982
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@73971965
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@73971965
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@59c70ceb
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@59c70ceb
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@59bbb974
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@59bbb974
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@44be69aa
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@44be69aa
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5d1e0fbb
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5d1e0fbb
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ee47d9e
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ee47d9e
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@67531e3a
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67531e3a
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3003e580
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3003e580
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@10a98392
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10a98392
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10a98392
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1945113f
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1db87583
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1db87583
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1db87583
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@27329d2a
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@57545c3f
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@57545c3f
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@76a805b7
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@76a805b7
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@591a4f8e
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@591a4f8e
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@48e8c32a
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48e8c32a
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5377414a
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5377414a
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71b639d0
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@542f6803
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@542f6803
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@542f6803
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@316acbb5
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@316acbb5
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@316acbb5
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@717d7587
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5b7aa898
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@62b93086
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@62b93086
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@62b93086
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5731d3a
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5731d3a
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5731d3a
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@70c69586
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@19e0dffe
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4694f434
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4694f434
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5a49af50
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3b7eac14
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3b7eac14
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4f8d86e4
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f8d86e4
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12ad1b2a
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5f5effb0
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2f4b98f6
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7377781e
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7377781e
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5edacf20
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16a5eb6d
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e307087
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1220ef43
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a8b81e8
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@234cff57
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e8507f1
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4bcaa195
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1150d471
2020-12-05 17:54:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1150d471
2020-12-05 17:54:08 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5377414a
2020-12-05 17:54:08 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4be0a27d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f366587]
2020-12-05 17:54:08 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4be0a27d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@69ed5ea2]
2020-12-05 17:54:09 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 17:54:10 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 17:54:10 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 17:54:10 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 17:54:10 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@69ed5ea2] for TypeConfiguration
2020-12-05 17:54:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:54:11 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-05 17:54:11 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-05 17:54:11 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:54:11 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-05 17:54:11 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-05 17:54:11 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:54:11 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@69ed5ea2] for TypeConfiguration
2020-12-05 17:54:11 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1dcad16f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@69ed5ea2]
2020-12-05 17:54:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-05 17:54:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-05 17:54:11 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-05 17:54:11 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-05 17:55:13 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 12656 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 17:55:13 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 17:55:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 17:55:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 208ms. Found 24 repository interfaces.
2020-12-05 17:55:15 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 17:55:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 17:55:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:55:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:55:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:55:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:55:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:55:16 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:55:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a40a1be6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:55:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3cb7e420] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:55:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:55:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5e9456ae' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:55:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$618c86d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:55:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:55:16 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 17:55:16 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 17:55:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 17:55:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 17:55:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 17:55:17 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 17:55:17 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 17:55:17 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3720 ms
2020-12-05 17:55:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 17:55:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@619f2afc
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@619f2afc
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@619f2afc
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2152ab30
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@eb6ec6
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@727320fa
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@51a18b21
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@51a18b21
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51a18b21
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@766a49c7
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@766a49c7
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@766a49c7
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6a756082
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6a756082
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6a756082
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7beae796
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7beae796
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7beae796
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@22f4f8f2
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@22f4f8f2
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@22f4f8f2
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@17410c07
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@17410c07
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@17410c07
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@64f981e2
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@64f981e2
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@64f981e2
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@12f49ca8
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@12f49ca8
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@21da4b5f
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@21da4b5f
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@9b76b60
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@9b76b60
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5562c2c9
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f36e8d1
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@340d6d89
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@340d6d89
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5dc0ff7d
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5dc0ff7d
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@67531e3a
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@67531e3a
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3003e580
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3003e580
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10a98392
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10a98392
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@697173d9
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@697173d9
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d6d1d42
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d6d1d42
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6993c8df
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6993c8df
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@48e8c32a
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@48e8c32a
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@17aa8a11
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@17aa8a11
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5e5aafc6
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e5aafc6
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7ce85af2
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ce85af2
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ce85af2
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@47311277
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@40230eb9
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40230eb9
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40230eb9
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c0777b5
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4e642ee1
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4e642ee1
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1eff3cfb
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1eff3cfb
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d4e13e1
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d4e13e1
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4833eff3
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4833eff3
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3b1dc579
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3b1dc579
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77f905e3
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@777d191f
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@777d191f
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@777d191f
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4f8d86e4
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4f8d86e4
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4f8d86e4
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@767599a7
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@345cbf40
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2f4b98f6
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f4b98f6
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2f4b98f6
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@751ae8a4
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@751ae8a4
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@751ae8a4
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2da16263
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@101a461c
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5edacf20
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5edacf20
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1220ef43
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3f362135
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f362135
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7650ded6
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7650ded6
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a916402
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@62d1dc3c
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2a43e0ac
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3b8ec001
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b8ec001
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4fc5563d
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@286090c
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@31120021
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3df1a1ac
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@58606c91
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6a9cd0f8
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4baed682
2020-12-05 17:55:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7be2f29a
2020-12-05 17:55:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6436e181
2020-12-05 17:55:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6436e181
2020-12-05 17:55:19 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3b1dc579
2020-12-05 17:55:19 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9687f55] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5700c9db]
2020-12-05 17:55:19 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9687f55] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5e85c21b]
2020-12-05 17:55:20 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 17:55:20 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 17:55:20 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 17:55:20 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 17:55:21 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5e85c21b] for TypeConfiguration
2020-12-05 17:55:21 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:55:22 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1b994617, org.springframework.security.web.context.SecurityContextPersistenceFilter@671f545b, org.springframework.security.web.header.HeaderWriterFilter@7cd3860, org.springframework.web.filter.CorsFilter@807c1e8, org.springframework.security.web.authentication.logout.LogoutFilter@788a0513, com.app.config.JwtRequestFilter@67396475, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@75c8d8e7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26feccf7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4eb5764d, org.springframework.security.web.session.SessionManagementFilter@74a03bd5, org.springframework.security.web.access.ExceptionTranslationFilter@c29b0dc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c02b3cb]
2020-12-05 17:55:23 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 17:55:23 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 17:55:23 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 17:55:23 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 17:55:23 [main] INFO  com.app.Application - Started Application in 10.466 seconds (JVM running for 11.32)
2020-12-05 17:55:41 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 17:55:41 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 17:55:41 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 28 ms
2020-12-05 17:55:41 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:55:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-05 17:55:41 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [mysore1]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [HSR-20203]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [pooja11]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:21:38]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [969362587411]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [HSR3]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [5236419871]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [587201]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-05 17:55:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-05 17:55:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-05 17:55:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE holiday_date = ?
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIMESTAMP] - [Sat Jan 25 00:03:00 IST 1997]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [15:35:22]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [94]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [Dipavali]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [2]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:00:39]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [94]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [Dipavali]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 17:55:42 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [null]
2020-12-05 17:59:01 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 8156 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 17:59:01 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 17:59:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 17:59:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 302ms. Found 24 repository interfaces.
2020-12-05 17:59:04 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 17:59:04 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 17:59:04 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:59:04 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:59:04 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:59:04 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:59:04 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 17:59:04 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 17:59:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$34383be9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:59:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$cce60423] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:59:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:59:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@bdc8014' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:59:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f1baa6d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:59:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 17:59:04 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 17:59:04 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 17:59:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 17:59:05 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 17:59:05 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 17:59:05 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 17:59:05 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 17:59:05 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3859 ms
2020-12-05 17:59:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 17:59:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@30b975ad
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@30b975ad
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@30b975ad
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@470d183
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3e7b65d7
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1a500561
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4086d8fb
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4086d8fb
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4086d8fb
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7c781c42
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7c781c42
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c781c42
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@c386958
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@c386958
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c386958
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3166f664
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3166f664
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3166f664
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@44a085e5
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@44a085e5
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@44a085e5
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2152ab30
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2152ab30
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2152ab30
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@18137eab
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@18137eab
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@18137eab
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@57fbc06f
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@57fbc06f
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2806d6da
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2806d6da
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4f4c88f9
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f4c88f9
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1f3b992
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7beae796
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@22f4f8f2
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@22f4f8f2
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@17410c07
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17410c07
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@64f981e2
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@64f981e2
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12f49ca8
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12f49ca8
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@21da4b5f
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@21da4b5f
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@9b76b60
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@9b76b60
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@15c487a8
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@15c487a8
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@40f35e52
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@40f35e52
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3003e580
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3003e580
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5f174dd2
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f174dd2
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3d90eeb3
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3d90eeb3
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7978e022
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7978e022
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7978e022
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6993c8df
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@34585ac9
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@34585ac9
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@34585ac9
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@167381c7
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6ba060f3
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ba060f3
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@57c00115
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@57c00115
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@17aa8a11
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17aa8a11
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5e5aafc6
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5e5aafc6
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7ce85af2
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7ce85af2
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47311277
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@40230eb9
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@40230eb9
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@40230eb9
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2a39aa2b
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2a39aa2b
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2a39aa2b
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2fd954f
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1eff3cfb
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5d4e13e1
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5d4e13e1
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5d4e13e1
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4833eff3
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4833eff3
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4833eff3
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@dd2856e
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@793d163b
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@777d191f
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@777d191f
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e38f0b7
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@767599a7
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@767599a7
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3468ee6e
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3468ee6e
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58c1da09
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@751ae8a4
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@360e9c06
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@49fa1d74
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49fa1d74
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6bc24e72
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@724aefc3
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7cfb4736
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2a097d77
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53c1179a
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7650ded6
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5034f5dd
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@31b7d869
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6003ad65
2020-12-05 17:59:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6003ad65
2020-12-05 17:59:07 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7ce85af2
2020-12-05 17:59:07 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ae1c281] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4ac8768e]
2020-12-05 17:59:08 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ae1c281] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3c28e5b6]
2020-12-05 17:59:09 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 17:59:09 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 17:59:09 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 17:59:09 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 17:59:09 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3c28e5b6] for TypeConfiguration
2020-12-05 17:59:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 17:59:11 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@283ecb4b, org.springframework.security.web.context.SecurityContextPersistenceFilter@52a74328, org.springframework.security.web.header.HeaderWriterFilter@3a239dac, org.springframework.web.filter.CorsFilter@a30dbc0, org.springframework.security.web.authentication.logout.LogoutFilter@dd07be8, com.app.config.JwtRequestFilter@70700b8a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@220be130, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4727e5fc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@76104df5, org.springframework.security.web.session.SessionManagementFilter@62ee1c89, org.springframework.security.web.access.ExceptionTranslationFilter@21ce2e4d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@446a5aa5]
2020-12-05 17:59:12 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 17:59:12 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 17:59:12 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 17:59:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 17:59:12 [main] INFO  com.app.Application - Started Application in 11.237 seconds (JVM running for 11.956)
2020-12-05 17:59:19 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 17:59:19 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 17:59:19 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-12-05 17:59:19 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 17:59:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [2]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [17:00:39]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 17:59:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 17:59:19 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 18:00:46 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 872 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 18:00:46 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 18:00:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 18:00:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 184ms. Found 24 repository interfaces.
2020-12-05 18:00:47 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 18:00:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 18:00:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:00:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:00:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:00:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:00:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:00:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:00:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$66bb5d7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:00:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ff6925b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:00:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:00:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4632cfc' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:00:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$243dc86a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:00:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:00:48 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 18:00:48 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 18:00:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 18:00:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 18:00:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 18:00:49 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 18:00:49 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 18:00:49 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3153 ms
2020-12-05 18:00:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 18:00:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6a756082
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6a756082
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a756082
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2a53f215
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6749fe50
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ae73c80
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@76a14c8d
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@76a14c8d
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@76a14c8d
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@46f902e0
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@46f902e0
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46f902e0
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7165d530
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7165d530
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7165d530
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7219ac49
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7219ac49
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7219ac49
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2eed37f4
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2eed37f4
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2eed37f4
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@673c4f6e
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@673c4f6e
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@673c4f6e
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@480b57e2
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@480b57e2
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@480b57e2
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ee47d9e
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ee47d9e
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@493ac8d3
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@493ac8d3
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@51ab1ee3
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@51ab1ee3
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28757abd
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@138aa3cc
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@45aca496
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@45aca496
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7fb53256
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7fb53256
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5afbd567
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5afbd567
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41184371
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41184371
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@608b1fd2
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@608b1fd2
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7c51782d
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7c51782d
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@411a5965
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@411a5965
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@71b639d0
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@71b639d0
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3e906375
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3e906375
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@62b93086
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@62b93086
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5731d3a
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5731d3a
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7e9f2c32
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e9f2c32
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e9f2c32
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e0fbeb5
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4694f434
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4694f434
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4694f434
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5a49af50
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@221a2068
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@221a2068
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7fc420b8
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7fc420b8
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f631ca0
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f631ca0
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5f5effb0
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f5effb0
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@659feb22
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@659feb22
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@421def93
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@235d659c
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@235d659c
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@235d659c
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@101a461c
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@101a461c
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@101a461c
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@31db34da
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@16a5eb6d
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5e8507f1
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5e8507f1
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5e8507f1
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@21eee94f
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@21eee94f
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@21eee94f
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7cfb4736
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7650ded6
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3811510
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3811510
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@748f93bb
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@25f723b0
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@25f723b0
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@27be17c8
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@27be17c8
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cd98a05
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f6c6077
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4baed682
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@34b87182
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34b87182
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b5a4aed
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2c991465
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5fef2aac
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7f973a14
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76130a29
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@124d02b2
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3451f01d
2020-12-05 18:00:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@72503b19
2020-12-05 18:00:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@29896529
2020-12-05 18:00:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@29896529
2020-12-05 18:00:51 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@659feb22
2020-12-05 18:00:51 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@684e8c9d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6ecc02bb]
2020-12-05 18:00:51 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@684e8c9d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3db65c0d]
2020-12-05 18:00:52 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 18:00:52 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 18:00:52 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 18:00:52 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 18:00:52 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3db65c0d] for TypeConfiguration
2020-12-05 18:00:52 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 18:00:54 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6be80629, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a85e86e, org.springframework.security.web.header.HeaderWriterFilter@a859c5, org.springframework.web.filter.CorsFilter@20a4cba7, org.springframework.security.web.authentication.logout.LogoutFilter@2f112ade, com.app.config.JwtRequestFilter@44392e64, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@10724a72, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ecec098, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10f10230, org.springframework.security.web.session.SessionManagementFilter@d65e744, org.springframework.security.web.access.ExceptionTranslationFilter@75f2ff80, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7dc92a06]
2020-12-05 18:00:54 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 18:00:54 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 18:00:55 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 18:00:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 18:00:55 [main] INFO  com.app.Application - Started Application in 9.612 seconds (JVM running for 10.567)
2020-12-05 18:01:00 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 18:01:00 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 18:01:00 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-12-05 18:01:00 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 18:01:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [2]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [17:00:39]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 18:01:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 18:01:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 18:01:47 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 416 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 18:01:47 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 18:01:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 18:01:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 201ms. Found 24 repository interfaces.
2020-12-05 18:01:49 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 18:01:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 18:01:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:01:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:01:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:01:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:01:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:01:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:01:49 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$521e00af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:01:49 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$eacbc8e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:01:49 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:01:49 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@31ee96f4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:01:49 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$fa06b9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:01:49 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:01:49 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 18:01:49 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 18:01:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 18:01:51 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 18:01:51 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 18:01:51 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 18:01:51 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 18:01:51 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3999 ms
2020-12-05 18:01:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 18:01:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@52bf7bf6
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@52bf7bf6
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52bf7bf6
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@22f4f8f2
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@73971965
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6ee99964
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@361abd01
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@361abd01
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@361abd01
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1fd9893c
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1fd9893c
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1fd9893c
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@551e4c6d
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@551e4c6d
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@551e4c6d
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3fb9a67f
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3fb9a67f
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3fb9a67f
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3f36e8d1
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3f36e8d1
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3f36e8d1
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@340d6d89
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@340d6d89
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@340d6d89
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5dc0ff7d
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5dc0ff7d
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5dc0ff7d
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67531e3a
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67531e3a
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3003e580
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3003e580
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@10a98392
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@10a98392
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1945113f
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@ceddaf8
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@27329d2a
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@27329d2a
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@57545c3f
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@57545c3f
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@76a805b7
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@76a805b7
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@591a4f8e
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@591a4f8e
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48e8c32a
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48e8c32a
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5377414a
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5377414a
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5b9ecb
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5b9ecb
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5807efad
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5807efad
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@62b93086
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@62b93086
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1eff3cfb
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1eff3cfb
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5d4e13e1
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d4e13e1
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4833eff3
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4833eff3
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4833eff3
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dd2856e
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@77f905e3
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77f905e3
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77f905e3
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3b7eac14
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@e38f0b7
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e38f0b7
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@12ad1b2a
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@12ad1b2a
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@345cbf40
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@345cbf40
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2f4b98f6
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f4b98f6
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@751ae8a4
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@751ae8a4
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2da16263
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ebffb44
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ebffb44
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ebffb44
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5edacf20
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5edacf20
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5edacf20
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@234cff57
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@d08edc5
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@724aefc3
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@724aefc3
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@724aefc3
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5034f5dd
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5034f5dd
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5034f5dd
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1a47a1e8
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3811510
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@22d9bc14
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22d9bc14
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@25f723b0
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@27be17c8
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@27be17c8
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4fc5563d
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4fc5563d
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3df1a1ac
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4baed682
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@49cb1baf
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@76130a29
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76130a29
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@72503b19
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cfc2538
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@66deec87
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d342959
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ecf5915
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42cc183e
2020-12-05 18:01:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e4e8fdf
2020-12-05 18:01:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4cb957b8
2020-12-05 18:01:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4cb957b8
2020-12-05 18:01:53 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@751ae8a4
2020-12-05 18:01:53 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10850d17] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51e754e1]
2020-12-05 18:01:53 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10850d17] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@8c0a23f]
2020-12-05 18:01:54 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 18:01:54 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 18:01:54 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 18:01:54 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 18:01:55 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@8c0a23f] for TypeConfiguration
2020-12-05 18:01:55 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 18:01:57 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@362b384c, org.springframework.security.web.context.SecurityContextPersistenceFilter@5cd6719d, org.springframework.security.web.header.HeaderWriterFilter@1c4aa701, org.springframework.web.filter.CorsFilter@433b546f, org.springframework.security.web.authentication.logout.LogoutFilter@4b76251c, com.app.config.JwtRequestFilter@175bf9c9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@61b0af9f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7ebaf0d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9de1b85, org.springframework.security.web.session.SessionManagementFilter@25435731, org.springframework.security.web.access.ExceptionTranslationFilter@28c7fd9d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@336070ab]
2020-12-05 18:01:57 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 18:01:57 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 18:01:57 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 18:01:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 18:01:58 [main] INFO  com.app.Application - Started Application in 11.379 seconds (JVM running for 12.13)
2020-12-05 18:02:02 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 18:02:02 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 18:02:02 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-12-05 18:02:02 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 18:02:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [2]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [17:00:39]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 18:02:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 18:02:02 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 18:02:27 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 16576 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 18:02:27 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 18:02:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 18:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 202ms. Found 24 repository interfaces.
2020-12-05 18:02:29 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 18:02:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 18:02:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:02:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:02:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:02:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:02:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:02:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:02:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$12a864cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:02:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ab562d06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:02:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:02:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1bfe3203' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:02:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d02acfb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:02:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:02:30 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 18:02:30 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 18:02:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 18:02:30 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 18:02:30 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 18:02:30 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 18:02:31 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 18:02:31 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3853 ms
2020-12-05 18:02:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 18:02:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4086d8fb
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4086d8fb
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4086d8fb
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77c10a5f
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@795f8317
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@97a145b
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@526a9908
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@526a9908
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@526a9908
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@60a19573
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@60a19573
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@60a19573
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4db60246
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4db60246
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4db60246
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@34d45ec0
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@34d45ec0
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34d45ec0
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3ce443f9
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3ce443f9
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ce443f9
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7523a3dc
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7523a3dc
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7523a3dc
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6bccd036
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6bccd036
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6bccd036
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a53f215
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a53f215
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@261db982
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@261db982
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@73971965
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@73971965
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ee99964
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@46f902e0
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7165d530
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7165d530
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7219ac49
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7219ac49
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2eed37f4
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2eed37f4
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@673c4f6e
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@673c4f6e
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@480b57e2
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@480b57e2
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1ee47d9e
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1ee47d9e
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@493ac8d3
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@493ac8d3
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@51ab1ee3
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@51ab1ee3
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fb53256
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fb53256
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@57545c3f
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57545c3f
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@76a805b7
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a805b7
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@591a4f8e
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@591a4f8e
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@591a4f8e
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c51782d
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@411a5965
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@411a5965
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@411a5965
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4e83a98
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1ee27d73
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ee27d73
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@53a84ff4
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53a84ff4
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7930ffa9
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7930ffa9
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5b7aa898
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5b7aa898
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@62b93086
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@62b93086
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29ebbdf4
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@70c69586
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@70c69586
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@70c69586
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e0fbeb5
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e0fbeb5
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e0fbeb5
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4694f434
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5a49af50
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@221a2068
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@221a2068
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@221a2068
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7fc420b8
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7fc420b8
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7fc420b8
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1192b58e
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1697f2b3
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6e3eb0cd
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e3eb0cd
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3468ee6e
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@235d659c
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@235d659c
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5ebffb44
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ebffb44
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31db34da
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@16a5eb6d
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@d08edc5
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@62d1dc3c
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62d1dc3c
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18539cb1
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@748f93bb
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7f2d31af
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e7157c7
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2a43e0ac
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@22d9bc14
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@346f41a9
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1084f78c
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3db432c2
2020-12-05 18:02:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3db432c2
2020-12-05 18:02:32 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@62b93086
2020-12-05 18:02:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a90265a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6a32191e]
2020-12-05 18:02:33 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a90265a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5db3d57c]
2020-12-05 18:02:34 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 18:02:34 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 18:02:34 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 18:02:34 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 18:02:35 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5db3d57c] for TypeConfiguration
2020-12-05 18:02:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 18:02:36 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17c34e62, org.springframework.security.web.context.SecurityContextPersistenceFilter@4af606e9, org.springframework.security.web.header.HeaderWriterFilter@5f4df55e, org.springframework.web.filter.CorsFilter@239d73ff, org.springframework.security.web.authentication.logout.LogoutFilter@87fc0fc, com.app.config.JwtRequestFilter@3664c596, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@33765d22, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54d2f5d3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6bf28f61, org.springframework.security.web.session.SessionManagementFilter@5b2ff4df, org.springframework.security.web.access.ExceptionTranslationFilter@220be130, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@47772462]
2020-12-05 18:02:36 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 18:02:37 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 18:02:37 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 18:02:37 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 18:02:37 [main] INFO  com.app.Application - Started Application in 10.991 seconds (JVM running for 11.727)
2020-12-05 18:02:44 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 18:02:44 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 18:02:44 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-12-05 18:02:44 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 18:02:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [2]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [17:00:39]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 18:02:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 18:02:44 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 18:07:11 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9600 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 18:07:11 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 18:07:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 18:07:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 187ms. Found 24 repository interfaces.
2020-12-05 18:07:13 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 18:07:13 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 18:07:13 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:07:13 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:07:13 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:07:13 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:07:13 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:07:13 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:07:13 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$557451be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:07:13 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ee2219f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:07:13 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:07:13 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@51e0301d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:07:13 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$12f6bcaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:07:13 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:07:13 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 18:07:13 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 18:07:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 18:07:14 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 18:07:14 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 18:07:14 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 18:07:14 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 18:07:14 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3310 ms
2020-12-05 18:07:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 18:07:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@40a72ecd
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@40a72ecd
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@40a72ecd
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@17410c07
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@59c70ceb
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@361abd01
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1fd9893c
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1fd9893c
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1fd9893c
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@551e4c6d
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@551e4c6d
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@551e4c6d
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3fb9a67f
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3fb9a67f
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3fb9a67f
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3f36e8d1
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3f36e8d1
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f36e8d1
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@340d6d89
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@340d6d89
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@340d6d89
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5dc0ff7d
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5dc0ff7d
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5dc0ff7d
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@67531e3a
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@67531e3a
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@67531e3a
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3003e580
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3003e580
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10a98392
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10a98392
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@697173d9
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@697173d9
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1db87583
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@27329d2a
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@57545c3f
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@57545c3f
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@76a805b7
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@76a805b7
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@591a4f8e
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@591a4f8e
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48e8c32a
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48e8c32a
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5377414a
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5377414a
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d5b9ecb
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d5b9ecb
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5807efad
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5807efad
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@47311277
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@47311277
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5731d3a
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5731d3a
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5d4e13e1
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d4e13e1
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4833eff3
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4833eff3
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3b1dc579
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3b1dc579
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3b1dc579
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77f905e3
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@777d191f
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@777d191f
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@777d191f
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@e38f0b7
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@12ad1b2a
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@12ad1b2a
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@345cbf40
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@345cbf40
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f4b98f6
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f4b98f6
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@751ae8a4
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@751ae8a4
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@47e51549
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@47e51549
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5ebffb44
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5edacf20
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5edacf20
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5edacf20
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@234cff57
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@234cff57
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@234cff57
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3f362135
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@724aefc3
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5034f5dd
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5034f5dd
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5034f5dd
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62d1dc3c
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62d1dc3c
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62d1dc3c
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@18539cb1
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2e7157c7
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@40d60f2
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@40d60f2
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6d8796c1
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1e95b653
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e95b653
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6a9cd0f8
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a9cd0f8
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@203d1d93
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d979d34
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3458eca5
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@66deec87
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@66deec87
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@42cc183e
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e4e8fdf
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a1d6ef2
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2721044
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205df5dc
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6aa7b67f
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bcc3f27
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@31973858
2020-12-05 18:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@31973858
2020-12-05 18:07:16 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@47e51549
2020-12-05 18:07:16 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67bb4dcd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@738d37fc]
2020-12-05 18:07:17 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67bb4dcd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7f27f59b]
2020-12-05 18:07:18 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 18:07:18 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 18:07:18 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 18:07:18 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 18:07:18 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7f27f59b] for TypeConfiguration
2020-12-05 18:07:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 18:07:20 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@dbca149, org.springframework.security.web.context.SecurityContextPersistenceFilter@21d3d6ec, org.springframework.security.web.header.HeaderWriterFilter@10724a72, org.springframework.web.filter.CorsFilter@68550d86, org.springframework.security.web.authentication.logout.LogoutFilter@a30dbc0, com.app.config.JwtRequestFilter@3e2d65e1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ebaf0d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f112ade, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@19d9ba89, org.springframework.security.web.session.SessionManagementFilter@6cc44207, org.springframework.security.web.access.ExceptionTranslationFilter@1a85e86e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2ed35f24]
2020-12-05 18:07:20 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 18:07:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 18:07:21 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 18:07:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 18:07:21 [main] INFO  com.app.Application - Started Application in 10.166 seconds (JVM running for 11.1)
2020-12-05 18:08:20 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 18:08:20 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 18:08:20 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-12-05 18:08:20 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 18:08:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_ where holidaylis0_.slno=?
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 18:08:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 18:08:20 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 18:08:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 18:08:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 18:09:05 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 15784 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 18:09:05 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 18:09:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 18:09:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 204ms. Found 24 repository interfaces.
2020-12-05 18:09:07 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 18:09:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 18:09:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:09:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:09:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:09:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:09:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:09:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:09:07 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b52c8cab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:09:07 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4dda54e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:09:07 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:09:07 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@26ae880a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:09:07 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$72aef797] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:09:07 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:09:07 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 18:09:07 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 18:09:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 18:09:08 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 18:09:08 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 18:09:08 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 18:09:09 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 18:09:09 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3428 ms
2020-12-05 18:09:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 18:09:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@12f49ca8
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@12f49ca8
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@12f49ca8
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@44be69aa
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@551e4c6d
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2eed37f4
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@673c4f6e
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@673c4f6e
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@673c4f6e
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@480b57e2
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@480b57e2
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@480b57e2
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1ee47d9e
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1ee47d9e
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ee47d9e
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@493ac8d3
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@493ac8d3
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@493ac8d3
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51ab1ee3
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51ab1ee3
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@51ab1ee3
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3c8a7e38
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3c8a7e38
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3c8a7e38
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1945113f
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1945113f
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1945113f
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1db87583
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1db87583
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f894ad9
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f894ad9
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@36baa049
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@36baa049
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@76a805b7
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@608b1fd2
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7c51782d
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c51782d
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@411a5965
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@411a5965
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@71b639d0
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@71b639d0
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@542f6803
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@542f6803
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@316acbb5
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@316acbb5
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@717d7587
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@717d7587
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c0777b5
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c0777b5
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e642ee1
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e642ee1
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4694f434
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4694f434
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77f905e3
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77f905e3
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@777d191f
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@777d191f
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f8d86e4
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f8d86e4
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f8d86e4
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@12ad1b2a
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@345cbf40
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@345cbf40
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@345cbf40
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@659feb22
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2b2954e1
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b2954e1
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2da16263
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2da16263
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5ebffb44
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5ebffb44
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5edacf20
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5edacf20
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@234cff57
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@234cff57
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d08edc5
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@724aefc3
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@724aefc3
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@724aefc3
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5034f5dd
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5034f5dd
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5034f5dd
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@62d1dc3c
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@18539cb1
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@22d9bc14
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@22d9bc14
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@22d9bc14
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@40d60f2
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@40d60f2
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@40d60f2
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6d8796c1
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2c413ffc
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@286090c
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@286090c
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@58606c91
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7d979d34
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d979d34
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3458eca5
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3458eca5
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@34b87182
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5b5a4aed
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@72503b19
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@61514735
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61514735
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43b5021c
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28369db0
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@30893e08
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e86807a
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4548d254
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@590f0c50
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@208f0007
2020-12-05 18:09:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a90c13c
2020-12-05 18:09:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@61bb1e4d
2020-12-05 18:09:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@61bb1e4d
2020-12-05 18:09:11 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@234cff57
2020-12-05 18:09:11 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5974b233] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5c134052]
2020-12-05 18:09:11 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5974b233] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@bb3ecfe]
2020-12-05 18:09:12 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 18:09:12 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 18:09:12 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 18:09:12 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 18:09:12 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@bb3ecfe] for TypeConfiguration
2020-12-05 18:09:12 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 18:09:14 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c871ce4, org.springframework.security.web.context.SecurityContextPersistenceFilter@366b4a7b, org.springframework.security.web.header.HeaderWriterFilter@4d2bc56a, org.springframework.web.filter.CorsFilter@3d3b4e09, org.springframework.security.web.authentication.logout.LogoutFilter@64dcf763, com.app.config.JwtRequestFilter@681b42d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@70819ba8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@337cb81d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5dc9d25a, org.springframework.security.web.session.SessionManagementFilter@4b76251c, org.springframework.security.web.access.ExceptionTranslationFilter@5690c2a8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3f40568e]
2020-12-05 18:09:14 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 18:09:14 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 18:09:14 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 18:09:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 18:09:15 [main] INFO  com.app.Application - Started Application in 10.121 seconds (JVM running for 10.886)
2020-12-05 18:09:19 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 18:09:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 18:09:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-12-05 18:09:19 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 18:09:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_ where holidaylis0_.slno=?
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-05 18:09:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 18:09:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 18:09:19 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 18:10:05 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 18:10:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_ where holidaylis0_.slno=?
2020-12-05 18:10:05 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-05 18:11:44 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 18:11:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE slno = ?
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [15:35:22]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [94]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [Dipavali]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [null]
2020-12-05 18:11:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 18:11:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 18:11:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - update gen_std_holiday_list set branch_slno=?, financial_year_slno=?,holiday_date=?,holiday_name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [94]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [25/03/2020]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [Dipavali]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [satish]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [2020-12-05]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIME] - [18:11:44]
2020-12-05 18:11:44 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [1]
2020-12-05 18:11:44 [http-nio-8080-exec-5] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "holiday_date" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 85
2020-12-05 18:12:08 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 18:12:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE slno = ?
2020-12-05 18:12:08 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-05 18:14:47 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 18:14:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE slno = ?
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [15:35:22]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [94]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [Dipavali]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [null]
2020-12-05 18:14:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 18:14:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 18:14:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update gen_std_holiday_list set branch_slno=?, financial_year_slno=?,holiday_date=?,holiday_name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [94]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [25/03/2020]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [Dipavaliiiii]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [satish]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [2020-12-05]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIME] - [18:14:47]
2020-12-05 18:14:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [1]
2020-12-05 18:14:47 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "holiday_date" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 85
2020-12-05 18:46:35 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 944 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-05 18:46:35 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-05 18:46:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-05 18:46:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 193ms. Found 24 repository interfaces.
2020-12-05 18:46:38 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-05 18:46:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-05 18:46:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:46:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:46:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:46:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:46:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-05 18:46:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-05 18:46:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1216563d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:46:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$aac41e77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:46:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:46:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@17d2ed1b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:46:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$cf98c129] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:46:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 18:46:38 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-05 18:46:38 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-05 18:46:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-05 18:46:39 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-05 18:46:39 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-05 18:46:39 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-05 18:46:39 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-05 18:46:39 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3553 ms
2020-12-05 18:46:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-05 18:46:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@40f35e52
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@40f35e52
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@40f35e52
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@443faa85
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5dc0ff7d
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@493ac8d3
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@51ab1ee3
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@51ab1ee3
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51ab1ee3
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3c8a7e38
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3c8a7e38
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c8a7e38
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1945113f
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1945113f
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1945113f
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1db87583
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1db87583
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1db87583
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2f894ad9
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2f894ad9
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f894ad9
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@36baa049
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@36baa049
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@36baa049
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@167381c7
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@167381c7
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@167381c7
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6ba060f3
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6ba060f3
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@57c00115
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@57c00115
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17aa8a11
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17aa8a11
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5d5b9ecb
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@542f6803
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@316acbb5
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@316acbb5
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@717d7587
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@717d7587
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c0777b5
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c0777b5
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e642ee1
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e642ee1
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1eff3cfb
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1eff3cfb
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d4e13e1
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d4e13e1
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4833eff3
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4833eff3
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b1dc579
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b1dc579
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@12ad1b2a
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@12ad1b2a
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@463561c5
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@463561c5
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@58c1da09
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@58c1da09
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4232b34a
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4232b34a
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4232b34a
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@47e51549
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7377781e
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7377781e
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7377781e
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5edacf20
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@234cff57
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@234cff57
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3f362135
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f362135
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2a097d77
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2a097d77
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6a916402
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a916402
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24eeac69
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24eeac69
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7f2d31af
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1084f78c
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1084f78c
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1084f78c
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f74900b
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f74900b
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f74900b
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7d21852b
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1e95b653
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3df1a1ac
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3df1a1ac
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3df1a1ac
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@203d1d93
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@203d1d93
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@203d1d93
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7d979d34
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3664f108
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@34b87182
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@34b87182
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5b5a4aed
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@72503b19
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@72503b19
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3e4e8fdf
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3e4e8fdf
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@205df5dc
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79aee22a
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@30893e08
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3a1706e1
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3a1706e1
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@594d9f07
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5befbac1
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e9f73b
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1a565afb
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2fd64b11
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@949c598
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@43d3aba5
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bfaa0a6
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2c748a15
2020-12-05 18:46:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2c748a15
2020-12-05 18:46:41 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@24eeac69
2020-12-05 18:46:41 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@331ff3ac] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e5e6fc4]
2020-12-05 18:46:42 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@331ff3ac] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@251d7fdd]
2020-12-05 18:46:42 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-05 18:46:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-05 18:46:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-05 18:46:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-05 18:46:43 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@251d7fdd] for TypeConfiguration
2020-12-05 18:46:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-05 18:46:44 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a2fb8a5, org.springframework.security.web.context.SecurityContextPersistenceFilter@7378c4a4, org.springframework.security.web.header.HeaderWriterFilter@17c34e62, org.springframework.web.filter.CorsFilter@350e3fb4, org.springframework.security.web.authentication.logout.LogoutFilter@998fbd4, com.app.config.JwtRequestFilter@16c0be3b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@61ce238e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e01b195, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13ddaffb, org.springframework.security.web.session.SessionManagementFilter@3c17794e, org.springframework.security.web.access.ExceptionTranslationFilter@3a5e4f32, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@361b3ca6]
2020-12-05 18:46:45 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 18:46:45 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-05 18:46:45 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-05 18:46:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-05 18:46:45 [main] INFO  com.app.Application - Started Application in 10.172 seconds (JVM running for 10.952)
2020-12-05 18:46:51 [http-nio-8080-exec-9] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 18:46:51 [http-nio-8080-exec-9] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-05 18:46:51 [http-nio-8080-exec-9] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-12-05 18:46:51 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-05 18:46:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE slno = ?
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [15:35:22]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [94]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [Dipavali]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [null]
2020-12-05 18:46:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-05 18:46:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-05 18:46:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - update gen_std_holiday_list set branch_slno=?, financial_year_slno=?,holiday_date=?,holiday_name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [94]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [TIMESTAMP] - [Sun Sep 10 00:00:00 IST 30]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [Dipavaliiiii]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [satish]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [2020-12-05]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIME] - [18:46:52]
2020-12-05 18:46:52 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [1]
