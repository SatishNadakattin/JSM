2020-12-08 10:35:11 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 12272 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 10:35:11 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 10:35:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 10:35:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 463ms. Found 25 repository interfaces.
2020-12-08 10:35:14 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 10:35:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 10:35:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 10:35:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 10:35:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 10:35:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 10:35:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 10:35:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 10:35:14 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$59d21e49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 10:35:14 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f27fe683] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 10:35:14 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 10:35:14 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5bdd5689' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 10:35:14 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$17548935] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 10:35:14 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 10:35:14 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 10:35:14 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 10:35:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 10:35:15 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 10:35:15 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 10:35:15 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 10:35:16 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 10:35:16 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4293 ms
2020-12-08 10:35:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 10:35:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3c8a7e38
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3c8a7e38
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3c8a7e38
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30839e44
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45aca496
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d90eeb3
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7978e022
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7978e022
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7978e022
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@326e0b8e
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@326e0b8e
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@326e0b8e
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@15f35bc3
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@15f35bc3
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15f35bc3
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@53ed80d3
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@53ed80d3
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@53ed80d3
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@20a7953c
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@20a7953c
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@20a7953c
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4e83a98
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4e83a98
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4e83a98
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1ee27d73
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1ee27d73
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ee27d73
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@53a84ff4
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@53a84ff4
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7930ffa9
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7930ffa9
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5b7aa898
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5b7aa898
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2489e84a
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@254449bb
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6a0f2853
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a0f2853
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@19e0dffe
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@19e0dffe
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@b0a1231
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@b0a1231
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5a49af50
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5a49af50
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@221a2068
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@221a2068
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7fc420b8
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7fc420b8
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f631ca0
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f631ca0
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f5effb0
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f5effb0
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f5ce0bb
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f5ce0bb
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@31db34da
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@31db34da
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1220ef43
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1220ef43
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@d08edc5
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d08edc5
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d08edc5
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@21eee94f
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@53c1179a
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@53c1179a
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@53c1179a
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@31b7d869
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3811510
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3811510
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2e7157c7
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2e7157c7
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@25f723b0
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@25f723b0
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6d8796c1
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6d8796c1
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cd98a05
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cd98a05
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6f6c6077
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@58606c91
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@58606c91
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@58606c91
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c2a027c
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c2a027c
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c2a027c
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3664f108
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2525a5b8
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@47768e74
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@47768e74
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@47768e74
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7f973a14
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7f973a14
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7f973a14
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3451f01d
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@66deec87
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2721044
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2721044
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6bcc3f27
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@28369db0
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28369db0
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@39c96e48
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@39c96e48
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cf78c85
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6badba10
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5befbac1
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@9efcd90
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9efcd90
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c2924d7
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b5de58f
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6587305a
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@abbe000
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f81621c
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5b9499fe
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@74d6736
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52a33c3f
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@602f8f94
2020-12-08 10:35:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@602f8f94
2020-12-08 10:35:17 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6cd98a05
2020-12-08 10:35:17 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fcd1f0a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7e64c1a9]
2020-12-08 10:35:18 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fcd1f0a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@370c9018]
2020-12-08 10:35:19 [main] DEBUG org.hibernate.SQL - create table gen_std_charges (slno int8 not null, charges varchar(255), created_at date, created_by varchar(255), created_on time, modified_at date, modified_by varchar(255), modified_on time, primary key (slno))
2020-12-08 10:35:19 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 10:35:19 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 10:35:19 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 10:35:19 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 10:35:20 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@370c9018] for TypeConfiguration
2020-12-08 10:35:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 10:35:22 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30437e9c, org.springframework.security.web.context.SecurityContextPersistenceFilter@12f3fcd, org.springframework.security.web.header.HeaderWriterFilter@5ebfe7fa, org.springframework.web.filter.CorsFilter@2e057637, org.springframework.security.web.authentication.logout.LogoutFilter@391e5ffa, com.app.config.JwtRequestFilter@443253a6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12ebfb2d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@153409b8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@762f8ff6, org.springframework.security.web.session.SessionManagementFilter@4177d422, org.springframework.security.web.access.ExceptionTranslationFilter@4ae5ddc0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2435c6ae]
2020-12-08 10:35:22 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 10:35:22 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 10:35:22 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 10:35:23 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 10:35:23 [main] INFO  com.app.Application - Started Application in 11.921 seconds (JVM running for 12.704)
2020-12-08 10:36:09 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 10:36:09 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 10:36:09 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-12-08 10:36:09 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:36:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_13_, latefeepar0_.compounding_period_slno as compoun10_13_, latefeepar0_.created_at as created_2_13_, latefeepar0_.created_by as created_3_13_, latefeepar0_.created_on as created_4_13_, latefeepar0_.grace_period as grace_pe5_13_, latefeepar0_.late_fees as late_fee6_13_, latefeepar0_.modified_at as modified7_13_, latefeepar0_.modified_by as modified8_13_, latefeepar0_.modified_on as modified9_13_ from gen_std_late_fee_parameter latefeepar0_
2020-12-08 10:38:05 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:38:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_4_, compoundin0_.created_at as created_2_4_, compoundin0_.created_by as created_3_4_, compoundin0_.created_on as created_4_4_, compoundin0_.modified_at as modified5_4_, compoundin0_.modified_by as modified6_4_, compoundin0_.modified_on as modified7_4_, compoundin0_.name as name8_4_ from gen_std_compounding_period compoundin0_
2020-12-08 10:38:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [107]
2020-12-08 10:38:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [13:12:14]
2020-12-08 10:38:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [satish]
2020-12-08 10:38:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-07]
2020-12-08 10:38:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-08 10:38:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-08 10:38:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-08 10:38:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [monthly]
2020-12-08 10:38:47 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:38:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_4_, compoundin0_.created_at as created_2_4_, compoundin0_.created_by as created_3_4_, compoundin0_.created_on as created_4_4_, compoundin0_.modified_at as modified5_4_, compoundin0_.modified_by as modified6_4_, compoundin0_.modified_on as modified7_4_, compoundin0_.name as name8_4_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-08 10:38:47 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [weekly]
2020-12-08 10:38:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 10:38:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 10:38:47 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [10:38:47]
2020-12-08 10:38:47 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-08 10:38:47 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 10:38:47 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 10:38:47 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 10:38:47 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 10:38:47 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [weekly]
2020-12-08 10:38:47 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [110]
2020-12-08 10:39:08 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:39:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_4_, compoundin0_.created_at as created_2_4_, compoundin0_.created_by as created_3_4_, compoundin0_.created_on as created_4_4_, compoundin0_.modified_at as modified5_4_, compoundin0_.modified_by as modified6_4_, compoundin0_.modified_on as modified7_4_, compoundin0_.name as name8_4_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-08 10:39:08 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [yearly]
2020-12-08 10:39:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 10:39:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 10:39:08 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [10:39:08]
2020-12-08 10:39:08 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [divyashree]
2020-12-08 10:39:08 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 10:39:08 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 10:39:08 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 10:39:08 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 10:39:08 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [yearly]
2020-12-08 10:39:08 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [111]
2020-12-08 10:39:15 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:39:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_4_, compoundin0_.created_at as created_2_4_, compoundin0_.created_by as created_3_4_, compoundin0_.created_on as created_4_4_, compoundin0_.modified_at as modified5_4_, compoundin0_.modified_by as modified6_4_, compoundin0_.modified_on as modified7_4_, compoundin0_.name as name8_4_ from gen_std_compounding_period compoundin0_
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [107]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [13:12:14]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [satish]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-07]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [monthly]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [110]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [10:38:47]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [satish]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-08]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [weekly]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [111]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [10:39:08]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [divyashree]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-08]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-08 10:39:15 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [yearly]
2020-12-08 10:41:49 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:41:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - Select * FROM gen_std_compounding_period WHERE slno = ?
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [111]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [111]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:39:08]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [divyashree]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-08]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [yearly]
2020-12-08 10:41:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_13_, latefeepar0_.compounding_period_slno as compoun10_13_, latefeepar0_.created_at as created_2_13_, latefeepar0_.created_by as created_3_13_, latefeepar0_.created_on as created_4_13_, latefeepar0_.grace_period as grace_pe5_13_, latefeepar0_.late_fees as late_fee6_13_, latefeepar0_.modified_at as modified7_13_, latefeepar0_.modified_by as modified8_13_, latefeepar0_.modified_on as modified9_13_ from gen_std_late_fee_parameter latefeepar0_ where latefeepar0_.compounding_period_slno=?
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [111]
2020-12-08 10:41:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 10:41:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - insert into gen_std_late_fee_parameter (compounding_period_slno, created_at, created_by, created_on, grace_period, late_fees, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [111]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [10:41:49]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [divyashree]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [INTEGER] - [2]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [5.0]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIME] - [null]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [null]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [DATE] - [null]
2020-12-08 10:41:49 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [BIGINT] - [112]
2020-12-08 10:41:57 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:41:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_13_, latefeepar0_.compounding_period_slno as compoun10_13_, latefeepar0_.created_at as created_2_13_, latefeepar0_.created_by as created_3_13_, latefeepar0_.created_on as created_4_13_, latefeepar0_.grace_period as grace_pe5_13_, latefeepar0_.late_fees as late_fee6_13_, latefeepar0_.modified_at as modified7_13_, latefeepar0_.modified_by as modified8_13_, latefeepar0_.modified_on as modified9_13_ from gen_std_late_fee_parameter latefeepar0_
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_13_] : [BIGINT]) - [48]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([compoun10_13_] : [BIGINT]) - [111]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_13_] : [TIME]) - [10:41:49]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_13_] : [VARCHAR]) - [divyashree]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_13_] : [DATE]) - [2020-12-08]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([grace_pe5_13_] : [INTEGER]) - [2]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([late_fee6_13_] : [NUMERIC]) - [5.00]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_13_] : [TIME]) - [null]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_13_] : [VARCHAR]) - [null]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_13_] : [DATE]) - [null]
2020-12-08 10:41:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_4_0_, compoundin0_.created_at as created_2_4_0_, compoundin0_.created_by as created_3_4_0_, compoundin0_.created_on as created_4_4_0_, compoundin0_.modified_at as modified5_4_0_, compoundin0_.modified_by as modified6_4_0_, compoundin0_.modified_on as modified7_4_0_, compoundin0_.name as name8_4_0_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [111]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_0_] : [TIME]) - [10:39:08]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_0_] : [VARCHAR]) - [divyashree]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_0_] : [TIME]) - [null]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_0_] : [VARCHAR]) - [null]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_0_] : [DATE]) - [null]
2020-12-08 10:41:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_0_] : [VARCHAR]) - [yearly]
2020-12-08 10:43:37 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:43:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_compounding_period WHERE slno = ?
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [110]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [110]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:38:47]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-08]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [weekly]
2020-12-08 10:43:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_13_, latefeepar0_.compounding_period_slno as compoun10_13_, latefeepar0_.created_at as created_2_13_, latefeepar0_.created_by as created_3_13_, latefeepar0_.created_on as created_4_13_, latefeepar0_.grace_period as grace_pe5_13_, latefeepar0_.late_fees as late_fee6_13_, latefeepar0_.modified_at as modified7_13_, latefeepar0_.modified_by as modified8_13_, latefeepar0_.modified_on as modified9_13_ from gen_std_late_fee_parameter latefeepar0_ where latefeepar0_.compounding_period_slno=?
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [110]
2020-12-08 10:43:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 10:43:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into gen_std_late_fee_parameter (compounding_period_slno, created_at, created_by, created_on, grace_period, late_fees, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [110]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [10:43:37]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [divyashree]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [INTEGER] - [8]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [7.0]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIME] - [null]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [null]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [DATE] - [null]
2020-12-08 10:43:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [BIGINT] - [113]
2020-12-08 10:43:37 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: duplicate key value violates unique constraint "gen_std_late_fee_parameter_pkey"
  Detail: Key (slno)=(48) already exists.
2020-12-08 10:43:37 [http-nio-8080-exec-1] ERROR o.h.i.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
2020-12-08 10:43:56 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:43:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_13_, latefeepar0_.compounding_period_slno as compoun10_13_, latefeepar0_.created_at as created_2_13_, latefeepar0_.created_by as created_3_13_, latefeepar0_.created_on as created_4_13_, latefeepar0_.grace_period as grace_pe5_13_, latefeepar0_.late_fees as late_fee6_13_, latefeepar0_.modified_at as modified7_13_, latefeepar0_.modified_by as modified8_13_, latefeepar0_.modified_on as modified9_13_ from gen_std_late_fee_parameter latefeepar0_
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_13_] : [BIGINT]) - [48]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([compoun10_13_] : [BIGINT]) - [111]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_13_] : [TIME]) - [10:41:49]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_13_] : [VARCHAR]) - [divyashree]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_13_] : [DATE]) - [2020-12-08]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([grace_pe5_13_] : [INTEGER]) - [2]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([late_fee6_13_] : [NUMERIC]) - [5.00]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_13_] : [TIME]) - [null]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_13_] : [VARCHAR]) - [null]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_13_] : [DATE]) - [null]
2020-12-08 10:43:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_4_0_, compoundin0_.created_at as created_2_4_0_, compoundin0_.created_by as created_3_4_0_, compoundin0_.created_on as created_4_4_0_, compoundin0_.modified_at as modified5_4_0_, compoundin0_.modified_by as modified6_4_0_, compoundin0_.modified_on as modified7_4_0_, compoundin0_.name as name8_4_0_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [111]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_0_] : [TIME]) - [10:39:08]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_0_] : [VARCHAR]) - [divyashree]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_0_] : [TIME]) - [null]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_0_] : [VARCHAR]) - [null]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_0_] : [DATE]) - [null]
2020-12-08 10:43:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_0_] : [VARCHAR]) - [yearly]
2020-12-08 10:44:32 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:44:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - Select * FROM gen_std_compounding_period WHERE slno = ?
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [110]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [110]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:38:47]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-08]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [weekly]
2020-12-08 10:44:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_13_, latefeepar0_.compounding_period_slno as compoun10_13_, latefeepar0_.created_at as created_2_13_, latefeepar0_.created_by as created_3_13_, latefeepar0_.created_on as created_4_13_, latefeepar0_.grace_period as grace_pe5_13_, latefeepar0_.late_fees as late_fee6_13_, latefeepar0_.modified_at as modified7_13_, latefeepar0_.modified_by as modified8_13_, latefeepar0_.modified_on as modified9_13_ from gen_std_late_fee_parameter latefeepar0_ where latefeepar0_.compounding_period_slno=?
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [110]
2020-12-08 10:44:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 10:44:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into gen_std_late_fee_parameter (compounding_period_slno, created_at, created_by, created_on, grace_period, late_fees, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [110]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [10:44:32]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [divya]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [INTEGER] - [2]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [3.0]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIME] - [null]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [null]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [DATE] - [null]
2020-12-08 10:44:32 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [BIGINT] - [114]
2020-12-08 10:44:32 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: duplicate key value violates unique constraint "gen_std_late_fee_parameter_pkey"
  Detail: Key (slno)=(48) already exists.
2020-12-08 10:44:32 [http-nio-8080-exec-3] ERROR o.h.i.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
2020-12-08 10:45:33 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:45:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - Select * FROM gen_std_late_fee_parameter WHERE slno = ?
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([compounding_period_slno] : [BIGINT]) - [111]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:41:49]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [divyashree]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-08]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([grace_period] : [INTEGER]) - [2]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([late_fees] : [NUMERIC]) - [5.00]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-08 10:45:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_4_0_, compoundin0_.created_at as created_2_4_0_, compoundin0_.created_by as created_3_4_0_, compoundin0_.created_on as created_4_4_0_, compoundin0_.modified_at as modified5_4_0_, compoundin0_.modified_by as modified6_4_0_, compoundin0_.modified_on as modified7_4_0_, compoundin0_.name as name8_4_0_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [111]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_0_] : [TIME]) - [10:39:08]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_0_] : [VARCHAR]) - [divyashree]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_0_] : [TIME]) - [null]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_0_] : [VARCHAR]) - [null]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_0_] : [DATE]) - [null]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_0_] : [VARCHAR]) - [yearly]
2020-12-08 10:45:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update gen_std_late_fee_parameter set compounding_period_slno=?, grace_period=?, late_fees=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [111]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [INTEGER] - [2]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [3.0]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [divya]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [DATE] - [2020-12-08]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [TIME] - [10:45:33]
2020-12-08 10:45:33 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [BIGINT] - [48]
2020-12-08 10:45:46 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:45:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_13_, latefeepar0_.compounding_period_slno as compoun10_13_, latefeepar0_.created_at as created_2_13_, latefeepar0_.created_by as created_3_13_, latefeepar0_.created_on as created_4_13_, latefeepar0_.grace_period as grace_pe5_13_, latefeepar0_.late_fees as late_fee6_13_, latefeepar0_.modified_at as modified7_13_, latefeepar0_.modified_by as modified8_13_, latefeepar0_.modified_on as modified9_13_ from gen_std_late_fee_parameter latefeepar0_ where latefeepar0_.slno=?
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_13_] : [BIGINT]) - [48]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([compoun10_13_] : [BIGINT]) - [111]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_13_] : [TIME]) - [10:41:49]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_13_] : [VARCHAR]) - [divyashree]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_13_] : [DATE]) - [2020-12-08]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([grace_pe5_13_] : [INTEGER]) - [2]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([late_fee6_13_] : [NUMERIC]) - [3.00]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_13_] : [TIME]) - [10:45:33]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_13_] : [VARCHAR]) - [divya]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_13_] : [DATE]) - [2020-12-08]
2020-12-08 10:45:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_4_0_, compoundin0_.created_at as created_2_4_0_, compoundin0_.created_by as created_3_4_0_, compoundin0_.created_on as created_4_4_0_, compoundin0_.modified_at as modified5_4_0_, compoundin0_.modified_by as modified6_4_0_, compoundin0_.modified_on as modified7_4_0_, compoundin0_.name as name8_4_0_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [111]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_0_] : [TIME]) - [10:39:08]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_0_] : [VARCHAR]) - [divyashree]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_0_] : [TIME]) - [null]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_0_] : [VARCHAR]) - [null]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_0_] : [DATE]) - [null]
2020-12-08 10:45:46 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_0_] : [VARCHAR]) - [yearly]
2020-12-08 10:46:16 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 10:46:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - Select * FROM gen_std_late_fee_parameter WHERE slno = ?
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([compounding_period_slno] : [BIGINT]) - [111]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:41:49]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [divyashree]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-08]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([grace_period] : [INTEGER]) - [2]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([late_fees] : [NUMERIC]) - [3.00]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [10:45:33]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [divya]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-08]
2020-12-08 10:46:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_4_0_, compoundin0_.created_at as created_2_4_0_, compoundin0_.created_by as created_3_4_0_, compoundin0_.created_on as created_4_4_0_, compoundin0_.modified_at as modified5_4_0_, compoundin0_.modified_by as modified6_4_0_, compoundin0_.modified_on as modified7_4_0_, compoundin0_.name as name8_4_0_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [111]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_0_] : [TIME]) - [10:39:08]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_0_] : [VARCHAR]) - [divyashree]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_0_] : [TIME]) - [null]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_0_] : [VARCHAR]) - [null]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_0_] : [DATE]) - [null]
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_0_] : [VARCHAR]) - [yearly]
2020-12-08 10:46:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - DELETE FROM gen_std_late_fee_parameter WHERE slno = ?
2020-12-08 10:46:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-08 10:56:25 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 6472 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 10:56:25 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 10:56:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 10:56:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 201ms. Found 26 repository interfaces.
2020-12-08 10:56:27 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 10:56:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 10:56:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 10:56:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 10:56:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 10:56:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 10:56:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 10:56:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 10:56:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d58af9b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 10:56:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6e38c1f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 10:56:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 10:56:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@522ba524' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 10:56:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$930d64a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 10:56:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 10:56:28 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 10:56:28 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 10:56:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 10:56:29 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 10:56:29 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 10:56:29 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 10:56:29 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 10:56:29 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3796 ms
2020-12-08 10:56:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 10:56:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3f36e8d1
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3f36e8d1
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f36e8d1
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@480b57e2
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@561953e3
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@41da3aee
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@13dbed9e
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@13dbed9e
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13dbed9e
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2e766822
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2e766822
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e766822
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@138aa3cc
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@138aa3cc
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@138aa3cc
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@45aca496
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@45aca496
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@45aca496
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7fb53256
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7fb53256
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7fb53256
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5afbd567
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5afbd567
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5afbd567
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@41184371
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@41184371
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@41184371
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@608b1fd2
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@608b1fd2
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7c51782d
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7c51782d
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@411a5965
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@411a5965
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4e83a98
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18a25bbd
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5583098b
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5583098b
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@56f730b2
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@56f730b2
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3e906375
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3e906375
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2489e84a
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2489e84a
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@29ebbdf4
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@29ebbdf4
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@70c69586
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@70c69586
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e0fbeb5
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e0fbeb5
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4694f434
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4694f434
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1192b58e
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1192b58e
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5f5effb0
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f5effb0
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@659feb22
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@659feb22
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2b2954e1
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2b2954e1
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2b2954e1
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@235d659c
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@101a461c
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@101a461c
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@101a461c
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@311ff287
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@16a5eb6d
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@16a5eb6d
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5e8507f1
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5e8507f1
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@21eee94f
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@21eee94f
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@53c1179a
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@53c1179a
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1a47a1e8
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1a47a1e8
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3811510
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2e7157c7
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2e7157c7
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2e7157c7
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@25f723b0
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@25f723b0
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@25f723b0
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6d8796c1
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2c413ffc
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6f6c6077
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6f6c6077
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6f6c6077
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@58606c91
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@58606c91
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@58606c91
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7be2f29a
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@118dcbbd
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2525a5b8
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2525a5b8
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c380bd8
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7f973a14
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7f973a14
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5d342959
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d342959
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@42cc183e
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2721044
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6bee793f
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3a4ab7f7
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3a4ab7f7
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@550de6b8
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3a1706e1
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c6c4689
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63cf9de0
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@594d9f07
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5befbac1
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e9f73b
2020-12-08 10:56:30 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a565afb
2020-12-08 10:56:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@45117dd
2020-12-08 10:56:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@45117dd
2020-12-08 10:56:31 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1a47a1e8
2020-12-08 10:56:31 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@35d60381] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@68ab6ab0]
2020-12-08 10:56:31 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@35d60381] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@797fcf9]
2020-12-08 10:56:32 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 10:56:33 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 10:56:33 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 10:56:33 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 10:56:33 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@797fcf9] for TypeConfiguration
2020-12-08 10:56:33 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 10:56:34 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'charges'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'chargesRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.ChargesRepository.findByName(java.lang.String)! No property name found for type Charges!
2020-12-08 10:56:34 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-08 10:56:34 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-08 10:56:34 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-08 10:56:34 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-08 10:56:34 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 10:56:34 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@797fcf9] for TypeConfiguration
2020-12-08 10:56:34 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5030997b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@797fcf9]
2020-12-08 10:56:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-08 10:56:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-08 10:56:34 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-08 10:56:34 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'charges'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'chargesRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.ChargesRepository.findByName(java.lang.String)! No property name found for type Charges!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'charges'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'chargesRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.ChargesRepository.findByName(java.lang.String)! No property name found for type Charges!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'chargesRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.ChargesRepository.findByName(java.lang.String)! No property name found for type Charges!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.ChargesRepository.findByName(java.lang.String)! No property name found for type Charges!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property name found for type Charges!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-12-08 11:02:50 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 3136 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 11:02:50 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 11:02:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 11:02:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 188ms. Found 26 repository interfaces.
2020-12-08 11:02:52 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 11:02:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 11:02:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:02:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:02:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:02:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:02:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:02:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:02:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$521fa6a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:02:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$eacd6edc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:02:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:02:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@19ccca5' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:02:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$fa2118e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:02:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:02:52 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 11:02:52 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 11:02:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 11:02:53 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 11:02:53 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 11:02:53 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 11:02:53 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 11:02:53 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3574 ms
2020-12-08 11:02:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 11:02:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7978e022
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7978e022
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7978e022
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6993c8df
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@36baa049
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@76a805b7
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@591a4f8e
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@591a4f8e
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@591a4f8e
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@48e8c32a
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@48e8c32a
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48e8c32a
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5377414a
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5377414a
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5377414a
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5d5b9ecb
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5d5b9ecb
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5d5b9ecb
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5807efad
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5807efad
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5807efad
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@47311277
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@47311277
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47311277
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@40230eb9
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@40230eb9
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@40230eb9
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a39aa2b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a39aa2b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2fd954f
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2fd954f
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6dc1dc69
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6dc1dc69
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5d4e13e1
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2676dc05
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@dd2856e
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@dd2856e
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@77f905e3
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@77f905e3
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@777d191f
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@777d191f
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4f8d86e4
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4f8d86e4
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@767599a7
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@767599a7
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@463561c5
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@463561c5
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@58c1da09
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@58c1da09
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4232b34a
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4232b34a
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@234cff57
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@234cff57
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6bc24e72
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bc24e72
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7650ded6
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7650ded6
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6d2a2560
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6d2a2560
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6d2a2560
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@24eeac69
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a43e0ac
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a43e0ac
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a43e0ac
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1084f78c
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2f74900b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f74900b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7d21852b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d21852b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4fc5563d
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4fc5563d
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6a9cd0f8
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a9cd0f8
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@118dcbbd
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@118dcbbd
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49cb1baf
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3458eca5
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3458eca5
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3458eca5
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2740e316
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2740e316
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2740e316
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@76130a29
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@72503b19
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@53e76c11
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@53e76c11
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@53e76c11
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@205df5dc
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@205df5dc
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@205df5dc
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@79aee22a
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6bee793f
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@590f0c50
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@590f0c50
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@39c96e48
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2b7e8044
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2b7e8044
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5e9f73b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5e9f73b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@949c598
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@76e9f00b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@303c55fa
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3eb3232b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3eb3232b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@40fa8766
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@67774e29
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@663f237a
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d7399f9
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49a6f486
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@14fded9d
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@bc6288b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a3bd45b
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@73894c5a
2020-12-08 11:02:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@73894c5a
2020-12-08 11:02:55 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@118dcbbd
2020-12-08 11:02:55 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7741d346] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@52454457]
2020-12-08 11:02:55 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7741d346] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@26c77f54]
2020-12-08 11:02:56 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 11:02:56 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 11:02:56 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 11:02:56 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 11:02:57 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@26c77f54] for TypeConfiguration
2020-12-08 11:02:57 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 11:02:58 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1eddca25, org.springframework.security.web.context.SecurityContextPersistenceFilter@2431050d, org.springframework.security.web.header.HeaderWriterFilter@1e406cbe, org.springframework.web.filter.CorsFilter@22f057b4, org.springframework.security.web.authentication.logout.LogoutFilter@6e617c0e, com.app.config.JwtRequestFilter@67d180e4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@522f0bb8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6fbcc078, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@581e8969, org.springframework.security.web.session.SessionManagementFilter@6f4f2cc0, org.springframework.security.web.access.ExceptionTranslationFilter@30ed2a26, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@239d9cb7]
2020-12-08 11:02:59 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 11:02:59 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 11:02:59 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 11:02:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 11:02:59 [main] INFO  com.app.Application - Started Application in 9.986 seconds (JVM running for 10.722)
2020-12-08 11:10:17 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 11:10:17 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 11:10:17 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-12-08 11:10:17 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 11:10:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 11:10:17 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:10:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 11:10:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 11:10:17 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:10:17 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [11:10:17]
2020-12-08 11:10:17 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [null]
2020-12-08 11:10:17 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 11:10:17 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 11:10:17 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 11:10:17 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-08 11:10:17 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [115]
2020-12-08 11:10:17 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "modified_on" is of type time without time zone but expression is of type date
  Hint: You will need to rewrite or cast the expression.
  Position: 152
2020-12-08 11:10:17 [http-nio-8080-exec-2] ERROR o.h.i.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.SQLGrammarException: could not execute statement]
2020-12-08 11:15:21 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 10628 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 11:15:21 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 11:15:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 11:15:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 203ms. Found 26 repository interfaces.
2020-12-08 11:15:23 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 11:15:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 11:15:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:15:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:15:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:15:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:15:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:15:23 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:15:23 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a26dbc1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:15:23 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3b1b8454] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:15:23 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:15:23 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7103ab0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:15:23 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5ff02706] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:15:23 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:15:23 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 11:15:23 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 11:15:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 11:15:24 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 11:15:24 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 11:15:24 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 11:15:24 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 11:15:24 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3307 ms
2020-12-08 11:15:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 11:15:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@27329d2a
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@27329d2a
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27329d2a
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5afbd567
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@326e0b8e
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@34585ac9
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@56382bc9
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@56382bc9
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56382bc9
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@77bc2e16
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@77bc2e16
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77bc2e16
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4fe533ff
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4fe533ff
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4fe533ff
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@18a25bbd
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@18a25bbd
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@18a25bbd
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5583098b
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5583098b
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5583098b
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@56f730b2
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@56f730b2
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56f730b2
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3e906375
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3e906375
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3e906375
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2489e84a
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2489e84a
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29ebbdf4
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29ebbdf4
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@70c69586
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@70c69586
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19e0dffe
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3976ebfa
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@56928e17
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@56928e17
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@60dd0587
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60dd0587
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4976085
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4976085
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1192b58e
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1192b58e
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3134153d
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3134153d
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6e3eb0cd
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6e3eb0cd
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@421def93
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@421def93
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@235d659c
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@235d659c
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1a8b81e8
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1a8b81e8
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@21eee94f
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@21eee94f
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@53c1179a
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53c1179a
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1a47a1e8
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1a47a1e8
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1a47a1e8
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3811510
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2e7157c7
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2e7157c7
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2e7157c7
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@346f41a9
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3382cf68
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3382cf68
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2c413ffc
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2c413ffc
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f6c6077
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f6c6077
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@58606c91
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58606c91
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c2a027c
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c2a027c
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@350ec690
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2525a5b8
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2525a5b8
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2525a5b8
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@47768e74
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@47768e74
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@47768e74
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f973a14
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3451f01d
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2ecf5915
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2ecf5915
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2ecf5915
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2721044
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2721044
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2721044
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6bcc3f27
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@61514735
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4548d254
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4548d254
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a90c13c
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6badba10
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6badba10
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5befbac1
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5befbac1
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2fd64b11
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6bfaa0a6
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@365cdacf
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@75babb67
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@75babb67
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60bb7995
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40fa8766
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67774e29
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@663f237a
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d7399f9
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49a6f486
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14fded9d
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bc6288b
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@21de60a7
2020-12-08 11:15:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@21de60a7
2020-12-08 11:15:26 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2c2a027c
2020-12-08 11:15:26 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ab35b9c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7741d346]
2020-12-08 11:15:27 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ab35b9c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2c1d57bc]
2020-12-08 11:15:28 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 11:15:28 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 11:15:28 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 11:15:28 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 11:15:28 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2c1d57bc] for TypeConfiguration
2020-12-08 11:15:28 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 11:15:30 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@266a47fd, org.springframework.security.web.context.SecurityContextPersistenceFilter@400e741, org.springframework.security.web.header.HeaderWriterFilter@37b80ec7, org.springframework.web.filter.CorsFilter@a93c798, org.springframework.security.web.authentication.logout.LogoutFilter@68229a6, com.app.config.JwtRequestFilter@666b91db, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35744f8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3d7caf9c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20a9fb01, org.springframework.security.web.session.SessionManagementFilter@6a3a56de, org.springframework.security.web.access.ExceptionTranslationFilter@438c0aaf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@612bb755]
2020-12-08 11:15:30 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 11:15:30 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 11:15:30 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 11:15:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 11:15:30 [main] INFO  com.app.Application - Started Application in 9.744 seconds (JVM running for 10.713)
2020-12-08 11:15:34 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 11:15:34 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 11:15:34 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2020-12-08 11:15:34 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 11:15:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 11:15:35 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:15:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 11:15:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 11:15:35 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:15:35 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [11:15:35]
2020-12-08 11:15:35 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [null]
2020-12-08 11:15:35 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 11:15:35 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 11:15:35 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 11:15:35 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-08 11:15:35 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [116]
2020-12-08 11:15:35 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "modified_on" is of type time without time zone but expression is of type date
  Hint: You will need to rewrite or cast the expression.
  Position: 152
2020-12-08 11:15:35 [http-nio-8080-exec-2] ERROR o.h.i.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.SQLGrammarException: could not execute statement]
2020-12-08 11:37:09 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 11:37:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 11:37:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:37:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 11:37:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 11:37:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:37:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [11:37:09]
2020-12-08 11:37:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [null]
2020-12-08 11:37:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 11:37:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 11:37:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 11:37:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-08 11:37:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [117]
2020-12-08 11:37:09 [http-nio-8080-exec-4] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "modified_on" is of type time without time zone but expression is of type date
  Hint: You will need to rewrite or cast the expression.
  Position: 152
2020-12-08 11:37:09 [http-nio-8080-exec-4] ERROR o.h.i.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.SQLGrammarException: could not execute statement]
2020-12-08 11:38:21 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 11:38:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 11:38:21 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:38:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 11:38:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 11:38:21 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:38:21 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [11:38:21]
2020-12-08 11:38:21 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [null]
2020-12-08 11:38:21 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 11:38:21 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 11:38:21 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 11:38:21 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-08 11:38:21 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [118]
2020-12-08 11:38:21 [http-nio-8080-exec-6] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "modified_on" is of type time without time zone but expression is of type date
  Hint: You will need to rewrite or cast the expression.
  Position: 152
2020-12-08 11:38:21 [http-nio-8080-exec-6] ERROR o.h.i.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.SQLGrammarException: could not execute statement]
2020-12-08 11:41:44 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 11:41:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 11:41:44 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:41:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 11:41:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 11:41:44 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:41:44 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [11:41:44]
2020-12-08 11:41:44 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [null]
2020-12-08 11:41:44 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 11:41:44 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 11:41:44 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 11:41:44 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-08 11:41:44 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [119]
2020-12-08 11:41:44 [http-nio-8080-exec-7] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "modified_on" is of type time without time zone but expression is of type date
  Hint: You will need to rewrite or cast the expression.
  Position: 152
2020-12-08 11:41:44 [http-nio-8080-exec-7] ERROR o.h.i.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.SQLGrammarException: could not execute statement]
2020-12-08 11:46:05 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 5808 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 11:46:05 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 11:46:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 11:46:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 211ms. Found 26 repository interfaces.
2020-12-08 11:46:08 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 11:46:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 11:46:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:46:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:46:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:46:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:46:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:46:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:46:08 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$394ea316] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:46:08 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d1fc6b50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:46:08 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:46:08 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7c455e96' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:46:08 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f6d10e02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:46:08 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:46:08 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 11:46:08 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 11:46:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 11:46:09 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 11:46:09 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 11:46:09 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 11:46:09 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 11:46:09 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3770 ms
2020-12-08 11:46:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 11:46:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2152ab30
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2152ab30
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2152ab30
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@eb6ec6
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@727320fa
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3ce443f9
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7523a3dc
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7523a3dc
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7523a3dc
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6bccd036
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6bccd036
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6bccd036
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a53f215
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a53f215
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a53f215
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@261db982
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@261db982
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@261db982
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@73971965
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@73971965
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@73971965
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@59c70ceb
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@59c70ceb
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@59c70ceb
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@59bbb974
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@59bbb974
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59bbb974
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44be69aa
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44be69aa
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5d1e0fbb
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5d1e0fbb
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5562c2c9
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5562c2c9
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3f36e8d1
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@480b57e2
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1ee47d9e
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1ee47d9e
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@493ac8d3
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@493ac8d3
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@51ab1ee3
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51ab1ee3
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c8a7e38
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c8a7e38
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1945113f
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1945113f
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1db87583
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1db87583
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2f894ad9
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2f894ad9
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@36baa049
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@36baa049
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@411a5965
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@411a5965
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5d5b9ecb
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d5b9ecb
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5807efad
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5807efad
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@47311277
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@47311277
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@47311277
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@717d7587
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7c0777b5
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c0777b5
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c0777b5
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62b93086
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5731d3a
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5731d3a
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7e9f2c32
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e9f2c32
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2676dc05
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2676dc05
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@dd2856e
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@dd2856e
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@77f905e3
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@77f905e3
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3b7eac14
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@e38f0b7
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@e38f0b7
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@e38f0b7
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12ad1b2a
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12ad1b2a
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12ad1b2a
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@345cbf40
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@659feb22
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2b2954e1
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2b2954e1
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2b2954e1
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2da16263
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2da16263
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2da16263
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@101a461c
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@311ff287
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1220ef43
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1220ef43
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5e8507f1
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@724aefc3
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@724aefc3
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6a916402
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a916402
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@62d1dc3c
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@18539cb1
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1084f78c
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4fc5563d
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4fc5563d
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3df1a1ac
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58606c91
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a9cd0f8
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4baed682
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7be2f29a
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@203d1d93
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c2a027c
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@118dcbbd
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5700c9db
2020-12-08 11:46:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5700c9db
2020-12-08 11:46:11 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@77f905e3
2020-12-08 11:46:11 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44dc7b7d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@15fb4566]
2020-12-08 11:46:12 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44dc7b7d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@25791d40]
2020-12-08 11:46:13 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 11:46:13 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 11:46:13 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 11:46:13 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 11:46:13 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@25791d40] for TypeConfiguration
2020-12-08 11:46:13 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 11:46:15 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@438c0aaf, org.springframework.security.web.context.SecurityContextPersistenceFilter@511bfbb0, org.springframework.security.web.header.HeaderWriterFilter@12f3fcd, org.springframework.web.filter.CorsFilter@7577589, org.springframework.security.web.authentication.logout.LogoutFilter@28269c65, com.app.config.JwtRequestFilter@3883b5e9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@126a9a77, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f2ef402, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37b80ec7, org.springframework.security.web.session.SessionManagementFilter@61c145cb, org.springframework.security.web.access.ExceptionTranslationFilter@4177d422, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2e057637]
2020-12-08 11:46:15 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 11:46:15 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 11:46:15 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 11:46:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 11:46:15 [main] INFO  com.app.Application - Started Application in 10.468 seconds (JVM running for 11.242)
2020-12-08 11:46:24 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 11:46:24 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 11:46:24 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2020-12-08 11:46:24 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 11:46:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 11:46:24 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:46:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 11:46:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 11:46:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:46:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [11:46:25]
2020-12-08 11:46:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [null]
2020-12-08 11:46:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 11:46:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 11:46:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 11:46:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-08 11:46:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [120]
2020-12-08 11:46:25 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "modified_on" is of type time without time zone but expression is of type date
  Hint: You will need to rewrite or cast the expression.
  Position: 152
2020-12-08 11:46:25 [http-nio-8080-exec-2] ERROR o.h.i.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.SQLGrammarException: could not execute statement]
2020-12-08 11:49:14 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 11:49:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 11:49:14 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:49:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 11:49:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 11:49:14 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:49:14 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [11:49:14]
2020-12-08 11:49:14 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [satish]
2020-12-08 11:49:14 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 11:49:14 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 11:49:14 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 11:49:14 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-08 11:49:14 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [121]
2020-12-08 11:49:14 [http-nio-8080-exec-4] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "modified_on" is of type time without time zone but expression is of type date
  Hint: You will need to rewrite or cast the expression.
  Position: 152
2020-12-08 11:49:14 [http-nio-8080-exec-4] ERROR o.h.i.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.SQLGrammarException: could not execute statement]
2020-12-08 11:50:39 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 11052 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 11:50:39 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 11:50:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 11:50:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 188ms. Found 26 repository interfaces.
2020-12-08 11:50:41 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 11:50:41 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 11:50:41 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:50:41 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:50:41 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:50:41 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:50:41 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:50:41 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:50:41 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6994fa37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:50:41 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$242c271] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:50:41 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:50:41 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@29f0c4f2' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:50:41 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$27176523] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:50:41 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:50:41 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 11:50:41 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 11:50:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 11:50:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 11:50:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 11:50:42 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 11:50:43 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 11:50:43 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3403 ms
2020-12-08 11:50:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 11:50:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1a500561
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1a500561
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a500561
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@210d2a6c
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@66236a0a
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@176555c
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@97a145b
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@97a145b
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@97a145b
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@526a9908
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@526a9908
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@526a9908
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@60a19573
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@60a19573
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@60a19573
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4db60246
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4db60246
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4db60246
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@34d45ec0
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@34d45ec0
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34d45ec0
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3ce443f9
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3ce443f9
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3ce443f9
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7523a3dc
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7523a3dc
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7523a3dc
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6bccd036
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6bccd036
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a53f215
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a53f215
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@261db982
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@261db982
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@bbd4791
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@76a14c8d
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@46f902e0
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@46f902e0
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7165d530
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7165d530
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7219ac49
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7219ac49
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2eed37f4
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2eed37f4
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@673c4f6e
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@673c4f6e
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@480b57e2
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@480b57e2
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ee47d9e
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ee47d9e
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@493ac8d3
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@493ac8d3
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@45aca496
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@45aca496
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@27329d2a
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@27329d2a
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@57545c3f
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@57545c3f
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@76a805b7
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76a805b7
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76a805b7
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@608b1fd2
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7c51782d
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c51782d
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c51782d
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@20a7953c
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4e83a98
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4e83a98
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1ee27d73
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ee27d73
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@53a84ff4
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53a84ff4
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7930ffa9
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7930ffa9
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b7aa898
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b7aa898
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2489e84a
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@29ebbdf4
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@29ebbdf4
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@29ebbdf4
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@70c69586
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@70c69586
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@70c69586
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0fbeb5
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@b0a1231
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5a49af50
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5a49af50
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5a49af50
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@221a2068
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@221a2068
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@221a2068
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4976085
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@31142d58
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3134153d
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3134153d
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@25d0cb3a
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@421def93
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@421def93
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2da16263
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2da16263
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@101a461c
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@311ff287
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1220ef43
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5034f5dd
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5034f5dd
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a47a1e8
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6d2a2560
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62d1dc3c
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3811510
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24eeac69
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18539cb1
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@748f93bb
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f2d31af
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4041739c
2020-12-08 11:50:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4041739c
2020-12-08 11:50:44 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5b7aa898
2020-12-08 11:50:44 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9accff0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@52559a69]
2020-12-08 11:50:45 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9accff0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@74ba6ff5]
2020-12-08 11:50:46 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 11:50:46 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 11:50:46 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 11:50:46 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 11:50:46 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@74ba6ff5] for TypeConfiguration
2020-12-08 11:50:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 11:50:48 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@afb7b03, org.springframework.security.web.context.SecurityContextPersistenceFilter@442310fd, org.springframework.security.web.header.HeaderWriterFilter@2c224096, org.springframework.web.filter.CorsFilter@4fd63c43, org.springframework.security.web.authentication.logout.LogoutFilter@12f3fcd, com.app.config.JwtRequestFilter@5d6d424d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3ca6bd01, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ae5ddc0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d483ebe, org.springframework.security.web.session.SessionManagementFilter@4bceac99, org.springframework.security.web.access.ExceptionTranslationFilter@37665305, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2aeb7c4c]
2020-12-08 11:50:48 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 11:50:48 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 11:50:49 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 11:50:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 11:50:49 [main] INFO  com.app.Application - Started Application in 10.254 seconds (JVM running for 11.079)
2020-12-08 11:50:52 [http-nio-8080-exec-9] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 11:50:52 [http-nio-8080-exec-9] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 11:50:52 [http-nio-8080-exec-9] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-12-08 11:50:52 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 11:50:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 11:50:53 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:50:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 11:50:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 11:50:53 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:50:53 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [11:50:53]
2020-12-08 11:50:53 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [satish]
2020-12-08 11:50:53 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIMESTAMP] - [Tue Dec 08 11:50:53 IST 2020]
2020-12-08 11:50:53 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 11:50:53 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 11:50:53 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIMESTAMP] - [null]
2020-12-08 11:50:53 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [122]
2020-12-08 11:50:53 [http-nio-8080-exec-9] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: invalid input syntax for type date: "11:50:53.299+05:30"
2020-12-08 11:50:53 [http-nio-8080-exec-9] ERROR o.h.i.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.DataException: could not execute statement]
2020-12-08 11:54:52 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9436 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 11:54:52 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 11:54:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 11:54:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 203ms. Found 26 repository interfaces.
2020-12-08 11:54:55 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 11:54:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 11:54:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:54:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:54:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:54:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:54:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:54:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:54:55 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a48b699] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:54:55 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$22f67ed3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:54:55 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:54:55 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@26ae880a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:54:55 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$47cb2185] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:54:55 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:54:55 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 11:54:55 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 11:54:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 11:54:56 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 11:54:56 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 11:54:56 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 11:54:56 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 11:54:56 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3465 ms
2020-12-08 11:54:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 11:54:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@12f49ca8
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@12f49ca8
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@12f49ca8
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@44be69aa
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@551e4c6d
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2eed37f4
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@673c4f6e
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@673c4f6e
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@673c4f6e
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@480b57e2
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@480b57e2
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@480b57e2
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1ee47d9e
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1ee47d9e
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ee47d9e
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@493ac8d3
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@493ac8d3
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@493ac8d3
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51ab1ee3
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51ab1ee3
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@51ab1ee3
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3c8a7e38
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3c8a7e38
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3c8a7e38
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1945113f
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1945113f
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1945113f
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1db87583
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1db87583
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f894ad9
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f894ad9
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@36baa049
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@36baa049
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@76a805b7
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@608b1fd2
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7c51782d
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c51782d
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@411a5965
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@411a5965
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@71b639d0
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@71b639d0
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@542f6803
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@542f6803
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@316acbb5
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@316acbb5
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@717d7587
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@717d7587
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c0777b5
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c0777b5
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e642ee1
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e642ee1
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4694f434
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4694f434
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77f905e3
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77f905e3
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@777d191f
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@777d191f
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f8d86e4
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f8d86e4
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f8d86e4
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@12ad1b2a
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@345cbf40
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@345cbf40
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@345cbf40
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@659feb22
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2b2954e1
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b2954e1
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2da16263
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2da16263
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5ebffb44
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5ebffb44
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5edacf20
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5edacf20
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@234cff57
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@234cff57
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d08edc5
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@724aefc3
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@724aefc3
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@724aefc3
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5034f5dd
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5034f5dd
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5034f5dd
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@62d1dc3c
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@18539cb1
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@22d9bc14
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@22d9bc14
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@22d9bc14
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@40d60f2
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@40d60f2
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@40d60f2
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6d8796c1
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2c413ffc
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@286090c
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@286090c
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@58606c91
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7d979d34
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d979d34
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3458eca5
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3458eca5
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@34b87182
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5b5a4aed
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@72503b19
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@61514735
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61514735
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43b5021c
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28369db0
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@30893e08
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e86807a
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4548d254
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@590f0c50
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@208f0007
2020-12-08 11:54:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a90c13c
2020-12-08 11:54:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@67fa5045
2020-12-08 11:54:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@67fa5045
2020-12-08 11:54:58 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@234cff57
2020-12-08 11:54:58 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@667dcaad] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@22d7fd41]
2020-12-08 11:54:58 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@667dcaad] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@349c4d1c]
2020-12-08 11:54:59 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 11:54:59 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 11:54:59 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 11:54:59 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 11:54:59 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@349c4d1c] for TypeConfiguration
2020-12-08 11:54:59 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 11:55:02 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1eb52131, org.springframework.security.web.context.SecurityContextPersistenceFilter@344a065a, org.springframework.security.web.header.HeaderWriterFilter@22172b00, org.springframework.web.filter.CorsFilter@1e1598e5, org.springframework.security.web.authentication.logout.LogoutFilter@23d23d98, com.app.config.JwtRequestFilter@72d16d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1870b9b8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67f266bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@67a3394c, org.springframework.security.web.session.SessionManagementFilter@6719f206, org.springframework.security.web.access.ExceptionTranslationFilter@50e24ea4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7ca29311]
2020-12-08 11:55:02 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 11:55:02 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 11:55:02 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 11:55:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 11:55:02 [main] INFO  com.app.Application - Started Application in 10.54 seconds (JVM running for 11.324)
2020-12-08 11:55:10 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 11:55:10 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 11:55:10 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-12-08 11:55:10 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 11:55:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 11:55:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:55:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 11:55:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 11:55:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:55:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [11:55:11]
2020-12-08 11:55:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [satish]
2020-12-08 11:55:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 11:55:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 11:55:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 11:55:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [2020-12-08]
2020-12-08 11:55:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [123]
2020-12-08 11:55:11 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: invalid input syntax for type date: "11:55:11.108+05:30"
2020-12-08 11:55:11 [http-nio-8080-exec-2] ERROR o.h.i.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.DataException: could not execute statement]
2020-12-08 11:56:51 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9732 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 11:56:51 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 11:56:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 11:56:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 278ms. Found 26 repository interfaces.
2020-12-08 11:56:55 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 11:56:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 11:56:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:56:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:56:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:56:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:56:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 11:56:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 11:56:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e269ee2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:56:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7b17b668] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:56:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:56:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@51dbd6e4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:56:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9fec591a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:56:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 11:56:56 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 11:56:56 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 11:56:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 11:56:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 11:56:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 11:56:57 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 11:56:57 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 11:56:57 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5240 ms
2020-12-08 11:56:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 11:56:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6ee99964
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6ee99964
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6ee99964
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@46f902e0
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@575b5f7d
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@12f49ca8
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@21da4b5f
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@21da4b5f
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21da4b5f
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@9b76b60
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@9b76b60
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@9b76b60
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@15c487a8
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@15c487a8
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15c487a8
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@40f35e52
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@40f35e52
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40f35e52
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@41da3aee
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@41da3aee
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@41da3aee
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@13dbed9e
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@13dbed9e
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@13dbed9e
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2e766822
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2e766822
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2e766822
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@138aa3cc
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@138aa3cc
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@45aca496
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@45aca496
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7fb53256
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7fb53256
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7978e022
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6993c8df
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@34585ac9
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34585ac9
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@56382bc9
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@56382bc9
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@77bc2e16
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@77bc2e16
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4fe533ff
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4fe533ff
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@18a25bbd
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@18a25bbd
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5583098b
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5583098b
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f730b2
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f730b2
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e906375
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e906375
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6dc1dc69
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6dc1dc69
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@b0a1231
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b0a1231
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5a49af50
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a49af50
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@221a2068
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@221a2068
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@221a2068
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4976085
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1192b58e
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1192b58e
2020-12-08 11:56:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1192b58e
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1697f2b3
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@25d0cb3a
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@25d0cb3a
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3468ee6e
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3468ee6e
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@58d6e55a
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@58d6e55a
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@f5ce0bb
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f5ce0bb
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@311ff287
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@311ff287
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@109f8c7e
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1a8b81e8
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1a8b81e8
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1a8b81e8
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@49fa1d74
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@49fa1d74
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@49fa1d74
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7cfb4736
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7650ded6
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6d2a2560
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6d2a2560
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6d2a2560
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@748f93bb
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@748f93bb
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@748f93bb
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2a43e0ac
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1084f78c
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2e26173
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e26173
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7d21852b
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@31120021
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31120021
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2c2a027c
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c2a027c
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@350ec690
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dba4cd
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@47768e74
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@42cc183e
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@42cc183e
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2721044
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@205df5dc
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6aa7b67f
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6bcc3f27
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@79aee22a
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@36920bd6
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@61514735
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bee793f
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6fa2448b
2020-12-08 11:56:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6fa2448b
2020-12-08 11:56:59 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@311ff287
2020-12-08 11:56:59 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6f347d7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5974b233]
2020-12-08 11:57:00 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6f347d7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@bb3ecfe]
2020-12-08 11:57:01 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 11:57:01 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 11:57:01 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 11:57:01 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 11:57:01 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@bb3ecfe] for TypeConfiguration
2020-12-08 11:57:01 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 11:57:02 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67a3dd86, org.springframework.security.web.context.SecurityContextPersistenceFilter@6719f206, org.springframework.security.web.header.HeaderWriterFilter@50e24ea4, org.springframework.web.filter.CorsFilter@430212cb, org.springframework.security.web.authentication.logout.LogoutFilter@cea67b1, com.app.config.JwtRequestFilter@1324e70a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@344a065a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3151277f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1eb52131, org.springframework.security.web.session.SessionManagementFilter@5ffdd510, org.springframework.security.web.access.ExceptionTranslationFilter@30cb223b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5dc7391e]
2020-12-08 11:57:03 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 11:57:03 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 11:57:03 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 11:57:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 11:57:03 [main] INFO  com.app.Application - Started Application in 12.773 seconds (JVM running for 14.061)
2020-12-08 11:57:11 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 11:57:11 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 11:57:11 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-12-08 11:57:11 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 11:57:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 11:57:11 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:57:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 11:57:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 11:57:11 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 11:57:11 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [null]
2020-12-08 11:57:11 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [null]
2020-12-08 11:57:11 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [null]
2020-12-08 11:57:11 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 11:57:11 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 11:57:11 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-08 11:57:11 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [124]
2020-12-08 11:57:11 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "created_on" is of type time without time zone but expression is of type date
  Hint: You will need to rewrite or cast the expression.
  Position: 140
2020-12-08 11:57:11 [http-nio-8080-exec-1] ERROR o.h.i.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.SQLGrammarException: could not execute statement]
2020-12-08 12:02:17 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 7748 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 12:02:17 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 12:02:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 12:02:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 199ms. Found 26 repository interfaces.
2020-12-08 12:02:19 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 12:02:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 12:02:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:02:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:02:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:02:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:02:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:02:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:02:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e821232] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:02:20 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b72fda6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:02:20 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:02:20 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@31ee96f4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:02:20 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$dc047d1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:02:20 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:02:20 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 12:02:20 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 12:02:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 12:02:20 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 12:02:20 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 12:02:20 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 12:02:21 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 12:02:21 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3681 ms
2020-12-08 12:02:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 12:02:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@261db982
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@261db982
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@261db982
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@bbd4791
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@76a14c8d
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@257ef9ed
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@575b5f7d
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@575b5f7d
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@575b5f7d
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1b2df3aa
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1b2df3aa
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b2df3aa
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@625a9c5d
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@625a9c5d
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@625a9c5d
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@127705e4
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@127705e4
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@127705e4
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c011174
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c011174
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7c011174
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@561953e3
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@561953e3
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@561953e3
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@64920dc2
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@64920dc2
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@64920dc2
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b38b1f
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b38b1f
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@28757abd
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@28757abd
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@30839e44
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@30839e44
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@45aca496
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d90eeb3
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7978e022
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7978e022
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@326e0b8e
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@326e0b8e
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@15f35bc3
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@15f35bc3
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@53ed80d3
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@53ed80d3
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@20a7953c
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@20a7953c
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4e83a98
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4e83a98
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ee27d73
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ee27d73
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@53a84ff4
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@53a84ff4
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@254449bb
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@254449bb
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@70c69586
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@70c69586
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3e0fbeb5
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e0fbeb5
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4694f434
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4694f434
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4694f434
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5a49af50
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@221a2068
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@221a2068
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@221a2068
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4976085
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1192b58e
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1192b58e
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3134153d
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3134153d
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6e3eb0cd
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6e3eb0cd
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@421def93
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@421def93
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@235d659c
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@235d659c
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f5ce0bb
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@311ff287
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@311ff287
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@311ff287
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@16a5eb6d
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@16a5eb6d
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@16a5eb6d
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5e8507f1
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@49fa1d74
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7cfb4736
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7cfb4736
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7cfb4736
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31b7d869
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31b7d869
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31b7d869
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6d2a2560
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@24eeac69
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@346f41a9
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@346f41a9
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4aa11206
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2c413ffc
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c413ffc
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@286090c
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@286090c
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58606c91
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7be2f29a
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3664f108
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@124d02b2
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@124d02b2
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1cfc2538
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@66deec87
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d342959
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2ecf5915
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@42cc183e
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3e4e8fdf
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6a1d6ef2
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@31973858
2020-12-08 12:02:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@31973858
2020-12-08 12:02:22 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@235d659c
2020-12-08 12:02:22 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67bb4dcd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@738d37fc]
2020-12-08 12:02:23 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67bb4dcd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1c98b4eb]
2020-12-08 12:02:24 [main] DEBUG org.hibernate.SQL - create table gen_std_charges (slno int8 not null, charges varchar(255), created_at time, created_by varchar(255), created_on DATE, modified_at time, modified_by varchar(255), modified_on DATE, primary key (slno))
2020-12-08 12:02:24 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 12:02:24 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 12:02:24 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 12:02:24 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 12:02:24 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1c98b4eb] for TypeConfiguration
2020-12-08 12:02:24 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 12:02:26 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5065bdac, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c20e9d6, org.springframework.security.web.header.HeaderWriterFilter@64887fbc, org.springframework.web.filter.CorsFilter@2e9dcdd3, org.springframework.security.web.authentication.logout.LogoutFilter@344a065a, com.app.config.JwtRequestFilter@185a0811, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42805abe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@50e24ea4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6e617c0e, org.springframework.security.web.session.SessionManagementFilter@18b58c77, org.springframework.security.web.access.ExceptionTranslationFilter@470b5213, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c0930c4]
2020-12-08 12:02:26 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 12:02:26 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 12:02:27 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 12:02:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 12:02:27 [main] INFO  com.app.Application - Started Application in 10.401 seconds (JVM running for 11.183)
2020-12-08 12:05:46 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 12:05:46 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 12:05:46 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-12-08 12:05:46 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:05:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 12:05:46 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 12:05:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 12:05:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 12:05:46 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 12:05:46 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [12:05:46]
2020-12-08 12:05:46 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [satish]
2020-12-08 12:05:46 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 12:05:46 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 12:05:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 12:05:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-08 12:05:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [125]
2020-12-08 12:16:15 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:16:36 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:17:43 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 13708 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 12:17:43 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 12:17:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 12:17:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 209ms. Found 26 repository interfaces.
2020-12-08 12:17:45 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 12:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 12:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:17:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$58e20e5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:17:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f18fd699] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:17:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:17:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@29852487' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:17:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$1664794b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:17:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:17:45 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 12:17:45 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 12:17:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 12:17:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 12:17:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 12:17:46 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 12:17:46 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 12:17:46 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3406 ms
2020-12-08 12:17:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 12:17:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@575b5f7d
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@575b5f7d
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@575b5f7d
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@12f49ca8
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@44be69aa
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@551e4c6d
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3fb9a67f
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3fb9a67f
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3fb9a67f
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3f36e8d1
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3f36e8d1
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3f36e8d1
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@340d6d89
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@340d6d89
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@340d6d89
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5dc0ff7d
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5dc0ff7d
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5dc0ff7d
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@67531e3a
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@67531e3a
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@67531e3a
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3003e580
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3003e580
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3003e580
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@10a98392
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@10a98392
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@10a98392
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@697173d9
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@697173d9
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1d6d1d42
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1d6d1d42
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6993c8df
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6993c8df
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@36baa049
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@76a805b7
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@591a4f8e
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@591a4f8e
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@48e8c32a
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@48e8c32a
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5377414a
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5377414a
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5d5b9ecb
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5d5b9ecb
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5807efad
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5807efad
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@47311277
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@47311277
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40230eb9
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40230eb9
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2a39aa2b
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2a39aa2b
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2676dc05
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2676dc05
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3b1dc579
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3b1dc579
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@338766de
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@338766de
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@31142d58
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@31142d58
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@31142d58
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f8d86e4
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@767599a7
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@767599a7
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@767599a7
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@345cbf40
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2f4b98f6
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f4b98f6
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@751ae8a4
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@751ae8a4
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@47e51549
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@47e51549
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7377781e
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7377781e
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7e307087
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7e307087
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@234cff57
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3f362135
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f362135
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3f362135
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2a097d77
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2a097d77
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2a097d77
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6a916402
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@62d1dc3c
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7f2d31af
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f2d31af
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7f2d31af
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1084f78c
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1084f78c
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1084f78c
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@40d60f2
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6d8796c1
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1e95b653
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e95b653
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@286090c
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@203d1d93
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@203d1d93
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@77dba4cd
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77dba4cd
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3458eca5
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@34b87182
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@76130a29
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6bcc3f27
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bcc3f27
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61514735
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6bee793f
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@655f69da
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@43b5021c
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28369db0
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@30893e08
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e86807a
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4548d254
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@41f4039e
2020-12-08 12:17:48 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@41f4039e
2020-12-08 12:17:48 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7e307087
2020-12-08 12:17:48 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4fc165f6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@545b5ed0]
2020-12-08 12:17:49 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4fc165f6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@689faf79]
2020-12-08 12:17:50 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 12:17:50 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 12:17:50 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 12:17:50 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 12:17:50 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@689faf79] for TypeConfiguration
2020-12-08 12:17:50 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 12:17:52 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@310f8a05, org.springframework.security.web.context.SecurityContextPersistenceFilter@9825465, org.springframework.security.web.header.HeaderWriterFilter@320ba79f, org.springframework.web.filter.CorsFilter@4f98ac31, org.springframework.security.web.authentication.logout.LogoutFilter@6ee1ddcf, com.app.config.JwtRequestFilter@2b15ba1a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2befb16f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@cd93621, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5cb6abc8, org.springframework.security.web.session.SessionManagementFilter@1870b9b8, org.springframework.security.web.access.ExceptionTranslationFilter@4205d5d0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2674ca88]
2020-12-08 12:17:52 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 12:17:53 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 12:17:53 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 12:17:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 12:17:53 [main] INFO  com.app.Application - Started Application in 11.158 seconds (JVM running for 12.141)
2020-12-08 12:17:57 [http-nio-8080-exec-9] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 12:17:57 [http-nio-8080-exec-9] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 12:17:57 [http-nio-8080-exec-9] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-12-08 12:17:57 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:17:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_
2020-12-08 12:17:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 12:17:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [serice charges]
2020-12-08 12:17:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [12:05:46]
2020-12-08 12:17:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [satish]
2020-12-08 12:17:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 12:17:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 12:17:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 12:17:57 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 12:18:48 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 2368 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 12:18:48 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 12:18:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 12:18:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 182ms. Found 26 repository interfaces.
2020-12-08 12:18:49 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 12:18:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 12:18:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:18:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:18:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:18:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:18:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:18:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:18:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3b7072c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:18:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d41e3b00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:18:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:18:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6bd16207' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:18:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f8f2ddb2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:18:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:18:50 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 12:18:50 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 12:18:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 12:18:51 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 12:18:51 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 12:18:51 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 12:18:51 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 12:18:51 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3240 ms
2020-12-08 12:18:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 12:18:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@551e4c6d
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@551e4c6d
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@551e4c6d
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2eed37f4
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@127705e4
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@15c487a8
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@40f35e52
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@40f35e52
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@40f35e52
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@41da3aee
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@41da3aee
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41da3aee
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@13dbed9e
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@13dbed9e
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13dbed9e
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2e766822
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2e766822
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e766822
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@138aa3cc
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@138aa3cc
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@138aa3cc
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@45aca496
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@45aca496
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@45aca496
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7fb53256
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7fb53256
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7fb53256
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5afbd567
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5afbd567
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41184371
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41184371
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@608b1fd2
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@608b1fd2
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@53ed80d3
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@77bc2e16
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4fe533ff
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4fe533ff
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@18a25bbd
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@18a25bbd
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5583098b
2020-12-08 12:18:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5583098b
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@56f730b2
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@56f730b2
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e906375
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e906375
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2489e84a
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2489e84a
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@29ebbdf4
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@29ebbdf4
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@70c69586
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@70c69586
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60dd0587
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60dd0587
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7fc420b8
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7fc420b8
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5f631ca0
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f631ca0
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5f5effb0
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5f5effb0
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5f5effb0
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6e3eb0cd
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@421def93
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@421def93
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@421def93
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@58d6e55a
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@f5ce0bb
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@f5ce0bb
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@311ff287
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@311ff287
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16a5eb6d
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16a5eb6d
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5e8507f1
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5e8507f1
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@21eee94f
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@21eee94f
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7cfb4736
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@31b7d869
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@31b7d869
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@31b7d869
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3811510
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3811510
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3811510
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2e7157c7
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@346f41a9
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3382cf68
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3382cf68
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3382cf68
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2c413ffc
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2c413ffc
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2c413ffc
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3b8ec001
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4fc5563d
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7be2f29a
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7be2f29a
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@118dcbbd
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2525a5b8
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2525a5b8
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5b5a4aed
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5b5a4aed
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7f973a14
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3451f01d
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@42cc183e
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2e86807a
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2e86807a
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@208f0007
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3a90c13c
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@39c96e48
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@188598ad
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40d23c82
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7cf78c85
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ebe067d
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a4ab7f7
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@996a546
2020-12-08 12:18:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@996a546
2020-12-08 12:18:53 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@21eee94f
2020-12-08 12:18:53 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45117dd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7741771e]
2020-12-08 12:18:53 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45117dd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@46394f65]
2020-12-08 12:18:54 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 12:18:54 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 12:18:54 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 12:18:54 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 12:18:55 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@46394f65] for TypeConfiguration
2020-12-08 12:18:55 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 12:18:56 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a97a895, org.springframework.security.web.context.SecurityContextPersistenceFilter@78ea700f, org.springframework.security.web.header.HeaderWriterFilter@1870b9b8, org.springframework.web.filter.CorsFilter@5401c6a8, org.springframework.security.web.authentication.logout.LogoutFilter@6a3e633a, com.app.config.JwtRequestFilter@443dae2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3b1137b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@23d23d98, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1ef5cde4, org.springframework.security.web.session.SessionManagementFilter@31c0c7e5, org.springframework.security.web.access.ExceptionTranslationFilter@344a065a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@36fe83d]
2020-12-08 12:18:56 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 12:18:57 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 12:18:57 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 12:18:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 12:18:57 [main] INFO  com.app.Application - Started Application in 9.797 seconds (JVM running for 10.584)
2020-12-08 12:19:00 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 12:19:00 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 12:19:00 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-12-08 12:19:00 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:19:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_
2020-12-08 12:19:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 12:19:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [serice charges]
2020-12-08 12:19:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [12:05:46]
2020-12-08 12:19:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [satish]
2020-12-08 12:19:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 12:19:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 12:19:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 12:19:00 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 12:19:05 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:19:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_
2020-12-08 12:19:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 12:19:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [serice charges]
2020-12-08 12:19:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [12:05:46]
2020-12-08 12:19:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [satish]
2020-12-08 12:19:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 12:19:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 12:19:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 12:19:05 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 12:22:36 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 8728 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 12:22:36 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 12:22:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 12:22:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 211ms. Found 26 repository interfaces.
2020-12-08 12:22:39 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 12:22:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 12:22:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:22:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:22:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:22:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:22:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:22:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:22:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$68798713] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:22:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1274f4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:22:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:22:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6e1f8469' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:22:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$25fbf1ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:22:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:22:39 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 12:22:39 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 12:22:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 12:22:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 12:22:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 12:22:40 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 12:22:40 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 12:22:40 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3805 ms
2020-12-08 12:22:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 12:22:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@cb39552
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@cb39552
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@cb39552
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6b63e6ad
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@52bf7bf6
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@22f4f8f2
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@17410c07
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@17410c07
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17410c07
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@64f981e2
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@64f981e2
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@64f981e2
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@12f49ca8
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@12f49ca8
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@12f49ca8
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@21da4b5f
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@21da4b5f
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@21da4b5f
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@9b76b60
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@9b76b60
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9b76b60
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@15c487a8
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@15c487a8
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15c487a8
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@40f35e52
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@40f35e52
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@40f35e52
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@41da3aee
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@41da3aee
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13dbed9e
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13dbed9e
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2e766822
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2e766822
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@21a02556
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@10a98392
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@697173d9
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@697173d9
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1d6d1d42
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1d6d1d42
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6993c8df
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6993c8df
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@34585ac9
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@34585ac9
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@56382bc9
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@56382bc9
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@77bc2e16
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@77bc2e16
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4fe533ff
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4fe533ff
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18a25bbd
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18a25bbd
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@40230eb9
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@40230eb9
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@254449bb
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@254449bb
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6a0f2853
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6a0f2853
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@19e0dffe
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19e0dffe
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19e0dffe
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3976ebfa
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@56928e17
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56928e17
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56928e17
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3b1dc579
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@338766de
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@338766de
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@31142d58
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@31142d58
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1697f2b3
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1697f2b3
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@25d0cb3a
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@25d0cb3a
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3468ee6e
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3468ee6e
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58c1da09
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4232b34a
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4232b34a
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4232b34a
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@360e9c06
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@360e9c06
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@360e9c06
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@109f8c7e
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7e307087
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4bcaa195
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4bcaa195
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4bcaa195
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6bc24e72
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6bc24e72
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6bc24e72
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2a097d77
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5034f5dd
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@24eeac69
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@24eeac69
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7f2d31af
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4aa11206
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aa11206
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2c413ffc
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c413ffc
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b8ec001
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4fc5563d
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7be2f29a
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@47768e74
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@47768e74
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c991465
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5fef2aac
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7f973a14
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@76130a29
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@124d02b2
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3451f01d
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72503b19
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1cfc2538
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7364eed1
2020-12-08 12:22:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7364eed1
2020-12-08 12:22:42 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3468ee6e
2020-12-08 12:22:42 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26865482] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34451ed8]
2020-12-08 12:22:42 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26865482] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1d289d3f]
2020-12-08 12:22:43 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 12:22:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 12:22:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 12:22:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 12:22:44 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1d289d3f] for TypeConfiguration
2020-12-08 12:22:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 12:22:45 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5065bdac, org.springframework.security.web.context.SecurityContextPersistenceFilter@20f99c18, org.springframework.security.web.header.HeaderWriterFilter@2fa2143d, org.springframework.web.filter.CorsFilter@2e9dcdd3, org.springframework.security.web.authentication.logout.LogoutFilter@5ae16aa, com.app.config.JwtRequestFilter@6f22c1f1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76e2a621, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24d0c6a4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6e617c0e, org.springframework.security.web.session.SessionManagementFilter@4c9d833, org.springframework.security.web.access.ExceptionTranslationFilter@f4d391c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c0930c4]
2020-12-08 12:22:46 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 12:22:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 12:22:46 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 12:22:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 12:22:46 [main] INFO  com.app.Application - Started Application in 10.447 seconds (JVM running for 11.266)
2020-12-08 12:22:59 [http-nio-8080-exec-10] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 12:22:59 [http-nio-8080-exec-10] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 12:22:59 [http-nio-8080-exec-10] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-12-08 12:22:59 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:22:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 12:22:59 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-08 12:23:10 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:23:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 12:23:10 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-08 12:23:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 12:23:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [serice charges]
2020-12-08 12:23:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [12:05:46]
2020-12-08 12:23:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [satish]
2020-12-08 12:23:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 12:23:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 12:23:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 12:23:10 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 12:36:30 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9788 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 12:36:30 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 12:36:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 12:36:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 196ms. Found 26 repository interfaces.
2020-12-08 12:36:33 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 12:36:33 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 12:36:33 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:36:33 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:36:33 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:36:33 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:36:33 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:36:33 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:36:33 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$77f0a62e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:36:33 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$109e6e68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:36:33 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:36:33 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@35d3ab60' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:36:33 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3573111a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:36:33 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:36:33 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 12:36:33 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 12:36:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 12:36:34 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 12:36:34 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 12:36:34 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 12:36:34 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 12:36:34 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3468 ms
2020-12-08 12:36:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 12:36:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@18137eab
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@18137eab
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18137eab
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f018494
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@51a18b21
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7523a3dc
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6bccd036
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6bccd036
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6bccd036
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2a53f215
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2a53f215
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a53f215
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@261db982
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@261db982
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@261db982
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@73971965
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@73971965
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@73971965
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@59c70ceb
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@59c70ceb
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@59c70ceb
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@59bbb974
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@59bbb974
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@59bbb974
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@44be69aa
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@44be69aa
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44be69aa
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5d1e0fbb
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5d1e0fbb
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5562c2c9
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5562c2c9
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@794366a5
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@794366a5
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@340d6d89
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ee47d9e
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@493ac8d3
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@493ac8d3
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@51ab1ee3
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@51ab1ee3
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3c8a7e38
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3c8a7e38
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1945113f
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1945113f
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1db87583
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1db87583
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2f894ad9
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2f894ad9
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@36baa049
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@36baa049
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@167381c7
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@167381c7
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@71b639d0
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@71b639d0
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5807efad
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5807efad
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@47311277
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@47311277
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@40230eb9
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@40230eb9
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@40230eb9
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c0777b5
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4e642ee1
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4e642ee1
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4e642ee1
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5731d3a
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7e9f2c32
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e9f2c32
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2676dc05
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2676dc05
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@dd2856e
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@dd2856e
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@77f905e3
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@77f905e3
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@777d191f
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@777d191f
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e38f0b7
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@12ad1b2a
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@12ad1b2a
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@12ad1b2a
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@345cbf40
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@345cbf40
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@345cbf40
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2f4b98f6
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2b2954e1
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2da16263
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2da16263
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2da16263
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ebffb44
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ebffb44
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ebffb44
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@31db34da
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@16a5eb6d
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d08edc5
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d08edc5
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@21eee94f
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5034f5dd
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5034f5dd
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@24eeac69
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@24eeac69
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7f2d31af
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@22d9bc14
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2f74900b
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6a9cd0f8
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a9cd0f8
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@203d1d93
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2c2a027c
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@118dcbbd
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d979d34
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@350ec690
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49cb1baf
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3664f108
2020-12-08 12:36:35 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@77dba4cd
2020-12-08 12:36:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7f6329cb
2020-12-08 12:36:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7f6329cb
2020-12-08 12:36:36 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@777d191f
2020-12-08 12:36:36 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41b64020] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a538ed8]
2020-12-08 12:36:36 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41b64020] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@dbed7fd]
2020-12-08 12:36:37 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 12:36:37 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 12:36:37 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 12:36:37 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 12:36:37 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@dbed7fd] for TypeConfiguration
2020-12-08 12:36:37 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 12:36:39 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'charges'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'chargesRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract int com.app.repository.ChargesRepository.updateChargesRecord(java.lang.String,java.lang.String,java.sql.Date,java.sql.Time,java.lang.Long)!
2020-12-08 12:36:39 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-08 12:36:39 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-08 12:36:39 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-08 12:36:39 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-08 12:36:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 12:36:39 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@dbed7fd] for TypeConfiguration
2020-12-08 12:36:39 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3ae91ab3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@dbed7fd]
2020-12-08 12:36:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-08 12:36:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-08 12:36:39 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-08 12:36:39 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'charges'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'chargesRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract int com.app.repository.ChargesRepository.updateChargesRecord(java.lang.String,java.lang.String,java.sql.Date,java.sql.Time,java.lang.Long)!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'charges'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'chargesRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract int com.app.repository.ChargesRepository.updateChargesRecord(java.lang.String,java.lang.String,java.sql.Date,java.sql.Time,java.lang.Long)!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'chargesRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract int com.app.repository.ChargesRepository.updateChargesRecord(java.lang.String,java.lang.String,java.sql.Date,java.sql.Time,java.lang.Long)!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract int com.app.repository.ChargesRepository.updateChargesRecord(java.lang.String,java.lang.String,java.sql.Date,java.sql.Time,java.lang.Long)!
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:93)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.hql.internal.ast.QuerySyntaxException: gen_std_charges is not mapped [update gen_std_charges set charges=?1, modified_by=?2,modified_on=?3,modified_at=?4 WHERE slno=?5]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:138)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:713)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:350)
	at com.sun.proxy.$Proxy96.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87)
	... 106 common frames omitted
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: gen_std_charges is not mapped [update gen_std_charges set charges=?1, modified_by=?2,modified_on=?3,modified_at=?4 WHERE slno=?5]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.generateQueryException(QuerySyntaxException.java:79)
	at org.hibernate.QueryException.wrapWithQueryString(QueryException.java:103)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:219)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:143)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:119)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:80)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:153)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:595)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:704)
	... 114 common frames omitted
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: gen_std_charges is not mapped
	at org.hibernate.hql.internal.ast.util.SessionFactoryHelper.requireClassPersister(SessionFactoryHelper.java:169)
	at org.hibernate.hql.internal.ast.tree.FromElementFactory.addFromElement(FromElementFactory.java:91)
	at org.hibernate.hql.internal.ast.tree.FromClause.addFromElement(FromClause.java:79)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.createFromElement(HqlSqlWalker.java:331)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElement(HqlSqlBaseWalker.java:3695)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElementList(HqlSqlBaseWalker.java:3584)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromClause(HqlSqlBaseWalker.java:720)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.updateStatement(HqlSqlBaseWalker.java:377)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:269)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:271)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:191)
	... 120 common frames omitted
2020-12-08 12:37:29 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 8056 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 12:37:29 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 12:37:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 12:37:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 192ms. Found 26 repository interfaces.
2020-12-08 12:37:31 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 12:37:31 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 12:37:31 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:37:31 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:37:31 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:37:31 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:37:31 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:37:31 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:37:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e821232] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:37:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b72fda6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:37:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:37:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@31ee96f4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:37:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$dc047d1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:37:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:37:31 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 12:37:31 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 12:37:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 12:37:32 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 12:37:32 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 12:37:32 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 12:37:33 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 12:37:33 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3912 ms
2020-12-08 12:37:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 12:37:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@261db982
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@261db982
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@261db982
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@bbd4791
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@76a14c8d
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@257ef9ed
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@575b5f7d
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@575b5f7d
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@575b5f7d
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1b2df3aa
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1b2df3aa
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b2df3aa
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@625a9c5d
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@625a9c5d
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@625a9c5d
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@127705e4
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@127705e4
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@127705e4
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c011174
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c011174
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7c011174
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@561953e3
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@561953e3
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@561953e3
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@64920dc2
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@64920dc2
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@64920dc2
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b38b1f
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b38b1f
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@28757abd
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@28757abd
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@30839e44
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@30839e44
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@45aca496
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d90eeb3
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7978e022
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7978e022
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@326e0b8e
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@326e0b8e
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@15f35bc3
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@15f35bc3
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@53ed80d3
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@53ed80d3
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@20a7953c
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@20a7953c
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4e83a98
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4e83a98
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ee27d73
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ee27d73
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@53a84ff4
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@53a84ff4
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@254449bb
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@254449bb
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@70c69586
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@70c69586
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3e0fbeb5
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e0fbeb5
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4694f434
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4694f434
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4694f434
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5a49af50
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@221a2068
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@221a2068
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@221a2068
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4976085
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1192b58e
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1192b58e
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3134153d
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3134153d
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6e3eb0cd
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6e3eb0cd
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@421def93
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@421def93
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@235d659c
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@235d659c
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f5ce0bb
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@311ff287
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@311ff287
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@311ff287
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@16a5eb6d
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@16a5eb6d
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@16a5eb6d
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5e8507f1
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@49fa1d74
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7cfb4736
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7cfb4736
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7cfb4736
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31b7d869
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31b7d869
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31b7d869
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6d2a2560
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@24eeac69
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@346f41a9
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@346f41a9
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4aa11206
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2c413ffc
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c413ffc
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@286090c
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@286090c
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58606c91
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7be2f29a
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3664f108
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@124d02b2
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@124d02b2
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1cfc2538
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@66deec87
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d342959
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2ecf5915
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@42cc183e
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3e4e8fdf
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6a1d6ef2
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7fedb795
2020-12-08 12:37:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7fedb795
2020-12-08 12:37:34 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@235d659c
2020-12-08 12:37:34 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c53f292] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46fb0c33]
2020-12-08 12:37:35 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c53f292] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6cc64028]
2020-12-08 12:37:35 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 12:37:36 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 12:37:36 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 12:37:36 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 12:37:36 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6cc64028] for TypeConfiguration
2020-12-08 12:37:36 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 12:37:38 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b0835cb, org.springframework.security.web.context.SecurityContextPersistenceFilter@30cb223b, org.springframework.security.web.header.HeaderWriterFilter@4c9d833, org.springframework.web.filter.CorsFilter@68229a6, org.springframework.security.web.authentication.logout.LogoutFilter@3151277f, com.app.config.JwtRequestFilter@4db16677, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50e24ea4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@333a2df2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62615be, org.springframework.security.web.session.SessionManagementFilter@76105ac0, org.springframework.security.web.access.ExceptionTranslationFilter@5ccc971e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@8bde368]
2020-12-08 12:37:38 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 12:37:38 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 12:37:39 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 12:37:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 12:37:39 [main] INFO  com.app.Application - Started Application in 10.523 seconds (JVM running for 11.276)
2020-12-08 12:37:57 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 12:37:57 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 12:37:57 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-12-08 12:37:57 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:37:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [serice charges]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [12:05:46]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [satish]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 12:37:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 12:37:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update gen_std_charges set charges=?, modified_by=?,modified_on=?,modified_at=? WHERE slno=?
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [12:37:57]
2020-12-08 12:37:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [1]
2020-12-08 12:38:03 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:38:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 12:38:03 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-08 12:38:51 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 1124 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 12:38:51 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 12:38:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 12:38:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 202ms. Found 26 repository interfaces.
2020-12-08 12:38:53 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 12:38:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 12:38:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:38:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:38:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:38:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:38:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:38:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:38:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4491119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:38:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9cf6d953] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:38:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:38:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@56303475' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:38:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c1cb7c05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:38:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:38:54 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 12:38:54 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 12:38:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 12:38:55 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 12:38:55 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 12:38:55 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 12:38:55 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 12:38:55 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3677 ms
2020-12-08 12:38:55 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 12:38:55 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6bccd036
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6bccd036
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6bccd036
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@cb39552
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b63e6ad
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@52bf7bf6
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@40a72ecd
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@40a72ecd
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@40a72ecd
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@257ef9ed
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@257ef9ed
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@257ef9ed
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@575b5f7d
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@575b5f7d
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@575b5f7d
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1b2df3aa
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1b2df3aa
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b2df3aa
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@625a9c5d
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@625a9c5d
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@625a9c5d
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@127705e4
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@127705e4
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@127705e4
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7c011174
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7c011174
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7c011174
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@561953e3
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@561953e3
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@64920dc2
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@64920dc2
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2b38b1f
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b38b1f
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2e766822
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@21a02556
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5f174dd2
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5f174dd2
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3d90eeb3
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3d90eeb3
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7978e022
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7978e022
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@326e0b8e
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@326e0b8e
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@15f35bc3
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@15f35bc3
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@53ed80d3
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@53ed80d3
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@20a7953c
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@20a7953c
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e83a98
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e83a98
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e60b459
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e60b459
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2489e84a
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2489e84a
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@29ebbdf4
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29ebbdf4
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@70c69586
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@70c69586
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@70c69586
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19e0dffe
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@b0a1231
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@b0a1231
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@b0a1231
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@56928e17
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@60dd0587
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60dd0587
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4976085
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4976085
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1192b58e
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1192b58e
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3134153d
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3134153d
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e3eb0cd
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e3eb0cd
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3468ee6e
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@58d6e55a
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@58d6e55a
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@58d6e55a
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f5ce0bb
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f5ce0bb
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f5ce0bb
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@311ff287
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@109f8c7e
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1a8b81e8
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a8b81e8
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1a8b81e8
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@49fa1d74
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@49fa1d74
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@49fa1d74
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6bc24e72
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a097d77
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6d2a2560
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6d2a2560
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@24eeac69
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@346f41a9
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@346f41a9
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6d8796c1
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d8796c1
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c413ffc
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b8ec001
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@58606c91
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1e0fdb2f
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1e0fdb2f
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@47768e74
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2740e316
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5b5a4aed
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c991465
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5fef2aac
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7f973a14
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@76130a29
2020-12-08 12:38:56 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@124d02b2
2020-12-08 12:38:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4a1a256d
2020-12-08 12:38:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4a1a256d
2020-12-08 12:38:57 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6e3eb0cd
2020-12-08 12:38:57 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7fedb795] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@10850d17]
2020-12-08 12:38:57 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7fedb795] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@8c0a23f]
2020-12-08 12:38:58 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 12:38:59 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 12:38:59 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 12:38:59 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 12:38:59 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@8c0a23f] for TypeConfiguration
2020-12-08 12:38:59 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 12:39:00 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d7caf9c, org.springframework.security.web.context.SecurityContextPersistenceFilter@28269c65, org.springframework.security.web.header.HeaderWriterFilter@391e5ffa, org.springframework.web.filter.CorsFilter@4e26040f, org.springframework.security.web.authentication.logout.LogoutFilter@5ffdd510, com.app.config.JwtRequestFilter@72288480, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18b58c77, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@76105ac0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1782896, org.springframework.security.web.session.SessionManagementFilter@7836c79, org.springframework.security.web.access.ExceptionTranslationFilter@3f2ef402, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3be369fc]
2020-12-08 12:39:01 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 12:39:01 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 12:39:01 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 12:39:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 12:39:01 [main] INFO  com.app.Application - Started Application in 10.498 seconds (JVM running for 11.242)
2020-12-08 12:39:04 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 12:39:04 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 12:39:04 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-12-08 12:39:04 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:39:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 12:39:04 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-08 12:39:05 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:39:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 12:39:05 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-08 12:39:10 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:39:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [serice charges]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [12:05:46]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [satish]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [12:37:57]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [satish]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [2020-12-08]
2020-12-08 12:39:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 12:39:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - update gen_std_charges set charges=?, modified_by=?,modified_on=?,modified_at=? WHERE slno=?
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [serice charges]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [12:39:10]
2020-12-08 12:39:10 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [1]
2020-12-08 12:39:14 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 12:39:14 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-08 12:47:07 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9084 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 12:47:07 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 12:47:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 12:47:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 193ms. Found 26 repository interfaces.
2020-12-08 12:47:09 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 12:47:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 12:47:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:47:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:47:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:47:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:47:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 12:47:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 12:47:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d671abf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:47:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a614e2f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:47:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:47:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@63ec445c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:47:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$cae985ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:47:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 12:47:10 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 12:47:10 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 12:47:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 12:47:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 12:47:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 12:47:11 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 12:47:11 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 12:47:11 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3613 ms
2020-12-08 12:47:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 12:47:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5dc0ff7d
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5dc0ff7d
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5dc0ff7d
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@493ac8d3
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b38b1f
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e766822
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@138aa3cc
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@138aa3cc
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@138aa3cc
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@45aca496
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@45aca496
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@45aca496
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7fb53256
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7fb53256
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fb53256
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5afbd567
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5afbd567
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5afbd567
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@41184371
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@41184371
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@41184371
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@608b1fd2
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@608b1fd2
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@608b1fd2
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7c51782d
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7c51782d
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7c51782d
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@411a5965
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@411a5965
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71b639d0
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71b639d0
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@542f6803
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@542f6803
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@53a84ff4
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@56f730b2
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3e906375
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3e906375
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2489e84a
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2489e84a
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@29ebbdf4
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@29ebbdf4
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@70c69586
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@70c69586
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e0fbeb5
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e0fbeb5
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4694f434
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4694f434
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@793d163b
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@793d163b
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b7eac14
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b7eac14
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6e3eb0cd
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6e3eb0cd
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2b2954e1
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b2954e1
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2da16263
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2da16263
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ebffb44
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ebffb44
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ebffb44
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31db34da
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1220ef43
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1220ef43
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1220ef43
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e8507f1
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@21eee94f
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@21eee94f
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@53c1179a
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53c1179a
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a47a1e8
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a47a1e8
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@18539cb1
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@18539cb1
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@22d9bc14
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@22d9bc14
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25f723b0
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6d8796c1
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6d8796c1
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6d8796c1
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6cd98a05
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6cd98a05
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6cd98a05
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@286090c
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58606c91
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2c2a027c
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2c2a027c
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2c2a027c
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3664f108
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3664f108
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3664f108
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2525a5b8
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3c380bd8
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7f973a14
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7f973a14
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3451f01d
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@42cc183e
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42cc183e
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@79aee22a
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@79aee22a
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6bee793f
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@28369db0
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@39c96e48
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1a565afb
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a565afb
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43d3aba5
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6bfaa0a6
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@76e9f00b
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@314b9e4b
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6f1b8544
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@51dae791
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@688a2c09
2020-12-08 12:47:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5de5e95
2020-12-08 12:47:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@35d60381
2020-12-08 12:47:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@35d60381
2020-12-08 12:47:13 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@22d9bc14
2020-12-08 12:47:13 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@42507640] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4dfe8b37]
2020-12-08 12:47:13 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@42507640] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5c4cc644]
2020-12-08 12:47:14 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 12:47:14 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 12:47:14 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 12:47:14 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 12:47:14 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5c4cc644] for TypeConfiguration
2020-12-08 12:47:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 12:47:16 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@129c322f, org.springframework.security.web.context.SecurityContextPersistenceFilter@44da745f, org.springframework.security.web.header.HeaderWriterFilter@7d483ebe, org.springframework.web.filter.CorsFilter@1bbef3c7, org.springframework.security.web.authentication.logout.LogoutFilter@4cb58e8b, com.app.config.JwtRequestFilter@79424f25, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@574f9e36, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30437e9c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@35995029, org.springframework.security.web.session.SessionManagementFilter@6b630d4b, org.springframework.security.web.access.ExceptionTranslationFilter@afb7b03, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@79631db0]
2020-12-08 12:47:17 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 12:47:17 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 12:47:17 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 12:47:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 12:47:17 [main] INFO  com.app.Application - Started Application in 10.09 seconds (JVM running for 10.797)
2020-12-08 12:47:31 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 12:47:31 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 12:47:31 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2020-12-08 12:47:31 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 12:47:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 12:47:31 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-08 12:47:31 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 12:47:31 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [serice charges]
2020-12-08 12:47:31 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [12:05:46]
2020-12-08 12:47:31 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [satish]
2020-12-08 12:47:31 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 12:47:31 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [12:39:10]
2020-12-08 12:47:31 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [satish]
2020-12-08 12:47:31 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [2020-12-08]
2020-12-08 12:47:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - delete From gen_std_charges WHERE slno=?
2020-12-08 12:47:32 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-08 13:36:55 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:36:55 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:36:55 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:36:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-08 13:36:55 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [dfhbdfj]
2020-12-08 13:36:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 13:36:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 13:36:55 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:36:55]
2020-12-08 13:36:55 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2020-12-08 13:36:55 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 13:36:55 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 13:36:55 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 13:36:55 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 13:36:55 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [dfhbdfj]
2020-12-08 13:36:55 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [fdhbdf]
2020-12-08 13:36:55 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [126]
2020-12-08 13:36:56 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:36:56 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:37:47 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:37:47 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:37:47 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:37:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-08 13:37:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [fdbdf]
2020-12-08 13:37:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 13:37:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 13:37:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:37:47]
2020-12-08 13:37:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2020-12-08 13:37:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 13:37:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 13:37:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 13:37:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 13:37:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [fdbdf]
2020-12-08 13:37:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [fdb]
2020-12-08 13:37:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [127]
2020-12-08 13:40:21 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:40:21 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:40:27 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:40:27 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:40:51 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:40:51 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:40:54 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:40:54 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:41:00 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:41:00 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:41:09 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:41:09 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:42:59 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:42:59 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:43:04 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:43:04 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:19 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:19 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:31 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:31 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:35 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:35 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:42 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:42 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:51 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-08 13:44:51 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [fdhn]
2020-12-08 13:44:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 13:44:51 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 13:44:51 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:44:51]
2020-12-08 13:44:51 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2020-12-08 13:44:51 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 13:44:51 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 13:44:51 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 13:44:51 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 13:44:51 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [fdhn]
2020-12-08 13:44:51 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [gr]
2020-12-08 13:44:51 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [128]
2020-12-08 13:44:51 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:53 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:44:53 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:00 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:00 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:05 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:05 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:09 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:09 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:17 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:18 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:22 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:22 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:27 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-08 13:47:27 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:27 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:47:27 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [thgf]
2020-12-08 13:47:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 13:47:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 13:47:27 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:47:27]
2020-12-08 13:47:27 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2020-12-08 13:47:27 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 13:47:27 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 13:47:27 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 13:47:27 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 13:47:27 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [thgf]
2020-12-08 13:47:27 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [htdh]
2020-12-08 13:47:27 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [129]
2020-12-08 13:48:40 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 7432 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 13:48:40 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 13:48:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 13:48:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 213ms. Found 26 repository interfaces.
2020-12-08 13:48:42 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 13:48:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 13:48:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 13:48:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 13:48:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 13:48:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 13:48:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 13:48:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 13:48:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4d4c97bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 13:48:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e5fa5ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 13:48:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 13:48:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@63ec445c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 13:48:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$acf02a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 13:48:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 13:48:42 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 13:48:42 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 13:48:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 13:48:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 13:48:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 13:48:43 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 13:48:43 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 13:48:43 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3512 ms
2020-12-08 13:48:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 13:48:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@64920dc2
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@64920dc2
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@64920dc2
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@13dbed9e
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d50a7ca
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3003e580
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@10a98392
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@10a98392
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10a98392
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@697173d9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@697173d9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@697173d9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1d6d1d42
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1d6d1d42
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d6d1d42
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6993c8df
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6993c8df
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6993c8df
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@34585ac9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@34585ac9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34585ac9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@56382bc9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@56382bc9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56382bc9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@77bc2e16
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@77bc2e16
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77bc2e16
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fe533ff
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fe533ff
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@18a25bbd
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@18a25bbd
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5583098b
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5583098b
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ce85af2
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47311277
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@40230eb9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@40230eb9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2a39aa2b
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2a39aa2b
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2fd954f
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2fd954f
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6dc1dc69
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6dc1dc69
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3976ebfa
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3976ebfa
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@56928e17
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@56928e17
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@60dd0587
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@60dd0587
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4976085
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4976085
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@463561c5
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@463561c5
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@58d6e55a
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@58d6e55a
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@f5ce0bb
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@f5ce0bb
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@311ff287
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@311ff287
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@311ff287
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@109f8c7e
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1a8b81e8
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a8b81e8
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a8b81e8
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bcaa195
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6bc24e72
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bc24e72
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7650ded6
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7650ded6
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d2a2560
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d2a2560
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@748f93bb
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@748f93bb
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@346f41a9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@346f41a9
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4aa11206
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2e26173
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2e26173
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2e26173
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3b8ec001
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3b8ec001
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3b8ec001
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@31120021
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6a9cd0f8
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@118dcbbd
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@118dcbbd
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@118dcbbd
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77dba4cd
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77dba4cd
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77dba4cd
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3458eca5
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@34b87182
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@76130a29
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@76130a29
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72503b19
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3e4e8fdf
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e4e8fdf
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@36920bd6
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@36920bd6
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@655f69da
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30893e08
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@188598ad
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2fd64b11
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fd64b11
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6bfaa0a6
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76e9f00b
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@314b9e4b
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6f1b8544
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51dae791
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@688a2c09
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5de5e95
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@365cdacf
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@68ab6ab0
2020-12-08 13:48:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@68ab6ab0
2020-12-08 13:48:45 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@346f41a9
2020-12-08 13:48:45 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4dfe8b37] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11dcd42c]
2020-12-08 13:48:46 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4dfe8b37] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@21f7e537]
2020-12-08 13:48:47 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 13:48:48 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 13:48:48 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 13:48:48 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 13:48:48 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@21f7e537] for TypeConfiguration
2020-12-08 13:48:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 13:48:50 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@35995029, org.springframework.security.web.context.SecurityContextPersistenceFilter@574f9e36, org.springframework.security.web.header.HeaderWriterFilter@5d98364c, org.springframework.web.filter.CorsFilter@42474b18, org.springframework.security.web.authentication.logout.LogoutFilter@5308e79d, com.app.config.JwtRequestFilter@5fd4e67f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@60b4d934, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@762f8ff6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@31b91435, org.springframework.security.web.session.SessionManagementFilter@44da745f, org.springframework.security.web.access.ExceptionTranslationFilter@7d483ebe, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1aca6dc3]
2020-12-08 13:48:50 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 13:48:51 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 13:48:51 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 13:48:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 13:48:51 [main] INFO  com.app.Application - Started Application in 11.879 seconds (JVM running for 13.673)
2020-12-08 13:49:06 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 13:49:06 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 13:49:06 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-12-08 13:49:06 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:49:13 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:49:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [09:55:27]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-05]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [mother]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [mom]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:36:55]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [dfhbdfj]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [fdhbdf]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:37:47]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [fdbdf]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [fdb]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [4]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:44:51]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [fdhn]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [gr]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [5]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:47:27]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [thgf]
2020-12-08 13:49:14 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [htdh]
2020-12-08 13:49:29 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:49:29 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:49:41 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:49:41 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:49:41 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:49:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-08 13:49:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [cmghmgh]
2020-12-08 13:49:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 13:49:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 13:49:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:49:41]
2020-12-08 13:49:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2020-12-08 13:49:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 13:49:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 13:49:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 13:49:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 13:49:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [cmghmgh]
2020-12-08 13:49:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [mnghcmcgh]
2020-12-08 13:49:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [130]
2020-12-08 13:49:43 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 13:49:43 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:18:02 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:18:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_
2020-12-08 14:18:50 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 14:18:50 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Late Payment Charges]
2020-12-08 14:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 14:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 14:18:50 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Late Payment Charges]
2020-12-08 14:18:50 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [14:18:50]
2020-12-08 14:18:50 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [Keerthana]
2020-12-08 14:18:50 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 14:18:50 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 14:18:50 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 14:18:50 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-08 14:18:50 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [131]
2020-12-08 14:18:58 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:18:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_
2020-12-08 14:18:58 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 14:18:58 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Late Payment Charges]
2020-12-08 14:18:58 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:18:50]
2020-12-08 14:18:58 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:18:58 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:18:58 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:18:58 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:18:58 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 14:19:28 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:19:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 14:19:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Service Charges]
2020-12-08 14:19:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 14:19:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 14:19:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Service Charges]
2020-12-08 14:19:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [14:19:28]
2020-12-08 14:19:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [Keerthana]
2020-12-08 14:19:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 14:19:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 14:19:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 14:19:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-08 14:19:28 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [132]
2020-12-08 14:19:34 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:19:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Late Payment Charges]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:18:50]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Service Charges]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:19:28]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:19:34 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 14:20:58 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:20:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 14:20:58 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Account Charges]
2020-12-08 14:20:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 14:20:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - insert into gen_std_charges (charges, created_at, created_by, created_on, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 14:20:58 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Account Charges]
2020-12-08 14:20:58 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [14:20:58]
2020-12-08 14:20:58 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [Keerthana]
2020-12-08 14:20:58 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-08]
2020-12-08 14:20:58 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-08 14:20:58 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-08 14:20:58 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-08 14:20:58 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [133]
2020-12-08 14:21:05 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:21:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Late Payment Charges]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:18:50]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Service Charges]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:19:28]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [3]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Account Charges]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:20:58]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:21:05 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 14:21:20 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:21:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 14:21:20 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-08 14:21:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 14:21:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Late Payment Charges]
2020-12-08 14:21:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:18:50]
2020-12-08 14:21:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:21:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:21:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:21:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:21:20 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 14:21:26 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:21:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 14:21:26 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-08 14:21:26 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-08 14:21:26 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Service Charges]
2020-12-08 14:21:26 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:19:28]
2020-12-08 14:21:26 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:21:26 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:21:26 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:21:26 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:21:26 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 14:21:36 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:21:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 14:21:36 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-08 14:21:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [3]
2020-12-08 14:21:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Account Charges]
2020-12-08 14:21:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:20:58]
2020-12-08 14:21:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:21:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:21:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:21:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:21:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 14:22:32 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:22:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [3]
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Account Charges]
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:20:58]
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 14:22:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Monthly Account Charges]
2020-12-08 14:22:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - update gen_std_charges set charges=?, modified_by=?,modified_on=?,modified_at=? WHERE slno=?
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Monthly Account Charges]
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [Keerthana]
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [14:22:32]
2020-12-08 14:22:32 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [3]
2020-12-08 14:22:43 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:22:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 14:22:43 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-08 14:22:43 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [3]
2020-12-08 14:22:43 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Monthly Account Charges]
2020-12-08 14:22:43 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:20:58]
2020-12-08 14:22:43 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:22:43 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:22:43 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [14:22:32]
2020-12-08 14:22:43 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:22:43 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:23:01 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:23:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 14:23:01 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-08 14:23:01 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [3]
2020-12-08 14:23:01 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Monthly Account Charges]
2020-12-08 14:23:01 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:20:58]
2020-12-08 14:23:01 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:23:01 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:23:01 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [14:22:32]
2020-12-08 14:23:01 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:23:01 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:23:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - delete From gen_std_charges WHERE slno=?
2020-12-08 14:23:01 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-08 14:23:13 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:23:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.slno=?
2020-12-08 14:23:13 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-08 14:23:45 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:23:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_ where charges0_.charges=?
2020-12-08 14:23:45 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Service Charges]
2020-12-08 14:23:45 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-08 14:23:45 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Service Charges]
2020-12-08 14:23:45 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:19:28]
2020-12-08 14:23:45 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:23:45 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:23:45 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:23:45 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:23:45 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 14:29:12 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 14:29:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Late Payment Charges]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:18:50]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Service Charges]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:19:28]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 14:29:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 15:29:39 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=21m24s385ms490µs700ns).
2020-12-08 17:41:23 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 17:43:26 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 17:44:25 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9632 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-08 17:44:25 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-08 17:44:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-08 17:44:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 263ms. Found 26 repository interfaces.
2020-12-08 17:44:28 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-08 17:44:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-08 17:44:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 17:44:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-08 17:44:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 17:44:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 17:44:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-08 17:44:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-08 17:44:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8e6bfea8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 17:44:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$2719c6e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 17:44:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 17:44:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7ec58feb' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 17:44:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$4bee6994] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 17:44:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-08 17:44:28 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-08 17:44:28 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-08 17:44:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-08 17:44:29 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-08 17:44:29 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-08 17:44:29 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-08 17:44:29 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-08 17:44:29 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4032 ms
2020-12-08 17:44:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-08 17:44:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@443faa85
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@443faa85
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@443faa85
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5dc0ff7d
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@493ac8d3
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b38b1f
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@28757abd
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@28757abd
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@28757abd
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@30839e44
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@30839e44
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@30839e44
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@ceddaf8
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@ceddaf8
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@ceddaf8
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@27329d2a
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@27329d2a
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27329d2a
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@57545c3f
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@57545c3f
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@57545c3f
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@76a805b7
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@76a805b7
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@76a805b7
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@591a4f8e
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@591a4f8e
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@591a4f8e
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@48e8c32a
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@48e8c32a
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5377414a
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5377414a
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5d5b9ecb
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5d5b9ecb
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@542f6803
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@53a84ff4
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7930ffa9
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7930ffa9
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5b7aa898
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5b7aa898
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@62b93086
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@62b93086
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5731d3a
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5731d3a
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7e9f2c32
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7e9f2c32
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2676dc05
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2676dc05
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@dd2856e
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@dd2856e
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@77f905e3
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@77f905e3
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5f5effb0
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5f5effb0
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2f4b98f6
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f4b98f6
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@751ae8a4
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@751ae8a4
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@47e51549
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@47e51549
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@47e51549
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5ebffb44
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5edacf20
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5edacf20
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5edacf20
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1220ef43
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@d08edc5
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d08edc5
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@724aefc3
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@724aefc3
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5034f5dd
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5034f5dd
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@62d1dc3c
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@62d1dc3c
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f2d31af
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f2d31af
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22d9bc14
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@40d60f2
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@40d60f2
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@40d60f2
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@27be17c8
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@27be17c8
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@27be17c8
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e95b653
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@286090c
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4baed682
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4baed682
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4baed682
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7d979d34
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7d979d34
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7d979d34
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3664f108
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2525a5b8
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5b5a4aed
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5b5a4aed
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7f973a14
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5d342959
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5d342959
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@205df5dc
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@205df5dc
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@79aee22a
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6bee793f
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@590f0c50
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@594d9f07
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@594d9f07
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a565afb
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2fd64b11
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@949c598
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@43d3aba5
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6bfaa0a6
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76e9f00b
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@314b9e4b
2020-12-08 17:44:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6f1b8544
2020-12-08 17:44:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2e5e6fc4
2020-12-08 17:44:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2e5e6fc4
2020-12-08 17:44:32 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7f2d31af
2020-12-08 17:44:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bc69ce9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@abad89c]
2020-12-08 17:44:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bc69ce9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4fb64e14]
2020-12-08 17:44:33 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-08 17:44:34 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-08 17:44:34 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-08 17:44:34 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-08 17:44:34 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4fb64e14] for TypeConfiguration
2020-12-08 17:44:34 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-08 17:44:37 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42a97053, org.springframework.security.web.context.SecurityContextPersistenceFilter@5ced0537, org.springframework.security.web.header.HeaderWriterFilter@3b1137b0, org.springframework.web.filter.CorsFilter@bc4a9b0, org.springframework.security.web.authentication.logout.LogoutFilter@5e34a84b, com.app.config.JwtRequestFilter@6942ee48, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b630d4b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a3e633a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@33089426, org.springframework.security.web.session.SessionManagementFilter@1fd35a92, org.springframework.security.web.access.ExceptionTranslationFilter@78ea700f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5895c065]
2020-12-08 17:44:37 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-08 17:44:38 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-08 17:44:38 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-08 17:44:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-08 17:44:38 [main] INFO  com.app.Application - Started Application in 13.572 seconds (JVM running for 14.772)
2020-12-08 17:44:39 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-08 17:44:39 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-08 17:44:39 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-12-08 17:44:39 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 17:44:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 17:47:49 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 17:48:14 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 17:50:11 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 17:50:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-08 17:50:11 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Brother]
2020-12-08 17:50:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 17:50:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 17:50:11 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [17:50:11]
2020-12-08 17:50:11 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [User]
2020-12-08 17:50:11 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 17:50:11 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 17:50:11 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 17:50:11 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 17:50:11 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Brother]
2020-12-08 17:50:11 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [BRO]
2020-12-08 17:50:11 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [134]
2020-12-08 17:57:35 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 17:58:04 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 17:58:16 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 17:58:26 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:01:32 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:01:51 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:06:11 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:06:57 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:07:41 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:09:41 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:09:49 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:11:59 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:13:06 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:13:28 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:13:41 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:13:48 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:14:29 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:15:15 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:15:21 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:15:25 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:15:54 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:16:29 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:16:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:16:29 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:16:29 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:16:29 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:16:29 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:16:29 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:16:29 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:16:29 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:16:29 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:16:29 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:17:20 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:28:16 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:28:37 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:29:32 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:29:41 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:29:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:29:41 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:29:41 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:29:41 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:29:41 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:29:41 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:29:41 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:29:41 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:29:41 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:29:41 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:30:27 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:30:38 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:30:56 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:31:01 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:31:36 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:32:28 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select charges0_.slno as slno1_3_, charges0_.charges as charges2_3_, charges0_.created_at as created_3_3_, charges0_.created_by as created_4_3_, charges0_.created_on as created_5_3_, charges0_.modified_at as modified6_3_, charges0_.modified_by as modified7_3_, charges0_.modified_on as modified8_3_ from gen_std_charges charges0_
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [1]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Late Payment Charges]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:18:50]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([charges2_3_] : [VARCHAR]) - [Service Charges]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [TIME]) - [14:19:28]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [VARCHAR]) - [Keerthana]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_3_] : [DATE]) - [2020-12-08]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [TIME]) - [null]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [VARCHAR]) - [null]
2020-12-08 18:32:28 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_3_] : [DATE]) - [null]
2020-12-08 18:32:35 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:32:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:32:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:32:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:32:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:32:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:32:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:32:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:32:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:32:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:32:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:35:34 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:36:06 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:36:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:36:06 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:36:06 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:36:06 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:36:06 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:36:06 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:36:06 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:36:06 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:36:06 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:36:06 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:38:17 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:38:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:38:17 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:38:17 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:38:17 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:38:17 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:38:17 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:38:17 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:38:17 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:38:17 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:38:17 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:38:38 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:38:48 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:38:50 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:38:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:38:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:38:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:38:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:38:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:38:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:38:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:38:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:38:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:38:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:40:17 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:40:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:40:17 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:40:17 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:40:17 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:40:17 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:40:17 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:40:17 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:40:17 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:40:17 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:40:17 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:40:46 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:45:04 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:45:29 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:45:35 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:45:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-08 18:45:35 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Sister]
2020-12-08 18:45:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 18:45:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 18:45:35 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [18:45:35]
2020-12-08 18:45:35 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [User]
2020-12-08 18:45:35 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 18:45:35 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 18:45:35 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 18:45:35 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 18:45:35 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Sister]
2020-12-08 18:45:35 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [SIS]
2020-12-08 18:45:35 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [135]
2020-12-08 18:47:40 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:47:49 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:47:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:47:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:50:52 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:50:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:50:52 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:50:57 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:50:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:50:57 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:51:26 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:51:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:51:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 18:51:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 18:51:26 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [18:51:26]
2020-12-08 18:51:26 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2020-12-08 18:51:26 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 18:51:26 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 18:51:26 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 18:51:26 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 18:51:26 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [null]
2020-12-08 18:51:26 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [null]
2020-12-08 18:51:26 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [136]
2020-12-08 18:51:32 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:51:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:51:32 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:11 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:52:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:52:11 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:52:11 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:52:11 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:11 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:11 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:11 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:11 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:11 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:11 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:18 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:52:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:52:18 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:52:18 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:52:18 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:18 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:18 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:18 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:18 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:18 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:18 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:26 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:52:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:52:26 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:52:26 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:52:26 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:26 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:26 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:26 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:26 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:26 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:26 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:31 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:52:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:41 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:52:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:52:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:52:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:52:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:42 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:52:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:42 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:57 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:52:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:52:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:52:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:52:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:58 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:52:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:52:58 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:02 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:53:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:53:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:53:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:53:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:10 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:53:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:21 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:53:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:53:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:53:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:53:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:27 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:53:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:27 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:41 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:53:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:41 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:57 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:53:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:53:57 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:02 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:54:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:54:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:54:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:54:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:54:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:54:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:54:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:37 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:54:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:54:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:54:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:54:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:54:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:54:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:54:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:40 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:54:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:58 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:54:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:54:58 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:54:58 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:54:58 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:58 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:54:58 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:54:58 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:58 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:54:58 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:54:58 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:01 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:55:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:37 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:55:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:55:37 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:55:37 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:55:37 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:37 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:55:37 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:55:37 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:37 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:55:37 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:37 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:41 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:55:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:55:41 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:56:11 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:56:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:56:11 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:56:11 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:56:11 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:56:11 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:56:11 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:56:11 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:56:11 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:56:11 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:56:11 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:58:55 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:58:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 18:58:55 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:58:55 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:58:55 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:58:55 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:58:55 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:58:55 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:58:55 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:58:55 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:58:55 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 18:59:10 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 18:59:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 18:59:10 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:06 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:00:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:00:06 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:00:06 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:00:06 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:06 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:00:06 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:00:06 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:06 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:00:06 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:06 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:29 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:00:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:57 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:00:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:00:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:00:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:00:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:00:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:00:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:00:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:00:57 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:01:23 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:01:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:01:23 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:01:23 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:01:23 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:01:23 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:01:23 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:01:23 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:01:23 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:01:23 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:01:23 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:01:25 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:01:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:01:25 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:02:54 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:02:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:02:54 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:03:08 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:03:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:03:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:03:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:03:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:03:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:03:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:03:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:03:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:03:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:03:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:03:09 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:03:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:03:09 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:04:53 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:05:13 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:09:34 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:09:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:09:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:09:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:09:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:09:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:09:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:09:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:09:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:09:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:09:34 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:09:47 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:09:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:09:47 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:10:04 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:10:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:10:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:11:23 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:11:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:11:23 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:11:23 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:11:23 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:11:23 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:11:23 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:11:23 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:11:23 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:11:23 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:11:23 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:12:12 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:12:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:12:12 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:12:12 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:12:12 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:12:12 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:12:12 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:12:12 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:12:12 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:12:12 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:12:12 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:12:44 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:12:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:12:44 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:12:44 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:12:44 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:12:44 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:12:44 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:12:44 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:12:44 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:12:44 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:12:44 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:20 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:13:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:20 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:51 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:13:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:13:51 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:13:51 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:13:51 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:51 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:13:51 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:13:51 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:51 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:13:51 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:51 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:56 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:13:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:13:56 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:15:00 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:15:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:15:01 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:15:06 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:15:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:15:06 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:15:06 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:15:06 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:15:06 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:15:06 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:15:06 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:15:07 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:15:07 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:15:07 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:16:34 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:16:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:16:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:16:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:16:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:16:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:16:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:16:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:16:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:16:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:16:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:18:21 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:18:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:18:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:18:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:18:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:18:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:18:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:18:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:18:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:18:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:18:21 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:18:49 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:18:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:18:49 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:20:00 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:20:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:20:00 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:20:00 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:20:00 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:20:00 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:20:00 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:20:00 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:20:00 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:20:00 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:20:00 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:22:24 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m23s88ms952µs500ns).
2020-12-08 19:26:29 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:26:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:26:29 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:26:29 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:26:29 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:26:29 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:26:29 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:26:29 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:26:29 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:26:29 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:26:29 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:26:35 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:26:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:26:35 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:27:22 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:27:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship is null
2020-12-08 19:27:22 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:27:22 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:27:22 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:27:22 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:27:22 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:27:22 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:27:22 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:27:22 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:27:22 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:27:54 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:27:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-08 19:27:54 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [demo]
2020-12-08 19:27:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 19:27:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 19:27:54 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [19:27:54]
2020-12-08 19:27:54 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [User]
2020-12-08 19:27:54 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 19:27:54 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 19:27:54 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 19:27:54 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 19:27:54 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [demo]
2020-12-08 19:27:54 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [DEMO]
2020-12-08 19:27:54 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [137]
2020-12-08 19:28:23 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:28:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-08 19:28:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [demo]
2020-12-08 19:28:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [4]
2020-12-08 19:28:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [19:27:54]
2020-12-08 19:28:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:28:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:28:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:28:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:28:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:28:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [demo]
2020-12-08 19:28:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [DEMO]
2020-12-08 19:28:32 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:28:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-08 19:28:32 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [fdasg]
2020-12-08 19:28:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 19:28:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 19:28:32 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [19:28:32]
2020-12-08 19:28:32 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2020-12-08 19:28:32 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 19:28:32 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 19:28:32 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 19:28:32 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 19:28:32 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [fdasg]
2020-12-08 19:28:32 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [gadf]
2020-12-08 19:28:32 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [138]
2020-12-08 19:28:32 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:28:32 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:29:35 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:29:35 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:29:38 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:29:38 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:29:41 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:29:41 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:29:54 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:29:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-08 19:29:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [dsavdsv]
2020-12-08 19:29:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 19:29:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 19:29:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [19:29:54]
2020-12-08 19:29:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2020-12-08 19:29:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 19:29:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 19:29:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 19:29:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 19:29:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [dsavdsv]
2020-12-08 19:29:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [graeg]
2020-12-08 19:29:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [139]
2020-12-08 19:29:54 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:29:54 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:30:32 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:30:32 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:30:44 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:30:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-12-08 19:30:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Sdbfsb]
2020-12-08 19:30:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-08 19:30:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-08 19:30:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [19:30:44]
2020-12-08 19:30:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2020-12-08 19:30:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-08]
2020-12-08 19:30:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-08 19:30:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-08 19:30:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-08 19:30:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Sdbfsb]
2020-12-08 19:30:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [GREH]
2020-12-08 19:30:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [140]
2020-12-08 19:30:44 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:30:44 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:31:40 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:31:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [4]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [19:27:54]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [demo]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [DEMO]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [5]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [19:28:32]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [fdasg]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [gadf]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [6]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [19:29:54]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [dsavdsv]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [graeg]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [7]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [19:30:44]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sdbfsb]
2020-12-08 19:31:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [GREH]
2020-12-08 19:32:03 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:32:30 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-08 19:32:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [17:50:11]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Brother]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [BRO]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:45:35]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sister]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [SIS]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:51:26]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [4]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [19:27:54]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [User]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [demo]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [DEMO]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [5]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [19:28:32]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [fdasg]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [gadf]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [6]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [19:29:54]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [dsavdsv]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [graeg]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [7]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [19:30:44]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-12-08]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [Sdbfsb]
2020-12-08 19:32:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [GREH]
