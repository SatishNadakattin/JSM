2020-12-03 09:50:06 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=14h58m33s957ms348Âµs500ns).
2020-12-03 10:08:53 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 14948 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 10:08:53 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 10:08:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 10:08:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 350ms. Found 21 repository interfaces.
2020-12-03 10:08:55 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 10:08:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 10:08:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 10:08:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 10:08:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 10:08:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 10:08:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 10:08:55 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 10:08:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d212c5f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:08:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6ac08e2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:08:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:08:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@51ec2df1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:08:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8f9530e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:08:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:08:56 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 10:08:56 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 10:08:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 10:08:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 10:08:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 10:08:57 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 10:08:57 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 10:08:57 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4102 ms
2020-12-03 10:08:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 10:08:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3bed3315
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3bed3315
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3bed3315
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ed4a7e4
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3bc4ef12
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b0dc227
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2a334bac
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2a334bac
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a334bac
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3c854752
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3c854752
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c854752
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@210d2a6c
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@210d2a6c
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@210d2a6c
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@77c10a5f
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@77c10a5f
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77c10a5f
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@355c94be
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@355c94be
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@355c94be
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1dd74143
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1dd74143
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1dd74143
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66f28a1f
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66f28a1f
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66f28a1f
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@df921b1
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@df921b1
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@eb6ec6
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@eb6ec6
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3f018494
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3f018494
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51a18b21
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7523a3dc
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6bccd036
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6bccd036
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2a53f215
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2a53f215
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@261db982
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@261db982
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@73971965
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@73971965
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@59c70ceb
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@59c70ceb
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@59bbb974
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@59bbb974
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@44be69aa
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@44be69aa
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5d1e0fbb
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5d1e0fbb
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ee47d9e
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ee47d9e
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@67531e3a
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67531e3a
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3003e580
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3003e580
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@10a98392
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10a98392
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10a98392
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1945113f
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1db87583
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1db87583
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1db87583
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@27329d2a
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@57545c3f
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@57545c3f
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@76a805b7
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@76a805b7
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@591a4f8e
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@591a4f8e
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@48e8c32a
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48e8c32a
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5377414a
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5377414a
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71b639d0
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@542f6803
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@542f6803
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@542f6803
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@316acbb5
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@316acbb5
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@316acbb5
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@717d7587
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5b7aa898
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@62b93086
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@62b93086
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@62b93086
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5731d3a
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5731d3a
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5731d3a
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@70c69586
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@19e0dffe
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4694f434
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4694f434
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5a49af50
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3b7eac14
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3b7eac14
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4f8d86e4
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f8d86e4
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12ad1b2a
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5f5effb0
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2f4b98f6
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7377781e
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7377781e
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5edacf20
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16a5eb6d
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e307087
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1220ef43
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a8b81e8
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@234cff57
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e8507f1
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4bcaa195
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@56b8aaf1
2020-12-03 10:08:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@56b8aaf1
2020-12-03 10:08:59 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5377414a
2020-12-03 10:08:59 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c952a33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70029d2d]
2020-12-03 10:09:00 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c952a33] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@679d0be8]
2020-12-03 10:09:01 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 10:09:02 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 10:09:02 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 10:09:02 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 10:09:02 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@679d0be8] for TypeConfiguration
2020-12-03 10:09:02 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 10:09:04 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@44618fe6, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f921e32, org.springframework.security.web.header.HeaderWriterFilter@47d81427, org.springframework.web.filter.CorsFilter@2b15ba1a, org.springframework.security.web.authentication.logout.LogoutFilter@237cd264, com.app.config.JwtRequestFilter@34fc315d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43df1377, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d8522ff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@796fe2b5, org.springframework.security.web.session.SessionManagementFilter@67c2b55d, org.springframework.security.web.access.ExceptionTranslationFilter@3b64f131, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6109d880]
2020-12-03 10:09:04 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 10:09:04 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 10:09:04 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 10:09:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 10:09:05 [main] INFO  com.app.Application - Started Application in 12.408 seconds (JVM running for 13.539)
2020-12-03 10:11:14 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 10:11:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 10:11:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-12-03 10:11:14 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 10:11:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [mysore1]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [HSR-20203]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [pooja11]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:21:38]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [969362587411]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [HSR3]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [5236419871]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [587201]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-03 10:11:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select state0_.slno as slno1_19_0_, state0_.created_by as created_2_19_0_, state0_.modified_at as modified3_19_0_, state0_.modified_by as modified4_19_0_, state0_.modified_on as modified5_19_0_, state0_.country_slno as country_9_19_0_, state0_.created_at as created_6_19_0_, state0_.created_on as created_7_19_0_, state0_.name as name8_19_0_, country1_.slno as slno1_3_1_, country1_.created_at as created_2_3_1_, country1_.created_by as created_3_3_1_, country1_.created_on as created_4_3_1_, country1_.modified_at as modified5_3_1_, country1_.modified_by as modified6_3_1_, country1_.modified_on as modified7_3_1_, country1_.name as name8_3_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_1_] : [BIGINT]) - [1]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_0_] : [VARCHAR]) - [pooja]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_0_] : [TIME]) - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_0_] : [VARCHAR]) - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_0_] : [DATE]) - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_0_] : [BIGINT]) - [1]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_0_] : [TIME]) - [17:19:37]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_0_] : [DATE]) - [2020-12-02]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_0_] : [VARCHAR]) - [Goa]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_1_] : [TIME]) - [19:09:03]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_1_] : [VARCHAR]) - [pooja]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_1_] : [DATE]) - [2020-11-28]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_1_] : [TIME]) - [19:12:27]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_1_] : [VARCHAR]) - [admin]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_1_] : [DATE]) - [2020-11-28]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_1_] : [VARCHAR]) - [India]
2020-12-03 10:11:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_, sbtype0_.created_at as created_2_15_, sbtype0_.created_by as created_3_15_, sbtype0_.created_on as created_4_15_, sbtype0_.modified_at as modified5_15_, sbtype0_.modified_by as modified6_15_, sbtype0_.modified_on as modified7_15_, sbtype0_.name as name8_15_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_15_] : [BIGINT]) - [1]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_] : [TIME]) - [11:31:21]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_] : [VARCHAR]) - [sat]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_] : [DATE]) - [2020-12-02]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_] : [TIME]) - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_] : [VARCHAR]) - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_] : [DATE]) - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 10:11:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbaccounts0_.slno as slno1_14_, sbaccounts0_.branch_slno as branch_17_14_, sbaccounts0_.created_at as created_2_14_, sbaccounts0_.created_by as created_3_14_, sbaccounts0_.created_on as created_4_14_, sbaccounts0_.modified_at as modified5_14_, sbaccounts0_.modified_by as modified6_14_, sbaccounts0_.modified_on as modified7_14_, sbaccounts0_.penalty as penalty8_14_, sbaccounts0_.sb_max_balance as sb_max_b9_14_, sbaccounts0_.sb_min_bal_with_cheq_book_for_staff as sb_min_10_14_, sbaccounts0_.sb_min_bal_without_cheq_book_for_staff as sb_min_11_14_, sbaccounts0_.sb_min_balance as sb_min_12_14_, sbaccounts0_.sb_min_period as sb_min_13_14_, sbaccounts0_.sb_roi as sb_roi14_14_, sbaccounts0_.sb_roi_for_staff as sb_roi_15_14_, sbaccounts0_.sb_type_slno as sb_type18_14_, sbaccounts0_.service_charge as service16_14_ from gen_std_sb_accounts_parameters sbaccounts0_ where sbaccounts0_.branch_slno=? and sbaccounts0_.sb_type_slno=?
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 10:11:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-03 10:11:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into gen_std_sb_accounts_parameters (branch_slno, created_at, created_by, created_on, modified_at, modified_by, modified_on, penalty, sb_max_balance, sb_min_bal_with_cheq_book_for_staff, sb_min_bal_without_cheq_book_for_staff, sb_min_balance, sb_min_period, sb_roi, sb_roi_for_staff, sb_type_slno, service_charge, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [10:11:15]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [satish]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-03]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [null]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [86]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [896]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [NUMERIC] - [12345678910111111]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [NUMERIC] - [158]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [NUMERIC] - [12.0]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [NUMERIC] - [89532]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [16] as [BIGINT] - [1]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [17] as [NUMERIC] - [89]
2020-12-03 10:11:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [18] as [BIGINT] - [53]
2020-12-03 10:37:23 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 2696 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 10:37:23 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 10:37:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 10:37:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 205ms. Found 21 repository interfaces.
2020-12-03 10:37:26 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 10:37:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 10:37:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 10:37:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 10:37:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 10:37:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 10:37:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 10:37:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 10:37:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$851ba68a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:37:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1dc96ec4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:37:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:37:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7fab4be7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:37:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$429e1176] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:37:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:37:26 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 10:37:26 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 10:37:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 10:37:27 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 10:37:27 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 10:37:27 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 10:37:28 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 10:37:28 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4222 ms
2020-12-03 10:37:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 10:37:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1c7350b0
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1c7350b0
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c7350b0
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@50448409
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37ad042b
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@75e09567
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3e7b65d7
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3e7b65d7
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e7b65d7
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6949e948
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6949e948
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6949e948
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2e3572e8
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2e3572e8
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2e3572e8
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@633fd91
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@633fd91
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@633fd91
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@44d64d4e
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@44d64d4e
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@44d64d4e
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@60d6fdd4
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@60d6fdd4
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@60d6fdd4
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@619f2afc
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@619f2afc
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@619f2afc
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d32e714
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d32e714
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2935fd2c
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2935fd2c
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@62b790a5
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@62b790a5
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2806d6da
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75e27856
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1f3b992
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1f3b992
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@52bf7bf6
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@52bf7bf6
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@40a72ecd
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40a72ecd
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@257ef9ed
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@257ef9ed
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@575b5f7d
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@575b5f7d
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b2df3aa
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b2df3aa
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@625a9c5d
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@625a9c5d
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@127705e4
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@127705e4
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@59a79443
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@59a79443
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2e766822
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2e766822
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@138aa3cc
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@138aa3cc
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@45aca496
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@45aca496
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@45aca496
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3d90eeb3
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7978e022
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7978e022
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7978e022
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6993c8df
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@34585ac9
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@34585ac9
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@56382bc9
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@56382bc9
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@77bc2e16
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@77bc2e16
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4fe533ff
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4fe533ff
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18a25bbd
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18a25bbd
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e5aafc6
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7ce85af2
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7ce85af2
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7ce85af2
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e60b459
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e60b459
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e60b459
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@41b13f3d
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2a39aa2b
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2fd954f
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2fd954f
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2fd954f
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6dc1dc69
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6dc1dc69
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6dc1dc69
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5d4e13e1
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2676dc05
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3b1dc579
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b1dc579
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77f905e3
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@31142d58
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31142d58
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3134153d
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3134153d
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25d0cb3a
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@463561c5
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@58d6e55a
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@16a5eb6d
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@16a5eb6d
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a8b81e8
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@234cff57
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e8507f1
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4bcaa195
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d08edc5
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49fa1d74
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f362135
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@21eee94f
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@721d8ab5
2020-12-03 10:37:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@721d8ab5
2020-12-03 10:37:29 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@18a25bbd
2020-12-03 10:37:29 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@654e6a90] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@14168e1]
2020-12-03 10:37:30 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@654e6a90] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@8fcc534]
2020-12-03 10:37:31 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 10:37:31 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 10:37:31 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 10:37:31 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 10:37:32 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@8fcc534] for TypeConfiguration
2020-12-03 10:37:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 10:37:33 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a6af2c4, org.springframework.security.web.context.SecurityContextPersistenceFilter@43df1377, org.springframework.security.web.header.HeaderWriterFilter@20afd96f, org.springframework.web.filter.CorsFilter@123c48d0, org.springframework.security.web.authentication.logout.LogoutFilter@5521407f, com.app.config.JwtRequestFilter@36a1fd20, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63f2d024, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3883031d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@14fff5e7, org.springframework.security.web.session.SessionManagementFilter@6f921e32, org.springframework.security.web.access.ExceptionTranslationFilter@47d81427, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1324e70a]
2020-12-03 10:37:34 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 10:37:34 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 10:37:34 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 10:37:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 10:37:34 [main] INFO  com.app.Application - Started Application in 11.581 seconds (JVM running for 12.425)
2020-12-03 10:37:58 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 10:37:58 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 10:37:58 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 34 ms
2020-12-03 10:37:58 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 10:37:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select sbaccounts0_.slno as slno1_14_, sbaccounts0_.branch_slno as branch_17_14_, sbaccounts0_.created_at as created_2_14_, sbaccounts0_.created_by as created_3_14_, sbaccounts0_.created_on as created_4_14_, sbaccounts0_.modified_at as modified5_14_, sbaccounts0_.modified_by as modified6_14_, sbaccounts0_.modified_on as modified7_14_, sbaccounts0_.penalty as penalty8_14_, sbaccounts0_.sb_max_balance as sb_max_b9_14_, sbaccounts0_.sb_min_bal_with_cheq_book_for_staff as sb_min_10_14_, sbaccounts0_.sb_min_bal_without_cheq_book_for_staff as sb_min_11_14_, sbaccounts0_.sb_min_balance as sb_min_12_14_, sbaccounts0_.sb_min_period as sb_min_13_14_, sbaccounts0_.sb_roi as sb_roi14_14_, sbaccounts0_.sb_roi_for_staff as sb_roi_15_14_, sbaccounts0_.sb_type_slno as sb_type18_14_, sbaccounts0_.service_charge as service16_14_ from gen_std_sb_accounts_parameters sbaccounts0_
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_14_] : [BIGINT]) - [1]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_17_14_] : [BIGINT]) - [48]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_14_] : [TIME]) - [10:11:15]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_14_] : [VARCHAR]) - [satish]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_14_] : [DATE]) - [2020-12-03]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_14_] : [TIME]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_14_] : [VARCHAR]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_14_] : [DATE]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty8_14_] : [NUMERIC]) - [85.00]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_b9_14_] : [NUMERIC]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_10_14_] : [NUMERIC]) - [86.00]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_11_14_] : [NUMERIC]) - [896.00]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_12_14_] : [NUMERIC]) - [12345678910111111.00]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_13_14_] : [NUMERIC]) - [158.00]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi14_14_] : [NUMERIC]) - [12.00]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_15_14_] : [NUMERIC]) - [89532.00]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type18_14_] : [BIGINT]) - [1]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service16_14_] : [NUMERIC]) - [89.00]
2020-12-03 10:37:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 10:37:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 10:37:59 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 10:44:31 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 7868 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 10:44:31 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 10:44:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 10:44:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 217ms. Found 21 repository interfaces.
2020-12-03 10:44:34 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 10:44:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 10:44:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 10:44:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 10:44:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 10:44:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 10:44:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 10:44:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 10:44:34 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71880b32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:44:34 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a35d36c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:44:34 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:44:34 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@476ec9d0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:44:34 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2f0a761e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:44:34 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 10:44:34 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 10:44:34 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 10:44:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 10:44:36 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 10:44:36 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 10:44:36 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 10:44:36 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 10:44:36 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4422 ms
2020-12-03 10:44:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 10:44:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3bed3315
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3bed3315
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3bed3315
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ed4a7e4
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3bc4ef12
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b0dc227
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2a334bac
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2a334bac
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a334bac
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3c854752
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3c854752
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c854752
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@210d2a6c
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@210d2a6c
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@210d2a6c
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@77c10a5f
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@77c10a5f
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77c10a5f
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@355c94be
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@355c94be
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@355c94be
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1dd74143
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1dd74143
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1dd74143
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66f28a1f
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66f28a1f
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66f28a1f
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@df921b1
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@df921b1
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@eb6ec6
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@eb6ec6
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3f018494
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3f018494
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51a18b21
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7523a3dc
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6bccd036
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6bccd036
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2a53f215
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2a53f215
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@261db982
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@261db982
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@73971965
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@73971965
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@59c70ceb
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@59c70ceb
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@59bbb974
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@59bbb974
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@44be69aa
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@44be69aa
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5d1e0fbb
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5d1e0fbb
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ee47d9e
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ee47d9e
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@67531e3a
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67531e3a
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3003e580
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3003e580
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@10a98392
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10a98392
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10a98392
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1945113f
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1db87583
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1db87583
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1db87583
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@27329d2a
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@57545c3f
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@57545c3f
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@76a805b7
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@76a805b7
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@591a4f8e
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@591a4f8e
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@48e8c32a
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48e8c32a
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5377414a
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5377414a
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71b639d0
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@542f6803
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@542f6803
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@542f6803
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@316acbb5
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@316acbb5
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@316acbb5
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@717d7587
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5b7aa898
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@62b93086
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@62b93086
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@62b93086
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5731d3a
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5731d3a
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5731d3a
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@70c69586
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@19e0dffe
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4694f434
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4694f434
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5a49af50
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3b7eac14
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3b7eac14
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4f8d86e4
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f8d86e4
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12ad1b2a
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5f5effb0
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2f4b98f6
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7377781e
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7377781e
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5edacf20
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16a5eb6d
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e307087
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1220ef43
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a8b81e8
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@234cff57
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e8507f1
2020-12-03 10:44:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4bcaa195
2020-12-03 10:44:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@56b8aaf1
2020-12-03 10:44:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@56b8aaf1
2020-12-03 10:44:38 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5377414a
2020-12-03 10:44:38 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c952a33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70029d2d]
2020-12-03 10:44:38 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c952a33] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@679d0be8]
2020-12-03 10:44:39 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 10:44:39 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 10:44:39 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 10:44:39 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 10:44:40 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@679d0be8] for TypeConfiguration
2020-12-03 10:44:40 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 10:44:42 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@796fe2b5, org.springframework.security.web.context.SecurityContextPersistenceFilter@43df1377, org.springframework.security.web.header.HeaderWriterFilter@20afd96f, org.springframework.web.filter.CorsFilter@5a6af2c4, org.springframework.security.web.authentication.logout.LogoutFilter@5521407f, com.app.config.JwtRequestFilter@36a1fd20, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63f2d024, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3883031d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@123c48d0, org.springframework.security.web.session.SessionManagementFilter@6f921e32, org.springframework.security.web.access.ExceptionTranslationFilter@47d81427, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f976c]
2020-12-03 10:44:42 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 10:44:42 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 10:44:43 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 10:44:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 10:44:43 [main] INFO  com.app.Application - Started Application in 12.031 seconds (JVM running for 12.979)
2020-12-03 10:45:09 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 10:45:09 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 10:45:09 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-12-03 10:45:09 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 10:45:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbaccounts0_.slno as slno1_14_, sbaccounts0_.branch_slno as branch_17_14_, sbaccounts0_.created_at as created_2_14_, sbaccounts0_.created_by as created_3_14_, sbaccounts0_.created_on as created_4_14_, sbaccounts0_.modified_at as modified5_14_, sbaccounts0_.modified_by as modified6_14_, sbaccounts0_.modified_on as modified7_14_, sbaccounts0_.penalty as penalty8_14_, sbaccounts0_.sb_max_balance as sb_max_b9_14_, sbaccounts0_.sb_min_bal_with_cheq_book_for_staff as sb_min_10_14_, sbaccounts0_.sb_min_bal_without_cheq_book_for_staff as sb_min_11_14_, sbaccounts0_.sb_min_balance as sb_min_12_14_, sbaccounts0_.sb_min_period as sb_min_13_14_, sbaccounts0_.sb_roi as sb_roi14_14_, sbaccounts0_.sb_roi_for_staff as sb_roi_15_14_, sbaccounts0_.sb_type_slno as sb_type18_14_, sbaccounts0_.service_charge as service16_14_ from gen_std_sb_accounts_parameters sbaccounts0_ where sbaccounts0_.slno is null
2020-12-03 10:45:31 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 10:45:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select sbaccounts0_.slno as slno1_14_, sbaccounts0_.branch_slno as branch_17_14_, sbaccounts0_.created_at as created_2_14_, sbaccounts0_.created_by as created_3_14_, sbaccounts0_.created_on as created_4_14_, sbaccounts0_.modified_at as modified5_14_, sbaccounts0_.modified_by as modified6_14_, sbaccounts0_.modified_on as modified7_14_, sbaccounts0_.penalty as penalty8_14_, sbaccounts0_.sb_max_balance as sb_max_b9_14_, sbaccounts0_.sb_min_bal_with_cheq_book_for_staff as sb_min_10_14_, sbaccounts0_.sb_min_bal_without_cheq_book_for_staff as sb_min_11_14_, sbaccounts0_.sb_min_balance as sb_min_12_14_, sbaccounts0_.sb_min_period as sb_min_13_14_, sbaccounts0_.sb_roi as sb_roi14_14_, sbaccounts0_.sb_roi_for_staff as sb_roi_15_14_, sbaccounts0_.sb_type_slno as sb_type18_14_, sbaccounts0_.service_charge as service16_14_ from gen_std_sb_accounts_parameters sbaccounts0_ where sbaccounts0_.slno=?
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_14_] : [BIGINT]) - [1]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_17_14_] : [BIGINT]) - [48]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_14_] : [TIME]) - [10:11:15]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_14_] : [VARCHAR]) - [satish]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_14_] : [DATE]) - [2020-12-03]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_14_] : [TIME]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_14_] : [VARCHAR]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_14_] : [DATE]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty8_14_] : [NUMERIC]) - [85.00]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_b9_14_] : [NUMERIC]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_10_14_] : [NUMERIC]) - [86.00]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_11_14_] : [NUMERIC]) - [896.00]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_12_14_] : [NUMERIC]) - [12345678910111111.00]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_13_14_] : [NUMERIC]) - [158.00]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi14_14_] : [NUMERIC]) - [12.00]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_15_14_] : [NUMERIC]) - [89532.00]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type18_14_] : [BIGINT]) - [1]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service16_14_] : [NUMERIC]) - [89.00]
2020-12-03 10:45:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 10:45:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 10:45:31 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 11:17:54 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 6428 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 11:17:54 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 11:17:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 11:17:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 210ms. Found 21 repository interfaces.
2020-12-03 11:17:56 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 11:17:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 11:17:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:17:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:17:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:17:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:17:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:17:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:17:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fdb646fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:17:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$96640f34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:17:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:17:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2b214b94' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:17:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bb38b1e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:17:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:17:56 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 11:17:56 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 11:17:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 11:17:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 11:17:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 11:17:57 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 11:17:58 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 11:17:58 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3848 ms
2020-12-03 11:17:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 11:17:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2e3572e8
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2e3572e8
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e3572e8
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7c781c42
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@355c94be
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@157ec23b
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@47ac613b
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@47ac613b
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@47ac613b
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@134ff8f8
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@134ff8f8
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@134ff8f8
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3902bd2c
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3902bd2c
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3902bd2c
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@727320fa
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@727320fa
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@727320fa
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51a18b21
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51a18b21
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@51a18b21
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@766a49c7
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@766a49c7
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@766a49c7
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a756082
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a756082
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a756082
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7beae796
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7beae796
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22f4f8f2
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22f4f8f2
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17410c07
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17410c07
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@59c70ceb
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@361abd01
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1fd9893c
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fd9893c
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@551e4c6d
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@551e4c6d
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3fb9a67f
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3fb9a67f
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3f36e8d1
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3f36e8d1
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@340d6d89
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@340d6d89
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5dc0ff7d
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5dc0ff7d
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67531e3a
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67531e3a
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3003e580
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3003e580
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27329d2a
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27329d2a
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@36baa049
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36baa049
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@167381c7
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@167381c7
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6ba060f3
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ba060f3
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ba060f3
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@48e8c32a
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5377414a
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5377414a
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5377414a
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@71b639d0
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@542f6803
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@542f6803
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@316acbb5
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@316acbb5
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@717d7587
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@717d7587
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7c0777b5
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7c0777b5
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e642ee1
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e642ee1
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5731d3a
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7e9f2c32
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7e9f2c32
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7e9f2c32
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2676dc05
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2676dc05
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2676dc05
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@dd2856e
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@793d163b
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3b7eac14
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3b7eac14
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3b7eac14
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e38f0b7
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e38f0b7
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e38f0b7
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5f631ca0
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3134153d
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@659feb22
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@659feb22
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@421def93
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2da16263
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2da16263
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7377781e
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7377781e
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5edacf20
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1220ef43
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3f362135
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@24eeac69
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@24eeac69
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f2d31af
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e7157c7
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2a43e0ac
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@22d9bc14
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@346f41a9
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1084f78c
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@25f723b0
2020-12-03 11:17:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4aa11206
2020-12-03 11:18:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@71179b6f
2020-12-03 11:18:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@71179b6f
2020-12-03 11:18:00 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4e642ee1
2020-12-03 11:18:00 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3db432c2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34414ffc]
2020-12-03 11:18:00 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3db432c2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3a296107]
2020-12-03 11:18:01 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 11:18:01 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 11:18:01 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 11:18:01 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 11:18:01 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3a296107] for TypeConfiguration
2020-12-03 11:18:01 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 11:18:02 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'sbAccountsParameters'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sbAccountsParametersRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-03 11:18:02 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-03 11:18:02 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-03 11:18:02 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-03 11:18:03 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-03 11:18:03 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 11:18:03 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3a296107] for TypeConfiguration
2020-12-03 11:18:03 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@23933031] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3a296107]
2020-12-03 11:18:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-03 11:18:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-03 11:18:03 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-03 11:18:03 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'sbAccountsParameters'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sbAccountsParametersRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'sbAccountsParameters'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sbAccountsParametersRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sbAccountsParametersRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-03 11:21:37 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 18928 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 11:21:37 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 11:21:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 11:21:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 237ms. Found 21 repository interfaces.
2020-12-03 11:21:40 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 11:21:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 11:21:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:21:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:21:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:21:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:21:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:21:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:21:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$667bf823] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:21:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ff29c05d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:21:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:21:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@78faea5f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:21:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$23fe630f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:21:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:21:41 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 11:21:41 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 11:21:41 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 11:21:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 11:21:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 11:21:42 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 11:21:42 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 11:21:42 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4571 ms
2020-12-03 11:21:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 11:21:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4d1ff6b1
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4d1ff6b1
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4d1ff6b1
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3003827c
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@656f62dc
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4fdca00a
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1a3e8e24
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1a3e8e24
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1a3e8e24
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@50448409
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@50448409
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@50448409
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@30b975ad
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@30b975ad
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@30b975ad
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@ea52184
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@ea52184
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ea52184
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7f608e21
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7f608e21
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f608e21
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@66236a0a
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@66236a0a
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@66236a0a
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@795f8317
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@795f8317
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@795f8317
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@157ec23b
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@157ec23b
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@47ac613b
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@47ac613b
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@134ff8f8
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@134ff8f8
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4db60246
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7d32e714
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2935fd2c
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2935fd2c
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@62b790a5
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@62b790a5
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1db7157f
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1db7157f
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@cb39552
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@cb39552
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6749fe50
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6749fe50
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@bbd4791
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@bbd4791
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6ee99964
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6ee99964
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@361abd01
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@361abd01
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@127705e4
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@127705e4
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@480b57e2
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@480b57e2
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1ee47d9e
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ee47d9e
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@493ac8d3
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@493ac8d3
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@493ac8d3
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b38b1f
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@28757abd
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28757abd
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28757abd
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@138aa3cc
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@45aca496
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45aca496
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7fb53256
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7fb53256
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5afbd567
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5afbd567
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@41184371
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@41184371
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@608b1fd2
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@608b1fd2
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@53ed80d3
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@20a7953c
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@20a7953c
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@20a7953c
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e83a98
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e83a98
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e83a98
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1ee27d73
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5583098b
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@56f730b2
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@56f730b2
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@56f730b2
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3e906375
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3e906375
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3e906375
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@41b13f3d
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a39aa2b
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6a0f2853
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6a0f2853
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6dc1dc69
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@b0a1231
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b0a1231
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@793d163b
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@793d163b
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@221a2068
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4976085
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5f631ca0
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2b2954e1
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2b2954e1
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@235d659c
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4232b34a
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2da16263
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f5ce0bb
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@47e51549
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@101a461c
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@360e9c06
2020-12-03 11:21:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5ebffb44
2020-12-03 11:21:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1f87607c
2020-12-03 11:21:44 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1f87607c
2020-12-03 11:21:44 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@608b1fd2
2020-12-03 11:21:44 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@373e6b9d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@65629ac6]
2020-12-03 11:21:45 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@373e6b9d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@8840c98]
2020-12-03 11:21:46 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 11:21:46 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 11:21:46 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 11:21:46 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 11:21:46 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@8840c98] for TypeConfiguration
2020-12-03 11:21:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 11:21:47 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'sbAccountsParameters'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sbAccountsParametersRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-03 11:21:47 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-03 11:21:47 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-03 11:21:47 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-03 11:21:47 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-03 11:21:47 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 11:21:47 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@8840c98] for TypeConfiguration
2020-12-03 11:21:47 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3d8bd881] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@8840c98]
2020-12-03 11:21:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-03 11:21:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-03 11:21:47 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-03 11:21:47 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'sbAccountsParameters'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sbAccountsParametersRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'sbAccountsParameters'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sbAccountsParametersRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sbAccountsParametersRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-03 11:32:15 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 6212 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 11:32:15 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 11:32:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 11:32:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 331ms. Found 21 repository interfaces.
2020-12-03 11:32:17 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 11:32:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 11:32:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:32:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:32:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:32:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:32:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:32:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:32:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9f03a6c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:32:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$37b16efe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:32:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:32:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@49601f82' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:32:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5c8611b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:32:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:32:18 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 11:32:18 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 11:32:19 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 11:32:19 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 11:32:19 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 11:32:19 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 11:32:19 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 11:32:19 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4331 ms
2020-12-03 11:32:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 11:32:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@176555c
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@176555c
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@176555c
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@633fd91
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c386958
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1dd74143
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@66f28a1f
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@66f28a1f
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66f28a1f
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@df921b1
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@df921b1
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@df921b1
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@eb6ec6
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@eb6ec6
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@eb6ec6
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3f018494
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3f018494
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f018494
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c52fc81
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7c52fc81
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7c52fc81
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@75e27856
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@75e27856
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75e27856
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1f3b992
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1f3b992
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f3b992
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@52bf7bf6
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@52bf7bf6
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@40a72ecd
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@40a72ecd
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@257ef9ed
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@257ef9ed
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@64f981e2
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@59bbb974
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@44be69aa
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@44be69aa
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5d1e0fbb
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5d1e0fbb
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5562c2c9
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5562c2c9
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@794366a5
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@794366a5
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@443faa85
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@443faa85
2020-12-03 11:32:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@59a79443
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@59a79443
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d50a7ca
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d50a7ca
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21a02556
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21a02556
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2f894ad9
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2f894ad9
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34585ac9
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34585ac9
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@56382bc9
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56382bc9
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@77bc2e16
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@77bc2e16
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@77bc2e16
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57c00115
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@17aa8a11
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@17aa8a11
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@17aa8a11
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5d5b9ecb
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5807efad
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5807efad
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@47311277
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47311277
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40230eb9
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40230eb9
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2a39aa2b
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2a39aa2b
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2fd954f
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2fd954f
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1eff3cfb
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5d4e13e1
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d4e13e1
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5d4e13e1
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4833eff3
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4833eff3
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4833eff3
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3b1dc579
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@77f905e3
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@777d191f
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@777d191f
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@777d191f
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4f8d86e4
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4f8d86e4
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4f8d86e4
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@12ad1b2a
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5f5effb0
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2f4b98f6
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2f4b98f6
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b2954e1
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@47e51549
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@47e51549
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@109f8c7e
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@109f8c7e
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e307087
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@234cff57
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6bc24e72
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@748f93bb
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@748f93bb
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2a43e0ac
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@22d9bc14
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@346f41a9
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1084f78c
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@25f723b0
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4aa11206
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@40d60f2
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3382cf68
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@526e8108
2020-12-03 11:32:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@526e8108
2020-12-03 11:32:21 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2fd954f
2020-12-03 11:32:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1903b5d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4041739c]
2020-12-03 11:32:22 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1903b5d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@646cd766]
2020-12-03 11:32:23 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 11:32:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 11:32:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 11:32:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 11:32:23 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@646cd766] for TypeConfiguration
2020-12-03 11:32:23 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 11:32:24 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'sbAccountsParameters'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sbAccountsParametersRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-03 11:32:24 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-03 11:32:24 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-03 11:32:24 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-03 11:32:24 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-03 11:32:24 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 11:32:24 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@646cd766] for TypeConfiguration
2020-12-03 11:32:24 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4d0b7fd5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@646cd766]
2020-12-03 11:32:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-03 11:32:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-03 11:32:24 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-03 11:32:24 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'sbAccountsParameters'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sbAccountsParametersRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'sbAccountsParameters'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sbAccountsParametersRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sbAccountsParametersRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.SbAccountsParametersRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-03 11:47:30 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 18328 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 11:47:30 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 11:47:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 11:47:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 236ms. Found 21 repository interfaces.
2020-12-03 11:47:32 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 11:47:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 11:47:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:47:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:47:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:47:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:47:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:47:32 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:47:33 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a6313158] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:47:33 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3edef992] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:47:33 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:47:33 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@bdc8014' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:47:33 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$63b39c44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:47:33 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:47:33 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 11:47:33 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 11:47:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 11:47:34 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 11:47:34 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 11:47:34 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 11:47:35 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 11:47:35 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4621 ms
2020-12-03 11:47:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 11:47:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@30b975ad
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@30b975ad
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@30b975ad
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@470d183
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3e7b65d7
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1a500561
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4086d8fb
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4086d8fb
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4086d8fb
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7c781c42
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7c781c42
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c781c42
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@c386958
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@c386958
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c386958
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3166f664
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3166f664
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3166f664
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@44a085e5
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@44a085e5
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@44a085e5
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2152ab30
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2152ab30
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2152ab30
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@18137eab
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@18137eab
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@18137eab
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@57fbc06f
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@57fbc06f
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2806d6da
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2806d6da
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4f4c88f9
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f4c88f9
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1f3b992
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7beae796
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@22f4f8f2
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@22f4f8f2
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@17410c07
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17410c07
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@64f981e2
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@64f981e2
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12f49ca8
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12f49ca8
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@21da4b5f
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@21da4b5f
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@9b76b60
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@9b76b60
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@15c487a8
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@15c487a8
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@40f35e52
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@40f35e52
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3003e580
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3003e580
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5f174dd2
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f174dd2
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3d90eeb3
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3d90eeb3
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7978e022
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7978e022
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7978e022
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6993c8df
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@34585ac9
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@34585ac9
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@34585ac9
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@167381c7
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6ba060f3
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ba060f3
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@57c00115
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@57c00115
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@17aa8a11
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17aa8a11
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5e5aafc6
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5e5aafc6
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7ce85af2
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7ce85af2
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47311277
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@40230eb9
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@40230eb9
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@40230eb9
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2a39aa2b
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2a39aa2b
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2a39aa2b
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2fd954f
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1eff3cfb
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5d4e13e1
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5d4e13e1
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5d4e13e1
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4833eff3
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4833eff3
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4833eff3
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@dd2856e
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@793d163b
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@777d191f
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@777d191f
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e38f0b7
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@767599a7
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@767599a7
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3468ee6e
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3468ee6e
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58c1da09
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@751ae8a4
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@360e9c06
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@49fa1d74
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49fa1d74
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6bc24e72
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@724aefc3
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7cfb4736
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2a097d77
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53c1179a
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7650ded6
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5034f5dd
2020-12-03 11:47:36 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@31b7d869
2020-12-03 11:47:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1150d471
2020-12-03 11:47:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1150d471
2020-12-03 11:47:37 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7ce85af2
2020-12-03 11:47:37 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4be0a27d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f366587]
2020-12-03 11:47:37 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4be0a27d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@58aa1d72]
2020-12-03 11:47:38 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 11:47:38 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 11:47:38 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 11:47:38 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 11:47:38 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@58aa1d72] for TypeConfiguration
2020-12-03 11:47:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 11:47:41 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f430ea8, org.springframework.security.web.context.SecurityContextPersistenceFilter@395197cb, org.springframework.security.web.header.HeaderWriterFilter@5521407f, org.springframework.web.filter.CorsFilter@119f072c, org.springframework.security.web.authentication.logout.LogoutFilter@b68932b, com.app.config.JwtRequestFilter@2ca132ad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@582c1f8d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6723e6b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@66456506, org.springframework.security.web.session.SessionManagementFilter@1de6dc80, org.springframework.security.web.access.ExceptionTranslationFilter@237cd264, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5fd4e67f]
2020-12-03 11:47:41 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 11:47:41 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 11:47:41 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'bankingMasterController' method 
public org.springframework.http.ResponseEntity<com.app.exception.GenericRes> com.app.controller.BankingMasterController.deleteSbAccountsParameters(com.app.request.BankingMasterRequest) throws java.lang.Exception
to {POST /master/sbType/delete, produces [application/json]}: There is already 'bankingMasterController' bean method
public org.springframework.http.ResponseEntity<com.app.exception.GenericRes> com.app.controller.BankingMasterController.deleteSbType(com.app.request.BankingMasterRequest) throws java.lang.Exception mapped.
2020-12-03 11:47:41 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-03 11:47:41 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 11:47:41 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@58aa1d72] for TypeConfiguration
2020-12-03 11:47:41 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@30437e9c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@58aa1d72]
2020-12-03 11:47:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-03 11:47:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-03 11:47:41 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-03 11:47:42 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-03 11:47:42 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'bankingMasterController' method 
public org.springframework.http.ResponseEntity<com.app.exception.GenericRes> com.app.controller.BankingMasterController.deleteSbAccountsParameters(com.app.request.BankingMasterRequest) throws java.lang.Exception
to {POST /master/sbType/delete, produces [application/json]}: There is already 'bankingMasterController' bean method
public org.springframework.http.ResponseEntity<com.app.exception.GenericRes> com.app.controller.BankingMasterController.deleteSbType(com.app.request.BankingMasterRequest) throws java.lang.Exception mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'bankingMasterController' method 
public org.springframework.http.ResponseEntity<com.app.exception.GenericRes> com.app.controller.BankingMasterController.deleteSbAccountsParameters(com.app.request.BankingMasterRequest) throws java.lang.Exception
to {POST /master/sbType/delete, produces [application/json]}: There is already 'bankingMasterController' bean method
public org.springframework.http.ResponseEntity<com.app.exception.GenericRes> com.app.controller.BankingMasterController.deleteSbType(com.app.request.BankingMasterRequest) throws java.lang.Exception mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.assertUniqueMethodMapping(AbstractHandlerMethodMapping.java:621)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:589)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:315)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:282)
	at java.util.LinkedHashMap.forEach(Unknown Source)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:280)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:252)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:211)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:199)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 16 common frames omitted
2020-12-03 11:48:45 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 14164 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 11:48:45 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 11:48:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 11:48:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 422ms. Found 21 repository interfaces.
2020-12-03 11:48:47 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 11:48:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 11:48:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:48:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:48:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:48:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:48:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:48:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:48:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$388afff5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:48:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d138c82f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:48:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:48:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@49dbaaf3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:48:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f60d6ae1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:48:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:48:48 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 11:48:48 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 11:48:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 11:48:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 11:48:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 11:48:49 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 11:48:49 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 11:48:49 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4183 ms
2020-12-03 11:48:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 11:48:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7f9fc8bd
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7f9fc8bd
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f9fc8bd
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c854752
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f608e21
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3bec5821
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@176555c
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@176555c
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@176555c
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@97a145b
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@97a145b
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@97a145b
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@526a9908
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@526a9908
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@526a9908
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@60a19573
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@60a19573
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@60a19573
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4db60246
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4db60246
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4db60246
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@34d45ec0
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@34d45ec0
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@34d45ec0
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3ce443f9
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3ce443f9
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3ce443f9
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7523a3dc
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7523a3dc
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6bccd036
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6bccd036
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2a53f215
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2a53f215
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6749fe50
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@ae73c80
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@76a14c8d
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@76a14c8d
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@46f902e0
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@46f902e0
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7165d530
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7165d530
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7219ac49
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7219ac49
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2eed37f4
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2eed37f4
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@673c4f6e
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@673c4f6e
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@480b57e2
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@480b57e2
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1ee47d9e
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1ee47d9e
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@138aa3cc
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@138aa3cc
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@ceddaf8
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@ceddaf8
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@27329d2a
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@27329d2a
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@57545c3f
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57545c3f
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57545c3f
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@41184371
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@608b1fd2
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@608b1fd2
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@608b1fd2
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@53ed80d3
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@20a7953c
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20a7953c
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4e83a98
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e83a98
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1ee27d73
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1ee27d73
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@53a84ff4
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@53a84ff4
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7930ffa9
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7930ffa9
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3e906375
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2489e84a
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2489e84a
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2489e84a
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29ebbdf4
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29ebbdf4
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29ebbdf4
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@70c69586
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@19e0dffe
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@b0a1231
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@b0a1231
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@b0a1231
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5a49af50
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5a49af50
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5a49af50
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@60dd0587
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@338766de
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1192b58e
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1192b58e
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1697f2b3
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6e3eb0cd
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6e3eb0cd
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2b2954e1
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b2954e1
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235d659c
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f5ce0bb
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@31db34da
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@724aefc3
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@724aefc3
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@53c1179a
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7650ded6
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5034f5dd
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31b7d869
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6a916402
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1a47a1e8
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d2a2560
2020-12-03 11:48:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62d1dc3c
2020-12-03 11:48:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@16a5c7e4
2020-12-03 11:48:52 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@16a5c7e4
2020-12-03 11:48:52 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7930ffa9
2020-12-03 11:48:52 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60743cdb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@c02670f]
2020-12-03 11:48:52 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60743cdb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5eed6dfb]
2020-12-03 11:48:53 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 11:48:53 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 11:48:53 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 11:48:53 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 11:48:53 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5eed6dfb] for TypeConfiguration
2020-12-03 11:48:53 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 11:48:55 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70cd122, org.springframework.security.web.context.SecurityContextPersistenceFilter@5521407f, org.springframework.security.web.header.HeaderWriterFilter@391b01c5, org.springframework.web.filter.CorsFilter@79424f25, org.springframework.security.web.authentication.logout.LogoutFilter@61becbcf, com.app.config.JwtRequestFilter@674ed201, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@71f056a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@418d1c03, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5fd4e67f, org.springframework.security.web.session.SessionManagementFilter@237cd264, org.springframework.security.web.access.ExceptionTranslationFilter@1c9975a8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@30a791a6]
2020-12-03 11:48:55 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 11:48:55 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 11:48:56 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 11:48:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 11:48:56 [main] INFO  com.app.Application - Started Application in 11.77 seconds (JVM running for 12.66)
2020-12-03 11:49:12 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 11:49:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 11:49:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-12-03 11:49:12 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 11:49:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbaccounts0_.slno as slno1_14_, sbaccounts0_.branch_slno as branch_17_14_, sbaccounts0_.created_at as created_2_14_, sbaccounts0_.created_by as created_3_14_, sbaccounts0_.created_on as created_4_14_, sbaccounts0_.modified_at as modified5_14_, sbaccounts0_.modified_by as modified6_14_, sbaccounts0_.modified_on as modified7_14_, sbaccounts0_.penalty as penalty8_14_, sbaccounts0_.sb_max_balance as sb_max_b9_14_, sbaccounts0_.sb_min_bal_with_cheq_book_for_staff as sb_min_10_14_, sbaccounts0_.sb_min_bal_without_cheq_book_for_staff as sb_min_11_14_, sbaccounts0_.sb_min_balance as sb_min_12_14_, sbaccounts0_.sb_min_period as sb_min_13_14_, sbaccounts0_.sb_roi as sb_roi14_14_, sbaccounts0_.sb_roi_for_staff as sb_roi_15_14_, sbaccounts0_.sb_type_slno as sb_type18_14_, sbaccounts0_.service_charge as service16_14_ from gen_std_sb_accounts_parameters sbaccounts0_
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_14_] : [BIGINT]) - [1]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_17_14_] : [BIGINT]) - [48]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_14_] : [TIME]) - [10:11:15]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_14_] : [VARCHAR]) - [satish]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_14_] : [DATE]) - [2020-12-03]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_14_] : [TIME]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_14_] : [VARCHAR]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_14_] : [DATE]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty8_14_] : [NUMERIC]) - [85.00]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_b9_14_] : [NUMERIC]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_10_14_] : [NUMERIC]) - [86.00]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_11_14_] : [NUMERIC]) - [896.00]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_12_14_] : [NUMERIC]) - [12345678910111111.00]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_13_14_] : [NUMERIC]) - [158.00]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi14_14_] : [NUMERIC]) - [12.00]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_15_14_] : [NUMERIC]) - [89532.00]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type18_14_] : [BIGINT]) - [1]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service16_14_] : [NUMERIC]) - [89.00]
2020-12-03 11:49:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 11:49:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 11:49:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 11:49:59 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 11:49:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [12345678910111111.00]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 11:49:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 11:49:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 11:49:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_min_period=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARBINARY] - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [158]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [NUMERIC] - [89532]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [VARBINARY] - [null]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [DATE] - [2020-12-03]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [TIME] - [11:49:59]
2020-12-03 11:49:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [16] as [BIGINT] - [1]
2020-12-03 11:49:59 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "sb_max_balance" is of type numeric but expression is of type bytea
  Hint: You will need to rewrite or cast the expression.
  Position: 109
2020-12-03 11:50:31 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 11:50:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [12345678910111111.00]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 11:50:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 11:50:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 11:50:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_min_period=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARBINARY] - [null]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [158]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [NUMERIC] - [89532]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [VARCHAR] - [satish]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [DATE] - [2020-12-03]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [TIME] - [11:50:31]
2020-12-03 11:50:31 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [16] as [BIGINT] - [1]
2020-12-03 11:50:31 [http-nio-8080-exec-5] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "sb_max_balance" is of type numeric but expression is of type bytea
  Hint: You will need to rewrite or cast the expression.
  Position: 109
2020-12-03 11:51:19 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 11:51:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [12345678910111111.00]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 11:51:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 11:51:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 11:51:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_min_period=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARBINARY] - [null]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [158]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [NUMERIC] - [89532]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [VARCHAR] - [satish]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [DATE] - [2020-12-03]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [TIME] - [11:51:19]
2020-12-03 11:51:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [16] as [BIGINT] - [1]
2020-12-03 11:51:19 [http-nio-8080-exec-6] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "sb_max_balance" is of type numeric but expression is of type bytea
  Hint: You will need to rewrite or cast the expression.
  Position: 109
2020-12-03 11:51:46 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 11:51:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [12345678910111111.00]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 11:51:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 11:51:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 11:51:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_min_period=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARBINARY] - [null]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [158]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [NUMERIC] - [89532]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [VARCHAR] - [satish]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [DATE] - [2020-12-03]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [TIME] - [11:51:46]
2020-12-03 11:51:46 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [16] as [BIGINT] - [1]
2020-12-03 11:51:46 [http-nio-8080-exec-9] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "sb_max_balance" is of type numeric but expression is of type bytea
  Hint: You will need to rewrite or cast the expression.
  Position: 109
2020-12-03 11:52:05 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 11:52:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [12345678910111111.00]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 11:52:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 11:52:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 11:52:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_min_period=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [158]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [NUMERIC] - [89532]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [VARCHAR] - [satish]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [DATE] - [2020-12-03]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [TIME] - [11:52:05]
2020-12-03 11:52:05 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [16] as [BIGINT] - [1]
2020-12-03 11:52:05 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: multiple assignments to same column "sb_min_period"
2020-12-03 11:57:23 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9252 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 11:57:23 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 11:57:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 11:57:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 254ms. Found 21 repository interfaces.
2020-12-03 11:57:26 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 11:57:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 11:57:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:57:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:57:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:57:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:57:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:57:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:57:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$64b1e1f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:57:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$fd5faa2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:57:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:57:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@78c1a023' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:57:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$22344ce1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:57:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:57:26 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 11:57:26 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 11:57:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 11:57:27 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 11:57:27 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 11:57:27 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 11:57:27 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 11:57:27 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4539 ms
2020-12-03 11:57:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 11:57:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@45e9b12d
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@45e9b12d
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@45e9b12d
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d1ff6b1
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3003827c
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@656f62dc
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5a8c93
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5a8c93
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5a8c93
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1c7350b0
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1c7350b0
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c7350b0
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2b0dc227
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2b0dc227
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2b0dc227
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2a334bac
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2a334bac
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a334bac
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3c854752
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3c854752
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3c854752
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@210d2a6c
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@210d2a6c
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@210d2a6c
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@77c10a5f
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@77c10a5f
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77c10a5f
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@355c94be
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@355c94be
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1dd74143
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1dd74143
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@66f28a1f
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@66f28a1f
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134ff8f8
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4db60246
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@34d45ec0
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34d45ec0
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3ce443f9
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3ce443f9
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7523a3dc
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7523a3dc
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6bccd036
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6bccd036
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2a53f215
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2a53f215
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@261db982
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@261db982
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@73971965
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@73971965
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59c70ceb
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59c70ceb
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2eed37f4
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2eed37f4
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3f36e8d1
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3f36e8d1
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@340d6d89
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@340d6d89
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5dc0ff7d
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5dc0ff7d
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5dc0ff7d
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@493ac8d3
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@51ab1ee3
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51ab1ee3
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51ab1ee3
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@28757abd
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@30839e44
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30839e44
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@ceddaf8
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ceddaf8
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@27329d2a
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@27329d2a
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@57545c3f
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@57545c3f
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76a805b7
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76a805b7
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@608b1fd2
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7c51782d
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7c51782d
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7c51782d
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@411a5965
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@411a5965
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@411a5965
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@71b639d0
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1ee27d73
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@53a84ff4
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@53a84ff4
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@53a84ff4
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7930ffa9
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7930ffa9
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7930ffa9
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3e906375
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@41b13f3d
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@29ebbdf4
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29ebbdf4
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6a0f2853
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3e0fbeb5
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e0fbeb5
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@dd2856e
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@dd2856e
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@793d163b
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@221a2068
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@e38f0b7
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2f4b98f6
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2f4b98f6
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2b2954e1
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58d6e55a
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@751ae8a4
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@235d659c
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4232b34a
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2da16263
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f5ce0bb
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@47e51549
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7945b206
2020-12-03 11:57:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7945b206
2020-12-03 11:57:29 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@76a805b7
2020-12-03 11:57:29 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@500051c5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@ec7b5de]
2020-12-03 11:57:30 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@500051c5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1e1e837d]
2020-12-03 11:57:31 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 11:57:31 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 11:57:31 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 11:57:31 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 11:57:31 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1e1e837d] for TypeConfiguration
2020-12-03 11:57:31 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 11:57:33 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@18f8e2e0, org.springframework.security.web.context.SecurityContextPersistenceFilter@4067634b, org.springframework.security.web.header.HeaderWriterFilter@29db008c, org.springframework.web.filter.CorsFilter@28d56028, org.springframework.security.web.authentication.logout.LogoutFilter@58a7a58d, com.app.config.JwtRequestFilter@7a247711, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@490d9c41, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12e40e98, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6c56fff, org.springframework.security.web.session.SessionManagementFilter@72d0196d, org.springframework.security.web.access.ExceptionTranslationFilter@4de93edd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@24cbf894]
2020-12-03 11:57:34 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 11:57:34 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 11:57:34 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 11:57:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 11:57:34 [main] INFO  com.app.Application - Started Application in 12.106 seconds (JVM running for 13.035)
2020-12-03 11:57:44 [http-nio-8080-exec-10] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 11:57:44 [http-nio-8080-exec-10] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 11:57:44 [http-nio-8080-exec-10] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-12-03 11:57:44 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 11:57:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [12345678910111111.00]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 11:57:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 11:57:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 11:57:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [11:57:44]
2020-12-03 11:57:44 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [1]
2020-12-03 11:58:07 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 12528 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 11:58:07 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 11:58:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 11:58:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 218ms. Found 21 repository interfaces.
2020-12-03 11:58:09 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 11:58:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 11:58:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:58:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:58:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:58:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:58:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 11:58:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 11:58:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5da3e674] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:58:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f651aeae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:58:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:58:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@773dab28' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:58:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$1b265160] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:58:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 11:58:10 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 11:58:10 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 11:58:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 11:58:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 11:58:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 11:58:11 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 11:58:11 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 11:58:11 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4207 ms
2020-12-03 11:58:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 11:58:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@149b0577
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@149b0577
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@149b0577
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@67f77f6e
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3119cf6f
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@68a78f3c
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3c91530d
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3c91530d
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3c91530d
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@f1dd5b4
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@f1dd5b4
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@f1dd5b4
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6e3ecf5c
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6e3ecf5c
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6e3ecf5c
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5f14761c
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5f14761c
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f14761c
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@724b939e
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@724b939e
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@724b939e
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@462abec3
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@462abec3
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@462abec3
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3dc95b8b
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3dc95b8b
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc95b8b
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3003827c
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3003827c
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1115433e
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1115433e
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@119b0892
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@119b0892
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c7350b0
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@50448409
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@30b975ad
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30b975ad
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@ea52184
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@ea52184
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7f608e21
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7f608e21
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@66236a0a
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@66236a0a
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@795f8317
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@795f8317
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@157ec23b
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@157ec23b
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@47ac613b
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@47ac613b
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@134ff8f8
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@134ff8f8
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@62b790a5
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@62b790a5
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6bccd036
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bccd036
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2a53f215
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a53f215
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@261db982
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@261db982
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@261db982
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@bbd4791
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6ee99964
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6ee99964
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6ee99964
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@46f902e0
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7165d530
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7165d530
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7219ac49
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7219ac49
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2eed37f4
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2eed37f4
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@673c4f6e
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@673c4f6e
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@480b57e2
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@480b57e2
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@561953e3
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@64920dc2
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@64920dc2
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@64920dc2
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b38b1f
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b38b1f
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b38b1f
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@28757abd
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@138aa3cc
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@45aca496
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@45aca496
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@45aca496
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7fb53256
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7fb53256
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7fb53256
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7978e022
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6993c8df
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@15f35bc3
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15f35bc3
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56382bc9
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@20a7953c
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@20a7953c
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@71b639d0
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@71b639d0
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ee27d73
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5583098b
2020-12-03 11:58:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7930ffa9
2020-12-03 11:58:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5731d3a
2020-12-03 11:58:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5731d3a
2020-12-03 11:58:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@70c69586
2020-12-03 11:58:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6dc1dc69
2020-12-03 11:58:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e9f2c32
2020-12-03 11:58:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19e0dffe
2020-12-03 11:58:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d4e13e1
2020-12-03 11:58:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e0fbeb5
2020-12-03 11:58:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3976ebfa
2020-12-03 11:58:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2676dc05
2020-12-03 11:58:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@36776c32
2020-12-03 11:58:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@36776c32
2020-12-03 11:58:13 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@480b57e2
2020-12-03 11:58:13 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67770b37] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@72906e]
2020-12-03 11:58:14 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67770b37] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@209f3887]
2020-12-03 11:58:15 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 11:58:15 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 11:58:15 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 11:58:15 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 11:58:15 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@209f3887] for TypeConfiguration
2020-12-03 11:58:15 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 11:58:17 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71687d8f, org.springframework.security.web.context.SecurityContextPersistenceFilter@60861e5d, org.springframework.security.web.header.HeaderWriterFilter@1ab1d93d, org.springframework.web.filter.CorsFilter@443253a6, org.springframework.security.web.authentication.logout.LogoutFilter@6a6a2fdd, com.app.config.JwtRequestFilter@1e029a04, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7f3e9acc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6604f246, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@191774d6, org.springframework.security.web.session.SessionManagementFilter@78d61f17, org.springframework.security.web.access.ExceptionTranslationFilter@5d77be8e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5151accb]
2020-12-03 11:58:17 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 11:58:18 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 11:58:18 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 11:58:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 11:58:18 [main] INFO  com.app.Application - Started Application in 12.027 seconds (JVM running for 12.961)
2020-12-03 12:00:33 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 12:00:33 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 12:00:33 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-12-03 12:00:33 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 12:00:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [11:57:44]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 12:00:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 12:00:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 12:00:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [12:00:34]
2020-12-03 12:00:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [1]
2020-12-03 12:04:03 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 13884 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 12:04:03 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 12:04:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 12:04:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 222ms. Found 21 repository interfaces.
2020-12-03 12:04:05 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 12:04:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 12:04:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:04:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:04:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:04:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:04:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:04:05 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:04:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$54fd1f04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:04:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$edaae73e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:04:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:04:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@151335cb' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:04:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$127f89f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:04:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:04:06 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 12:04:06 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 12:04:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 12:04:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 12:04:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 12:04:07 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 12:04:07 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 12:04:07 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4282 ms
2020-12-03 12:04:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 12:04:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@341b13a8
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@341b13a8
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@341b13a8
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f14761c
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48eb001a
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6f8aba08
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@35c9a231
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@35c9a231
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35c9a231
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2d55e826
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2d55e826
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2d55e826
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@29b40b3
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@29b40b3
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@29b40b3
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4fdca00a
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4fdca00a
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4fdca00a
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1a3e8e24
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1a3e8e24
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a3e8e24
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@50448409
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@50448409
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50448409
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@30b975ad
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@30b975ad
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@30b975ad
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@ea52184
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@ea52184
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7f608e21
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7f608e21
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@66236a0a
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@66236a0a
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@176555c
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@633fd91
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@44d64d4e
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@44d64d4e
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@60d6fdd4
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60d6fdd4
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@619f2afc
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@619f2afc
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d32e714
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d32e714
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2935fd2c
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2935fd2c
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@62b790a5
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@62b790a5
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1db7157f
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1db7157f
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@cb39552
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@cb39552
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@257ef9ed
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@257ef9ed
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7165d530
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7165d530
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7219ac49
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7219ac49
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2eed37f4
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2eed37f4
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2eed37f4
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@127705e4
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7c011174
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c011174
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c011174
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@40f35e52
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@41da3aee
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@41da3aee
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@13dbed9e
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@13dbed9e
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2e766822
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2e766822
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@138aa3cc
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@138aa3cc
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45aca496
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45aca496
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3d90eeb3
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7978e022
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7978e022
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7978e022
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@326e0b8e
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@326e0b8e
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@326e0b8e
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@15f35bc3
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@56382bc9
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@77bc2e16
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@77bc2e16
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@77bc2e16
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4fe533ff
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4fe533ff
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4fe533ff
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@17aa8a11
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5d5b9ecb
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7ce85af2
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7ce85af2
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@47311277
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@41b13f3d
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@41b13f3d
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@29ebbdf4
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@29ebbdf4
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a0f2853
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6dc1dc69
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@b0a1231
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7fc420b8
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7fc420b8
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1192b58e
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f8d86e4
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5f631ca0
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1697f2b3
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@12ad1b2a
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3134153d
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@767599a7
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f5effb0
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@76ff68c5
2020-12-03 12:04:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@76ff68c5
2020-12-03 12:04:09 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@45aca496
2020-12-03 12:04:09 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6adc5b9c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@19c1820d]
2020-12-03 12:04:10 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6adc5b9c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@691541bc]
2020-12-03 12:04:11 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 12:04:11 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 12:04:11 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 12:04:11 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 12:04:11 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@691541bc] for TypeConfiguration
2020-12-03 12:04:11 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 12:04:13 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1136122a, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f7c9755, org.springframework.security.web.header.HeaderWriterFilter@34eb5d01, org.springframework.web.filter.CorsFilter@5a537a16, org.springframework.security.web.authentication.logout.LogoutFilter@47d81427, com.app.config.JwtRequestFilter@614cbec4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1e32037d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d008e61, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72288480, org.springframework.security.web.session.SessionManagementFilter@6e66b498, org.springframework.security.web.access.ExceptionTranslationFilter@4d5ea776, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@b68932b]
2020-12-03 12:04:13 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 12:04:13 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 12:04:13 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 12:04:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 12:04:14 [main] INFO  com.app.Application - Started Application in 11.359 seconds (JVM running for 12.317)
2020-12-03 12:04:20 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 12:04:20 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 12:04:20 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-12-03 12:04:20 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 12:04:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [12:00:34]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 12:04:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 12:04:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 12:04:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE branch_slno = ?
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [12:04:21]
2020-12-03 12:04:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [48]
2020-12-03 12:04:58 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 17632 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 12:04:58 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 12:05:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 12:05:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 286ms. Found 21 repository interfaces.
2020-12-03 12:05:01 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 12:05:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 12:05:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:05:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:05:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:05:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:05:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:05:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:05:01 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ce6f702a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:05:01 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$671d3864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:05:01 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:05:01 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7aad3f7d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:05:01 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8bf1db16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:05:01 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:05:01 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 12:05:01 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 12:05:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 12:05:02 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 12:05:02 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 12:05:02 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 12:05:02 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 12:05:02 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4299 ms
2020-12-03 12:05:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 12:05:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6fbc1bb
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6fbc1bb
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6fbc1bb
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73809e7
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@290e8cab
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@341b13a8
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@37854b34
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@37854b34
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@37854b34
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7ff19c33
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7ff19c33
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ff19c33
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7a4d582c
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7a4d582c
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7a4d582c
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4d1ff6b1
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4d1ff6b1
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d1ff6b1
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7d247660
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7d247660
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d247660
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@513b52af
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@513b52af
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@513b52af
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4ed4a7e4
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4ed4a7e4
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4ed4a7e4
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5634a861
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5634a861
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@75e09567
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@75e09567
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3e7b65d7
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e7b65d7
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1a500561
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@210d2a6c
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@77c10a5f
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@77c10a5f
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@355c94be
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@355c94be
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1dd74143
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1dd74143
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@66f28a1f
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@66f28a1f
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@df921b1
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@df921b1
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@eb6ec6
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@eb6ec6
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f018494
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f018494
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7c52fc81
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7c52fc81
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@261db982
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@261db982
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@17410c07
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@17410c07
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@64f981e2
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@64f981e2
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@12f49ca8
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12f49ca8
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12f49ca8
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44be69aa
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5d1e0fbb
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d1e0fbb
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d1e0fbb
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3fb9a67f
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3f36e8d1
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f36e8d1
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@340d6d89
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@340d6d89
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5dc0ff7d
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5dc0ff7d
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@67531e3a
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67531e3a
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3003e580
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3003e580
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c8a7e38
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1945113f
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1945113f
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1945113f
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1db87583
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1db87583
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1db87583
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2f894ad9
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@57545c3f
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@76a805b7
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@76a805b7
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@76a805b7
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@591a4f8e
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@591a4f8e
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@591a4f8e
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7c51782d
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@20a7953c
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@71b639d0
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71b639d0
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ee27d73
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@316acbb5
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@316acbb5
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@40230eb9
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@40230eb9
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7c0777b5
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@62b93086
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1eff3cfb
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3b1dc579
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b1dc579
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@77f905e3
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@221a2068
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@338766de
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b7eac14
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4976085
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@777d191f
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7fc420b8
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@31142d58
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@73c31181
2020-12-03 12:05:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@73c31181
2020-12-03 12:05:04 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3003e580
2020-12-03 12:05:04 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6418e39e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3635099]
2020-12-03 12:05:05 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6418e39e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@49580ca8]
2020-12-03 12:05:06 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 12:05:06 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 12:05:06 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 12:05:06 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 12:05:06 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@49580ca8] for TypeConfiguration
2020-12-03 12:05:06 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 12:05:08 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7adff6cb, org.springframework.security.web.context.SecurityContextPersistenceFilter@39004e4f, org.springframework.security.web.header.HeaderWriterFilter@6604f246, org.springframework.web.filter.CorsFilter@13ebccd, org.springframework.security.web.authentication.logout.LogoutFilter@39685204, com.app.config.JwtRequestFilter@32069394, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6a6a2fdd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5059d398, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4e80960a, org.springframework.security.web.session.SessionManagementFilter@4fef5792, org.springframework.security.web.access.ExceptionTranslationFilter@b3042ed, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a07e6ca]
2020-12-03 12:05:08 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 12:05:08 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 12:05:09 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 12:05:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 12:05:09 [main] INFO  com.app.Application - Started Application in 11.485 seconds (JVM running for 12.36)
2020-12-03 12:05:13 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 12:05:13 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 12:05:13 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 25 ms
2020-12-03 12:05:13 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 12:05:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [12:04:21]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 12:05:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 12:05:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 12:05:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE branch_slno = ?
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [12:05:13]
2020-12-03 12:05:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [48]
2020-12-03 12:11:03 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9380 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 12:11:03 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 12:11:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 12:11:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 220ms. Found 21 repository interfaces.
2020-12-03 12:11:06 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 12:11:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 12:11:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:11:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:11:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:11:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:11:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:11:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:11:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$997d1c14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:11:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$322ae44e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:11:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:11:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1603dc2f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:11:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$56ff8700] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:11:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:11:06 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 12:11:06 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 12:11:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 12:11:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 12:11:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 12:11:07 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 12:11:07 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 12:11:07 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4670 ms
2020-12-03 12:11:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 12:11:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@35c9a231
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@35c9a231
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@35c9a231
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45e9b12d
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4d1ff6b1
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3003827c
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1115433e
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1115433e
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1115433e
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@119b0892
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@119b0892
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@119b0892
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3bc4ef12
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3bc4ef12
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3bc4ef12
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@43bdaa1b
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@43bdaa1b
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43bdaa1b
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7f9fc8bd
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7f9fc8bd
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f9fc8bd
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1a500561
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1a500561
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a500561
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4086d8fb
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4086d8fb
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4086d8fb
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7c781c42
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7c781c42
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c386958
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c386958
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3166f664
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3166f664
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@66f28a1f
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@134ff8f8
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3902bd2c
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3902bd2c
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@727320fa
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@727320fa
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@51a18b21
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51a18b21
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@766a49c7
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@766a49c7
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6a756082
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6a756082
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7beae796
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7beae796
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@22f4f8f2
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@22f4f8f2
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@17410c07
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@17410c07
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@551e4c6d
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@551e4c6d
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5562c2c9
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5562c2c9
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@794366a5
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@794366a5
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@443faa85
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@443faa85
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@443faa85
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5dc0ff7d
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@67531e3a
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@67531e3a
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@67531e3a
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@51ab1ee3
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3c8a7e38
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c8a7e38
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1945113f
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1945113f
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1db87583
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1db87583
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2f894ad9
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f894ad9
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36baa049
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36baa049
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@76a805b7
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@591a4f8e
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@591a4f8e
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@591a4f8e
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48e8c32a
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48e8c32a
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48e8c32a
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5377414a
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@71b639d0
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@542f6803
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@542f6803
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@542f6803
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@316acbb5
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@316acbb5
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@316acbb5
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7930ffa9
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3e906375
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@62b93086
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62b93086
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29ebbdf4
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7e9f2c32
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7e9f2c32
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4833eff3
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4833eff3
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@dd2856e
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@793d163b
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@777d191f
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@463561c5
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@463561c5
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f4b98f6
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@421def93
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58c1da09
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b2954e1
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@58d6e55a
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@751ae8a4
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@235d659c
2020-12-03 12:11:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4232b34a
2020-12-03 12:11:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6393bf8b
2020-12-03 12:11:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6393bf8b
2020-12-03 12:11:10 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@36baa049
2020-12-03 12:11:10 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4aa2877c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@307e4c44]
2020-12-03 12:11:10 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4aa2877c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4b03cbad]
2020-12-03 12:11:11 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 12:11:11 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 12:11:11 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 12:11:11 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 12:11:11 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4b03cbad] for TypeConfiguration
2020-12-03 12:11:11 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 12:11:13 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41ddec69, org.springframework.security.web.context.SecurityContextPersistenceFilter@39685204, org.springframework.security.web.header.HeaderWriterFilter@434ee422, org.springframework.web.filter.CorsFilter@5e3cb58e, org.springframework.security.web.authentication.logout.LogoutFilter@7b2dd35d, com.app.config.JwtRequestFilter@5ae87de0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77cf329d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@565a6af, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@18f8e2e0, org.springframework.security.web.session.SessionManagementFilter@35260785, org.springframework.security.web.access.ExceptionTranslationFilter@5059d398, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@77fb1002]
2020-12-03 12:11:13 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 12:11:14 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 12:11:14 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 12:11:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 12:11:14 [main] INFO  com.app.Application - Started Application in 12.135 seconds (JVM running for 13.044)
2020-12-03 12:11:25 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 12:11:25 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 12:11:25 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-12-03 12:11:25 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 12:11:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [12:05:13]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 12:11:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 12:11:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 12:11:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE branch_slno = ?
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [12:11:25]
2020-12-03 12:11:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [48]
2020-12-03 12:12:02 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 12:12:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [12:11:25]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 12:12:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 12:12:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 12:12:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE branch_slno = ?
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [12:12:02]
2020-12-03 12:12:02 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [49]
2020-12-03 12:17:16 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 12:17:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [12:11:25]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 12:17:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 12:17:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 12:17:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE branch_slno = ?
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [12:17:16]
2020-12-03 12:17:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [48]
2020-12-03 12:21:48 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 12:21:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [12:17:16]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 12:21:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 12:21:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 12:21:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE branch_slno = ?
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [12:21:48]
2020-12-03 12:21:48 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [48]
2020-12-03 12:24:35 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 1624 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 12:24:35 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 12:24:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 12:24:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 237ms. Found 21 repository interfaces.
2020-12-03 12:24:38 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 12:24:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 12:24:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:24:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:24:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:24:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:24:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:24:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:24:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1f865891] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:24:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b83420cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:24:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:24:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@72fe8a4f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:24:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$dd08c37d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:24:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:24:39 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 12:24:39 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 12:24:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 12:24:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 12:24:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 12:24:40 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 12:24:40 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 12:24:40 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4386 ms
2020-12-03 12:24:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 12:24:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@29b40b3
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@29b40b3
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@29b40b3
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@49d30c6f
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@513b52af
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@119b0892
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3bc4ef12
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3bc4ef12
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3bc4ef12
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@43bdaa1b
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@43bdaa1b
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@43bdaa1b
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7f9fc8bd
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7f9fc8bd
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7f9fc8bd
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1a500561
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1a500561
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1a500561
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4086d8fb
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4086d8fb
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4086d8fb
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7c781c42
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7c781c42
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7c781c42
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@c386958
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@c386958
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@c386958
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3166f664
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3166f664
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@44a085e5
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@44a085e5
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2152ab30
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2152ab30
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@eb6ec6
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@727320fa
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@51a18b21
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@51a18b21
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@766a49c7
2020-12-03 12:24:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@766a49c7
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6a756082
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6a756082
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7beae796
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7beae796
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@22f4f8f2
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@22f4f8f2
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@17410c07
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@17410c07
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@64f981e2
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@64f981e2
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@12f49ca8
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@12f49ca8
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f36e8d1
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f36e8d1
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@443faa85
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@443faa85
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@59a79443
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@59a79443
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d50a7ca
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d50a7ca
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d50a7ca
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3003e580
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@10a98392
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10a98392
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10a98392
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1945113f
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1db87583
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1db87583
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2f894ad9
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f894ad9
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@36baa049
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@36baa049
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@167381c7
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@167381c7
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ba060f3
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ba060f3
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@48e8c32a
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5377414a
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5377414a
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5377414a
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5d5b9ecb
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5d5b9ecb
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5d5b9ecb
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5807efad
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@316acbb5
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@717d7587
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@717d7587
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@717d7587
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7c0777b5
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7c0777b5
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7c0777b5
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@62b93086
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@29ebbdf4
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7e9f2c32
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e9f2c32
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3e0fbeb5
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@dd2856e
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dd2856e
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@338766de
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@338766de
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@777d191f
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@e38f0b7
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@767599a7
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4232b34a
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4232b34a
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@47e51549
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@101a461c
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@360e9c06
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5ebffb44
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@311ff287
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7377781e
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@31db34da
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@109f8c7e
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4aa2877c
2020-12-03 12:24:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4aa2877c
2020-12-03 12:24:42 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6ba060f3
2020-12-03 12:24:42 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10244722] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@61615b4a]
2020-12-03 12:24:43 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10244722] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7ab2a07e]
2020-12-03 12:24:44 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 12:24:44 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 12:24:44 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 12:24:44 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 12:24:44 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7ab2a07e] for TypeConfiguration
2020-12-03 12:24:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 12:24:46 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f976c, org.springframework.security.web.context.SecurityContextPersistenceFilter@565a6af, org.springframework.security.web.header.HeaderWriterFilter@76d828ff, org.springframework.web.filter.CorsFilter@1324e70a, org.springframework.security.web.authentication.logout.LogoutFilter@6e78177b, com.app.config.JwtRequestFilter@4bf10fe1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4cded2cd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43df1377, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3cc6f036, org.springframework.security.web.session.SessionManagementFilter@3c5e4aac, org.springframework.security.web.access.ExceptionTranslationFilter@2c4cf7eb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5e3cb58e]
2020-12-03 12:24:46 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 12:24:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 12:24:47 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 12:24:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 12:24:47 [main] INFO  com.app.Application - Started Application in 12.087 seconds (JVM running for 13.043)
2020-12-03 12:24:50 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 12:24:50 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 12:24:50 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-12-03 12:24:50 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 12:24:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [12:21:48]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 12:24:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 12:24:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 12:24:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE sb_type_slno = ?
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [12:24:50]
2020-12-03 12:24:50 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [48]
2020-12-03 12:59:15 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 17016 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 12:59:15 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 12:59:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 12:59:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 209ms. Found 21 repository interfaces.
2020-12-03 12:59:18 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 12:59:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 12:59:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:59:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:59:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:59:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:59:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 12:59:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 12:59:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$63ef4414] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:59:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$fc9d0c4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:59:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:59:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@22d9c961' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:59:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2171af00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:59:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 12:59:18 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 12:59:18 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 12:59:19 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 12:59:19 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 12:59:19 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 12:59:19 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 12:59:19 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 12:59:19 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3697 ms
2020-12-03 12:59:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 12:59:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@37ad042b
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@37ad042b
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37ad042b
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@75e09567
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f9fc8bd
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3c854752
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@210d2a6c
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@210d2a6c
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@210d2a6c
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@77c10a5f
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@77c10a5f
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77c10a5f
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@355c94be
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@355c94be
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@355c94be
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1dd74143
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1dd74143
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1dd74143
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@66f28a1f
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@66f28a1f
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@66f28a1f
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@df921b1
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@df921b1
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@df921b1
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@eb6ec6
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@eb6ec6
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@eb6ec6
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3f018494
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3f018494
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7c52fc81
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7c52fc81
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@75e27856
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@75e27856
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6a756082
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2a53f215
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@261db982
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@261db982
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@73971965
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@73971965
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@59c70ceb
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@59c70ceb
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@59bbb974
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@59bbb974
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@44be69aa
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@44be69aa
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d1e0fbb
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d1e0fbb
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5562c2c9
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5562c2c9
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@794366a5
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@794366a5
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51ab1ee3
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51ab1ee3
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@10a98392
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@10a98392
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@697173d9
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@697173d9
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d6d1d42
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d6d1d42
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d6d1d42
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f894ad9
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@36baa049
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36baa049
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36baa049
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@76a805b7
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@591a4f8e
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@591a4f8e
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@48e8c32a
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48e8c32a
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5377414a
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5377414a
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5d5b9ecb
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d5b9ecb
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5807efad
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5807efad
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@316acbb5
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@717d7587
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@717d7587
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@717d7587
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7c0777b5
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7c0777b5
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7c0777b5
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4e642ee1
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5731d3a
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7e9f2c32
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7e9f2c32
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7e9f2c32
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2676dc05
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2676dc05
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2676dc05
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4694f434
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5a49af50
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3b7eac14
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b7eac14
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7fc420b8
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@12ad1b2a
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12ad1b2a
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@463561c5
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@463561c5
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f4b98f6
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2b2954e1
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@47e51549
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4bcaa195
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bcaa195
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3f362135
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@21eee94f
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6bc24e72
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@724aefc3
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7cfb4736
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a097d77
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@53c1179a
2020-12-03 12:59:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7650ded6
2020-12-03 12:59:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3c952a33
2020-12-03 12:59:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3c952a33
2020-12-03 12:59:22 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5807efad
2020-12-03 12:59:22 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a00b15d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36ef1d65]
2020-12-03 12:59:22 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a00b15d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6b162ecc]
2020-12-03 12:59:23 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 12:59:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 12:59:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 12:59:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 12:59:23 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6b162ecc] for TypeConfiguration
2020-12-03 12:59:23 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 12:59:25 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2dd08ff1, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d6d424d, org.springframework.security.web.header.HeaderWriterFilter@43df1377, org.springframework.web.filter.CorsFilter@37dec463, org.springframework.security.web.authentication.logout.LogoutFilter@395197cb, com.app.config.JwtRequestFilter@5ffd35dd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e78177b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@237cd264, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bf26810, org.springframework.security.web.session.SessionManagementFilter@1c9975a8, org.springframework.security.web.access.ExceptionTranslationFilter@6f921e32, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@123c48d0]
2020-12-03 12:59:26 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 12:59:26 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 12:59:26 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 12:59:26 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 12:59:26 [main] INFO  com.app.Application - Started Application in 11.28 seconds (JVM running for 12.472)
2020-12-03 12:59:30 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 12:59:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 12:59:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-12-03 12:59:30 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 12:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [12:21:48]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 12:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 12:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 12:59:30 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 13:00:16 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 12004 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 13:00:16 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 13:00:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 13:00:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 217ms. Found 21 repository interfaces.
2020-12-03 13:00:18 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 13:00:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 13:00:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 13:00:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 13:00:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 13:00:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 13:00:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 13:00:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 13:00:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$da00997d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:00:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$72ae61b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:00:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:00:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4d74c3ba' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:00:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$97830469] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:00:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:00:19 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 13:00:19 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 13:00:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 13:00:20 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 13:00:20 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 13:00:20 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 13:00:20 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 13:00:20 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3738 ms
2020-12-03 13:00:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 13:00:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3bc4ef12
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3bc4ef12
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3bc4ef12
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2b0dc227
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@30b975ad
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@470d183
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3ddeaa5f
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3ddeaa5f
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3ddeaa5f
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3bec5821
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3bec5821
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3bec5821
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@176555c
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@176555c
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@176555c
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@97a145b
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@97a145b
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@97a145b
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@526a9908
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@526a9908
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@526a9908
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@60a19573
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@60a19573
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@60a19573
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4db60246
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4db60246
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4db60246
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34d45ec0
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34d45ec0
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ce443f9
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ce443f9
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7523a3dc
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7523a3dc
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1db7157f
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4f4c88f9
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6b63e6ad
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6b63e6ad
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@ae73c80
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@ae73c80
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@76a14c8d
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@76a14c8d
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@46f902e0
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@46f902e0
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7165d530
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7165d530
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7219ac49
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7219ac49
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2eed37f4
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2eed37f4
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@673c4f6e
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@673c4f6e
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@13dbed9e
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@13dbed9e
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@28757abd
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@28757abd
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@30839e44
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30839e44
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@ceddaf8
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@ceddaf8
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@ceddaf8
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7fb53256
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5afbd567
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5afbd567
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5afbd567
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@326e0b8e
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@15f35bc3
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@15f35bc3
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@53ed80d3
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53ed80d3
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@20a7953c
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20a7953c
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4e83a98
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4e83a98
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ee27d73
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ee27d73
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5583098b
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@56f730b2
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@56f730b2
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@56f730b2
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e906375
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e906375
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e906375
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2489e84a
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@254449bb
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6a0f2853
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6a0f2853
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6a0f2853
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@19e0dffe
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@19e0dffe
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@19e0dffe
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3976ebfa
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4833eff3
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@60dd0587
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@60dd0587
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@338766de
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1192b58e
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1192b58e
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5f5effb0
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5f5effb0
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6e3eb0cd
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3468ee6e
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@235d659c
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1220ef43
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1220ef43
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e8507f1
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bcaa195
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d08edc5
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@49fa1d74
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f362135
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@21eee94f
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6bc24e72
2020-12-03 13:00:22 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@724aefc3
2020-12-03 13:00:23 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1946384
2020-12-03 13:00:23 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1946384
2020-12-03 13:00:23 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1ee27d73
2020-12-03 13:00:23 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16a5c7e4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1e225820]
2020-12-03 13:00:23 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16a5c7e4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3b435211]
2020-12-03 13:00:24 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 13:00:24 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 13:00:24 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 13:00:24 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 13:00:24 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3b435211] for TypeConfiguration
2020-12-03 13:00:24 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 13:00:26 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@443dae2, org.springframework.security.web.context.SecurityContextPersistenceFilter@58a7a58d, org.springframework.security.web.header.HeaderWriterFilter@67c2b55d, org.springframework.web.filter.CorsFilter@8f09a02, org.springframework.security.web.authentication.logout.LogoutFilter@2e1ad7de, com.app.config.JwtRequestFilter@18887028, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c9975a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18ff1520, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5454be, org.springframework.security.web.session.SessionManagementFilter@405223e4, org.springframework.security.web.access.ExceptionTranslationFilter@12e40e98, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2b15ba1a]
2020-12-03 13:00:26 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 13:00:27 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 13:00:27 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 13:00:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 13:00:27 [main] INFO  com.app.Application - Started Application in 11.477 seconds (JVM running for 12.693)
2020-12-03 13:00:31 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 13:00:31 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 13:00:31 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-12-03 13:00:31 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 13:00:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [12:21:48]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 13:00:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 13:00:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 13:00:32 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 13:35:43 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 19172 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 13:35:43 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 13:35:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 13:35:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 224ms. Found 21 repository interfaces.
2020-12-03 13:35:45 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 13:35:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 13:35:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 13:35:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 13:35:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 13:35:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 13:35:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 13:35:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 13:35:46 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$746a0870] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:35:46 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d17d0aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:35:46 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:35:46 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4912d525' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:35:46 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$31ec735c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:35:46 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:35:46 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 13:35:46 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 13:35:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 13:35:47 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 13:35:47 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 13:35:47 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 13:35:47 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 13:35:47 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3859 ms
2020-12-03 13:35:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 13:35:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@290e8cab
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@290e8cab
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@290e8cab
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@341b13a8
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f14761c
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@48eb001a
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52b3bf03
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52b3bf03
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52b3bf03
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5626d18c
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5626d18c
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5626d18c
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@45f756e6
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@45f756e6
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@45f756e6
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@656f62dc
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@656f62dc
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@656f62dc
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5a8c93
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5a8c93
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5a8c93
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1c7350b0
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1c7350b0
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c7350b0
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2b0dc227
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2b0dc227
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2b0dc227
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a334bac
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a334bac
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c854752
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c854752
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@210d2a6c
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@210d2a6c
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@66236a0a
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@176555c
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@97a145b
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@97a145b
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@526a9908
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@526a9908
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@60a19573
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60a19573
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4db60246
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4db60246
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@34d45ec0
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@34d45ec0
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3ce443f9
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3ce443f9
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7523a3dc
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7523a3dc
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6bccd036
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6bccd036
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76a14c8d
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76a14c8d
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@361abd01
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@361abd01
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1fd9893c
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1fd9893c
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@551e4c6d
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@551e4c6d
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@551e4c6d
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2eed37f4
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@673c4f6e
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@673c4f6e
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@673c4f6e
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c011174
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@561953e3
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@561953e3
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@64920dc2
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@64920dc2
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b38b1f
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b38b1f
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@28757abd
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28757abd
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30839e44
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30839e44
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@45aca496
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7fb53256
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7fb53256
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7fb53256
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5afbd567
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5afbd567
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5afbd567
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@41184371
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@15f35bc3
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@53ed80d3
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@53ed80d3
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@53ed80d3
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@20a7953c
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@20a7953c
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@20a7953c
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4fe533ff
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@17aa8a11
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5583098b
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5583098b
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7ce85af2
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3e906375
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e906375
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@62b93086
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@62b93086
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29ebbdf4
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6a0f2853
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3e0fbeb5
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3b7eac14
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b7eac14
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7fc420b8
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31142d58
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e38f0b7
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1192b58e
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f8d86e4
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f631ca0
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1697f2b3
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@12ad1b2a
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@472d0f4
2020-12-03 13:35:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@472d0f4
2020-12-03 13:35:49 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@30839e44
2020-12-03 13:35:49 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e39baf0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@83bb0f]
2020-12-03 13:35:50 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e39baf0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@20a24edf]
2020-12-03 13:35:52 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 13:35:52 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 13:35:52 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 13:35:52 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 13:35:52 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@20a24edf] for TypeConfiguration
2020-12-03 13:35:52 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 13:35:54 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@434d001d, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c4cf7eb, org.springframework.security.web.header.HeaderWriterFilter@1e32037d, org.springframework.web.filter.CorsFilter@36453773, org.springframework.security.web.authentication.logout.LogoutFilter@43df1377, com.app.config.JwtRequestFilter@5f82209e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76d828ff, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@47d81427, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4db16677, org.springframework.security.web.session.SessionManagementFilter@191b44ca, org.springframework.security.web.access.ExceptionTranslationFilter@6f7c9755, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4ea43d4d]
2020-12-03 13:35:54 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 13:35:55 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 13:35:55 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 13:35:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 13:35:55 [main] INFO  com.app.Application - Started Application in 13.189 seconds (JVM running for 14.251)
2020-12-03 13:37:22 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 13:37:22 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 13:37:22 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2020-12-03 13:37:22 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 13:37:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 13:37:22 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 13:37:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 13:37:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 13:37:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 13:37:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 13:37:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 13:37:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [12:21:48]
2020-12-03 13:37:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 13:37:22 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 13:37:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 13:37:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 13:37:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [13:37:23]
2020-12-03 13:37:23 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [1]
2020-12-03 13:56:07 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 17068 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 13:56:07 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 13:56:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 13:56:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 225ms. Found 21 repository interfaces.
2020-12-03 13:56:10 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 13:56:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 13:56:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 13:56:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 13:56:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 13:56:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 13:56:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 13:56:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 13:56:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8403d7cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:56:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1cb1a009] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:56:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:56:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@43effd89' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:56:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$418642bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:56:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 13:56:11 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 13:56:11 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 13:56:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 13:56:12 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 13:56:12 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 13:56:12 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 13:56:12 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 13:56:12 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4434 ms
2020-12-03 13:56:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 13:56:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7d247660
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7d247660
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d247660
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1115433e
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a8c93
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1a3e8e24
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@50448409
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@50448409
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@50448409
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@30b975ad
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@30b975ad
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@30b975ad
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@ea52184
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@ea52184
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@ea52184
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7f608e21
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7f608e21
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f608e21
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@66236a0a
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@66236a0a
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@66236a0a
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@795f8317
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@795f8317
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@795f8317
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@157ec23b
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@157ec23b
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@157ec23b
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47ac613b
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47ac613b
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@134ff8f8
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@134ff8f8
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3902bd2c
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3902bd2c
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@34d45ec0
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2935fd2c
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@62b790a5
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62b790a5
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1db7157f
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1db7157f
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@cb39552
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@cb39552
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6749fe50
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6749fe50
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bbd4791
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bbd4791
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6ee99964
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6ee99964
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@361abd01
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@361abd01
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1fd9893c
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1fd9893c
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c011174
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c011174
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1ee47d9e
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1ee47d9e
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@493ac8d3
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@493ac8d3
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@51ab1ee3
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@51ab1ee3
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@51ab1ee3
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28757abd
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@30839e44
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@30839e44
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@30839e44
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@45aca496
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7fb53256
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7fb53256
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5afbd567
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5afbd567
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@41184371
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@41184371
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@608b1fd2
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@608b1fd2
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c51782d
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c51782d
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@20a7953c
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4e83a98
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4e83a98
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4e83a98
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ee27d73
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ee27d73
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ee27d73
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@53a84ff4
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@56f730b2
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3e906375
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e906375
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3e906375
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2489e84a
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2489e84a
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2489e84a
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@254449bb
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2fd954f
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@19e0dffe
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19e0dffe
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3976ebfa
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5a49af50
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a49af50
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3b7eac14
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b7eac14
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7fc420b8
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1192b58e
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5f5effb0
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2da16263
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2da16263
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@101a461c
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@360e9c06
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5ebffb44
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@311ff287
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7377781e
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31db34da
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@109f8c7e
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5edacf20
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@307e4c44
2020-12-03 13:56:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@307e4c44
2020-12-03 13:56:14 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7c51782d
2020-12-03 13:56:14 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61615b4a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@721d8ab5]
2020-12-03 13:56:15 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61615b4a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@437c4b25]
2020-12-03 13:56:16 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 13:56:16 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 13:56:16 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 13:56:16 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 13:56:16 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@437c4b25] for TypeConfiguration
2020-12-03 13:56:16 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 13:56:18 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1324e70a, org.springframework.security.web.context.SecurityContextPersistenceFilter@21bf308, org.springframework.security.web.header.HeaderWriterFilter@39685204, org.springframework.web.filter.CorsFilter@3cc6f036, org.springframework.security.web.authentication.logout.LogoutFilter@4ec37a42, com.app.config.JwtRequestFilter@543d2ef3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12e40e98, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cee3e05, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72d16d6, org.springframework.security.web.session.SessionManagementFilter@20afd96f, org.springframework.security.web.access.ExceptionTranslationFilter@35260785, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@18f8e2e0]
2020-12-03 13:56:18 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 13:56:18 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 13:56:19 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 13:56:19 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 13:56:19 [main] INFO  com.app.Application - Started Application in 12.146 seconds (JVM running for 13.569)
2020-12-03 13:56:25 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 13:56:25 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 13:56:25 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-12-03 13:56:25 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 13:56:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [13:37:23]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 13:56:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 13:56:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 13:56:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE branch_slno = ?
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [13:56:26]
2020-12-03 13:56:26 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [1]
2020-12-03 14:00:56 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 14:00:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [13:37:23]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 14:00:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 14:00:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 14:00:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE branch_slno = ?
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [12.0]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [14:00:56]
2020-12-03 14:00:56 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [1]
2020-12-03 14:01:45 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 14:01:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [13:37:23]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 14:01:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 14:01:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 14:01:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE branch_slno = ?
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [2.0]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [14:01:45]
2020-12-03 14:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [1]
2020-12-03 14:03:41 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 14:03:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [13:37:23]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 14:03:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 14:03:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 14:03:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE branch_slno = ?
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [2.0]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [14:03:41]
2020-12-03 14:03:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [1]
2020-12-03 14:03:57 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 14:03:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [13:37:23]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 14:03:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 14:03:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 14:03:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE branch_slno = ?
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [2.0]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [14:03:57]
2020-12-03 14:03:57 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [1]
2020-12-03 14:04:11 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 14:04:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [13:37:23]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 14:04:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 14:04:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 14:04:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE branch_slno = ?
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [2.0]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [14:04:11]
2020-12-03 14:04:11 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [1]
2020-12-03 14:25:34 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 10028 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 14:25:34 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 14:25:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 14:25:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 276ms. Found 21 repository interfaces.
2020-12-03 14:25:36 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 14:25:36 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 14:25:36 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 14:25:36 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 14:25:36 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 14:25:36 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 14:25:36 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 14:25:36 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 14:25:37 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fdb646fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 14:25:37 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$96640f34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 14:25:37 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 14:25:37 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@70e3f36f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 14:25:37 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bb38b1e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 14:25:37 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 14:25:37 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 14:25:37 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 14:25:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 14:25:38 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 14:25:38 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 14:25:38 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 14:25:39 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 14:25:39 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4998 ms
2020-12-03 14:25:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 14:25:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2e3572e8
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2e3572e8
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e3572e8
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7c781c42
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@355c94be
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@157ec23b
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@47ac613b
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@47ac613b
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@47ac613b
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@134ff8f8
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@134ff8f8
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@134ff8f8
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3902bd2c
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3902bd2c
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3902bd2c
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@727320fa
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@727320fa
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@727320fa
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51a18b21
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51a18b21
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@51a18b21
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@766a49c7
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@766a49c7
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@766a49c7
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a756082
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a756082
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a756082
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7beae796
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7beae796
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22f4f8f2
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22f4f8f2
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17410c07
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17410c07
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@59c70ceb
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@361abd01
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1fd9893c
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fd9893c
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@551e4c6d
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@551e4c6d
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3fb9a67f
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3fb9a67f
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3f36e8d1
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3f36e8d1
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@340d6d89
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@340d6d89
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5dc0ff7d
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5dc0ff7d
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67531e3a
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67531e3a
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3003e580
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3003e580
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27329d2a
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27329d2a
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@36baa049
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36baa049
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@167381c7
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@167381c7
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6ba060f3
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ba060f3
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ba060f3
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@48e8c32a
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5377414a
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5377414a
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5377414a
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@71b639d0
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@542f6803
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@542f6803
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@316acbb5
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@316acbb5
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@717d7587
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@717d7587
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7c0777b5
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7c0777b5
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e642ee1
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e642ee1
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5731d3a
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7e9f2c32
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7e9f2c32
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7e9f2c32
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2676dc05
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2676dc05
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2676dc05
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@dd2856e
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@793d163b
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3b7eac14
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3b7eac14
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3b7eac14
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e38f0b7
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e38f0b7
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e38f0b7
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5f631ca0
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3134153d
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@659feb22
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@659feb22
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@421def93
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2da16263
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2da16263
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7377781e
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7377781e
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5edacf20
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1220ef43
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3f362135
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@24eeac69
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@24eeac69
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f2d31af
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e7157c7
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2a43e0ac
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@22d9bc14
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@346f41a9
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1084f78c
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@25f723b0
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4aa11206
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@71179b6f
2020-12-03 14:25:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@71179b6f
2020-12-03 14:25:41 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4e642ee1
2020-12-03 14:25:41 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3db432c2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34414ffc]
2020-12-03 14:25:42 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3db432c2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3a296107]
2020-12-03 14:25:44 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 14:25:44 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 14:25:44 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 14:25:44 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 14:25:44 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3a296107] for TypeConfiguration
2020-12-03 14:25:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 14:25:47 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b1a1a37, org.springframework.security.web.context.SecurityContextPersistenceFilter@7c56c911, org.springframework.security.web.header.HeaderWriterFilter@434a8938, org.springframework.web.filter.CorsFilter@7d90764a, org.springframework.security.web.authentication.logout.LogoutFilter@195cbf5e, com.app.config.JwtRequestFilter@4e20a985, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@418d1c03, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21ffc00e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6843fdc4, org.springframework.security.web.session.SessionManagementFilter@5151accb, org.springframework.security.web.access.ExceptionTranslationFilter@36120a8b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3f033664]
2020-12-03 14:25:47 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 14:25:47 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 14:25:48 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 14:25:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 14:25:48 [main] INFO  com.app.Application - Started Application in 15.018 seconds (JVM running for 16.329)
2020-12-03 14:25:52 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 14:25:52 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 14:25:52 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-12-03 14:25:52 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 14:25:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [13:37:23]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 14:25:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 14:25:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 14:25:53 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 15:21:19 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=53m39s774ms179Âµs599ns).
2020-12-03 15:34:06 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 16872 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 15:34:06 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 15:34:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 15:34:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 173ms. Found 21 repository interfaces.
2020-12-03 15:34:07 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 15:34:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 15:34:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 15:34:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 15:34:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 15:34:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 15:34:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 15:34:08 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 15:34:08 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9a4c8953] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 15:34:08 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$32fa518d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 15:34:08 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 15:34:08 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@29f0c4f2' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 15:34:08 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$57cef43f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 15:34:08 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 15:34:08 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 15:34:08 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 15:34:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 15:34:09 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 15:34:09 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 15:34:09 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 15:34:09 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 15:34:09 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3187 ms
2020-12-03 15:34:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 15:34:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1a500561
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1a500561
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a500561
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@210d2a6c
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@66236a0a
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@176555c
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@97a145b
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@97a145b
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@97a145b
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@526a9908
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@526a9908
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@526a9908
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@60a19573
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@60a19573
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@60a19573
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4db60246
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4db60246
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4db60246
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@34d45ec0
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@34d45ec0
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34d45ec0
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3ce443f9
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3ce443f9
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3ce443f9
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7523a3dc
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7523a3dc
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7523a3dc
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6bccd036
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6bccd036
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a53f215
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a53f215
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@261db982
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@261db982
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@bbd4791
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@76a14c8d
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@46f902e0
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@46f902e0
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7165d530
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7165d530
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7219ac49
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7219ac49
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2eed37f4
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2eed37f4
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@673c4f6e
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@673c4f6e
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@480b57e2
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@480b57e2
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ee47d9e
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ee47d9e
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@493ac8d3
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@493ac8d3
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@45aca496
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@45aca496
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@27329d2a
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@27329d2a
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@57545c3f
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@57545c3f
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@76a805b7
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76a805b7
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76a805b7
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@608b1fd2
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7c51782d
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c51782d
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c51782d
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@20a7953c
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4e83a98
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4e83a98
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1ee27d73
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ee27d73
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@53a84ff4
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53a84ff4
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7930ffa9
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7930ffa9
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b7aa898
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b7aa898
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2489e84a
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@29ebbdf4
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@29ebbdf4
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@29ebbdf4
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@70c69586
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@70c69586
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@70c69586
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0fbeb5
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@b0a1231
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5a49af50
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5a49af50
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5a49af50
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@221a2068
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@221a2068
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@221a2068
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4976085
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@31142d58
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3134153d
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3134153d
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@25d0cb3a
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@421def93
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@421def93
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2da16263
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2da16263
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@101a461c
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@311ff287
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1220ef43
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5034f5dd
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5034f5dd
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a47a1e8
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6d2a2560
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62d1dc3c
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3811510
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24eeac69
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18539cb1
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@748f93bb
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f2d31af
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@36ef1d65
2020-12-03 15:34:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@36ef1d65
2020-12-03 15:34:11 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5b7aa898
2020-12-03 15:34:11 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4dcbae55] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4a9860]
2020-12-03 15:34:12 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4dcbae55] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@40d848f9]
2020-12-03 15:34:14 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 15:34:14 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 15:34:14 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 15:34:14 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 15:34:14 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@40d848f9] for TypeConfiguration
2020-12-03 15:34:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 15:34:16 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70cd122, org.springframework.security.web.context.SecurityContextPersistenceFilter@5521407f, org.springframework.security.web.header.HeaderWriterFilter@391b01c5, org.springframework.web.filter.CorsFilter@79424f25, org.springframework.security.web.authentication.logout.LogoutFilter@61becbcf, com.app.config.JwtRequestFilter@2a6c751f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@71f056a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@418d1c03, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5fd4e67f, org.springframework.security.web.session.SessionManagementFilter@237cd264, org.springframework.security.web.access.ExceptionTranslationFilter@3883031d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@30a791a6]
2020-12-03 15:34:17 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 15:34:17 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 15:34:17 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 15:34:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 15:34:17 [main] INFO  com.app.Application - Started Application in 12.019 seconds (JVM running for 12.87)
2020-12-03 15:34:27 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 15:34:27 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 15:34:27 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 27 ms
2020-12-03 15:34:27 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 15:34:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [13:37:23]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 15:34:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 15:34:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 15:34:27 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 15:34:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [2.0]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [15:34:27]
2020-12-03 15:34:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [1]
2020-12-03 15:34:28 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: insert or update on table "gen_std_sb_accounts_parameters" violates foreign key constraint "fkav3ojd31ay01jybd6wsan6xgo"
  Detail: Key (branch_slno)=(4) is not present in table "gen_std_branch".
2020-12-03 15:34:40 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 15:34:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [1]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:15]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-03]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [13:37:23]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 15:34:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 15:34:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 15:34:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [2.0]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [15:34:40]
2020-12-03 15:34:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [1]
2020-12-03 15:35:05 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 15:35:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [4]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [2]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 15:35:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:33:50]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [11:41:52]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [satish]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-03 15:35:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - update gen_std_sb_accounts_parameters set branch_slno=?, sb_type_slno=?, sb_min_balance=?,sb_max_balance=?, sb_roi=?, sb_min_period=?,service_charge=?, penalty=?, sb_min_bal_with_cheq_book_for_staff=?, sb_min_bal_without_cheq_book_for_staff=?, sb_roi_for_staff=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [1]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [0.0]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [NUMERIC] - [1000.0]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [2.0]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [158]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [NUMERIC] - [89]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [NUMERIC] - [85]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [NUMERIC] - [86]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [NUMERIC] - [896]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [NUMERIC] - [89532]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [satish]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [DATE] - [2020-12-03]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [TIME] - [15:35:05]
2020-12-03 15:35:05 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [4]
2020-12-03 15:35:16 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 15:35:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [4]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [null]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [null]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [null]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [15:35:05]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [2.00]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 15:35:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [46]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [pooja]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:37]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [Goa]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 15:35:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 15:35:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - DELETE FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 15:35:16 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-03 15:35:29 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 15:35:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - Select * FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [3]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [49]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [12:12:02]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-03]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([penalty] : [NUMERIC]) - [85.00]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_max_balance] : [NUMERIC]) - [1000.00]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_with_cheq_book_for_staff] : [NUMERIC]) - [86.00]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_bal_without_cheq_book_for_staff] : [NUMERIC]) - [896.00]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_balance] : [NUMERIC]) - [0.00]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_min_period] : [NUMERIC]) - [158.00]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi] : [NUMERIC]) - [12.00]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_roi_for_staff] : [NUMERIC]) - [89532.00]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([sb_type_slno] : [BIGINT]) - [1]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([service_charge] : [NUMERIC]) - [89.00]
2020-12-03 15:35:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_19_1_, state1_.created_by as created_2_19_1_, state1_.modified_at as modified3_19_1_, state1_.modified_by as modified4_19_1_, state1_.modified_on as modified5_19_1_, state1_.country_slno as country_9_19_1_, state1_.created_at as created_6_19_1_, state1_.created_on as created_7_19_1_, state1_.name as name8_19_1_, country2_.slno as slno1_3_2_, country2_.created_at as created_2_3_2_, country2_.created_by as created_3_3_2_, country2_.created_on as created_4_3_2_, country2_.modified_at as modified5_3_2_, country2_.modified_by as modified6_3_2_, country2_.modified_on as modified7_3_2_, country2_.name as name8_3_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_19_1_] : [BIGINT]) - [47]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_2_] : [BIGINT]) - [1]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [47]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_19_1_] : [VARCHAR]) - [satish]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_19_1_] : [TIME]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_19_1_] : [VARCHAR]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_19_1_] : [DATE]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_19_1_] : [BIGINT]) - [1]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_19_1_] : [TIME]) - [17:19:54]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_19_1_] : [DATE]) - [2020-12-02]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_19_1_] : [VARCHAR]) - [karnataka]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_2_] : [TIME]) - [19:09:03]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_2_] : [VARCHAR]) - [pooja]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_2_] : [TIME]) - [19:12:27]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_2_] : [VARCHAR]) - [admin]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_2_] : [DATE]) - [2020-11-28]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_2_] : [VARCHAR]) - [India]
2020-12-03 15:35:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_15_0_, sbtype0_.created_at as created_2_15_0_, sbtype0_.created_by as created_3_15_0_, sbtype0_.created_on as created_4_15_0_, sbtype0_.modified_at as modified5_15_0_, sbtype0_.modified_by as modified6_15_0_, sbtype0_.modified_on as modified7_15_0_, sbtype0_.name as name8_15_0_ from gen_std_sb_type sbtype0_ where sbtype0_.slno=?
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_15_0_] : [TIME]) - [11:31:21]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_15_0_] : [VARCHAR]) - [sat]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_15_0_] : [DATE]) - [2020-12-02]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_15_0_] : [TIME]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_15_0_] : [VARCHAR]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_15_0_] : [DATE]) - [null]
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_15_0_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-03 15:35:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - DELETE FROM gen_std_sb_accounts_parameters WHERE slno = ?
2020-12-03 15:35:29 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-03 17:13:56 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 6536 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 17:13:56 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 17:13:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 17:13:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 238ms. Found 22 repository interfaces.
2020-12-03 17:13:58 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 17:13:58 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 17:13:58 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 17:13:58 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 17:13:58 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 17:13:58 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 17:13:58 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 17:13:58 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 17:13:59 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aa9237d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 17:13:59 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$43400012] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 17:13:59 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 17:13:59 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@248deced' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 17:13:59 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6814a2c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 17:13:59 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 17:13:59 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 17:13:59 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 17:13:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 17:14:00 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 17:14:00 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 17:14:00 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 17:14:00 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 17:14:00 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4154 ms
2020-12-03 17:14:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 17:14:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@49d30c6f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@49d30c6f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@49d30c6f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@513b52af
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@119b0892
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1c7350b0
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b0dc227
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b0dc227
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2b0dc227
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2a334bac
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2a334bac
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a334bac
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c854752
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c854752
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c854752
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@210d2a6c
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@210d2a6c
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@210d2a6c
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@77c10a5f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@77c10a5f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@77c10a5f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@355c94be
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@355c94be
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@355c94be
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1dd74143
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1dd74143
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1dd74143
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66f28a1f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66f28a1f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@df921b1
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@df921b1
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@eb6ec6
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@eb6ec6
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@727320fa
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3ce443f9
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7523a3dc
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7523a3dc
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6bccd036
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6bccd036
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2a53f215
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2a53f215
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@261db982
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@261db982
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@73971965
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@73971965
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@59c70ceb
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@59c70ceb
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@59bbb974
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@59bbb974
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@44be69aa
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@44be69aa
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@480b57e2
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@480b57e2
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5dc0ff7d
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5dc0ff7d
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@67531e3a
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@67531e3a
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3003e580
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3003e580
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3003e580
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c8a7e38
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1945113f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1945113f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1945113f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ceddaf8
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@27329d2a
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@27329d2a
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@57545c3f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@57545c3f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@76a805b7
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@76a805b7
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@591a4f8e
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@591a4f8e
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@48e8c32a
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@48e8c32a
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@411a5965
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@71b639d0
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@71b639d0
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@71b639d0
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@542f6803
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@542f6803
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@542f6803
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@316acbb5
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7930ffa9
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5b7aa898
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5b7aa898
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5b7aa898
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62b93086
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62b93086
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62b93086
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@29ebbdf4
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6a0f2853
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3e0fbeb5
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e0fbeb5
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b0a1231
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@793d163b
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@793d163b
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@777d191f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@777d191f
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@e38f0b7
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5f631ca0
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@345cbf40
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@47e51549
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@47e51549
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ebffb44
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@311ff287
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7377781e
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31db34da
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@109f8c7e
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5edacf20
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@16a5eb6d
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7e307087
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@500051c5
2020-12-03 17:14:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@500051c5
2020-12-03 17:14:04 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@48e8c32a
2020-12-03 17:14:04 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@33bb3f86] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1946384]
2020-12-03 17:14:05 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@33bb3f86] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@580902cd]
2020-12-03 17:14:07 [main] DEBUG org.hibernate.SQL - create table gen_std_deposit_type (slno int8 not null, created_at time, created_by varchar(255), created_on DATE, modified_at time, modified_by varchar(255), modified_on DATE, name varchar(255), primary key (slno))
2020-12-03 17:14:07 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 17:14:07 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 17:14:07 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 17:14:07 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 17:14:07 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@580902cd] for TypeConfiguration
2020-12-03 17:14:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 17:14:10 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@102ecb61, org.springframework.security.web.context.SecurityContextPersistenceFilter@683ed81b, org.springframework.security.web.header.HeaderWriterFilter@8585cdd, org.springframework.web.filter.CorsFilter@1fd0ae78, org.springframework.security.web.authentication.logout.LogoutFilter@27055a2a, com.app.config.JwtRequestFilter@1df9f7c6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7db06c50, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e55eeb9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@583030bd, org.springframework.security.web.session.SessionManagementFilter@62c47480, org.springframework.security.web.access.ExceptionTranslationFilter@2b6ee447, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3ca3eba2]
2020-12-03 17:14:10 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 17:14:10 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 17:14:11 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 17:14:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 17:14:11 [main] INFO  com.app.Application - Started Application in 15.613 seconds (JVM running for 16.351)
2020-12-03 17:20:46 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 17:20:46 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 17:20:46 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 74 ms
2020-12-03 17:20:46 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:20:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.name=?
2020-12-03 17:20:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Pigmy]
2020-12-03 17:20:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-03 17:20:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_deposit_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-03 17:20:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [17:20:47]
2020-12-03 17:20:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [sat]
2020-12-03 17:20:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-03]
2020-12-03 17:20:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-03 17:20:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-03 17:20:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-03 17:20:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Pigmy]
2020-12-03 17:20:47 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [54]
2020-12-03 17:20:57 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:20:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.name=?
2020-12-03 17:20:57 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [RD]
2020-12-03 17:20:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-03 17:20:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into gen_std_deposit_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-03 17:20:57 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [17:20:57]
2020-12-03 17:20:57 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [sat]
2020-12-03 17:20:57 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-03]
2020-12-03 17:20:57 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-03 17:20:57 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-03 17:20:57 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-03 17:20:57 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [RD]
2020-12-03 17:20:57 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [55]
2020-12-03 17:21:09 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:21:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.name=?
2020-12-03 17:21:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [FD]
2020-12-03 17:21:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-03 17:21:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into gen_std_deposit_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-03 17:21:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [17:21:09]
2020-12-03 17:21:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [sat]
2020-12-03 17:21:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-03]
2020-12-03 17:21:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-03 17:21:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-03 17:21:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-03 17:21:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [FD]
2020-12-03 17:21:09 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [56]
2020-12-03 17:21:16 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:21:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.name=?
2020-12-03 17:21:16 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [MIS]
2020-12-03 17:21:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-03 17:21:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into gen_std_deposit_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-03 17:21:16 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [17:21:16]
2020-12-03 17:21:16 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [sat]
2020-12-03 17:21:16 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-03]
2020-12-03 17:21:16 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-03 17:21:16 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-03 17:21:16 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-03 17:21:16 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [MIS]
2020-12-03 17:21:16 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [57]
2020-12-03 17:21:44 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:21:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.name=?
2020-12-03 17:21:44 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Pigmy Withdraw]
2020-12-03 17:21:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-03 17:21:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - insert into gen_std_deposit_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-03 17:21:44 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [17:21:44]
2020-12-03 17:21:44 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-03 17:21:44 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-03]
2020-12-03 17:21:44 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-03 17:21:44 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-03 17:21:44 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-03 17:21:44 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Pigmy Withdraw]
2020-12-03 17:21:44 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [58]
2020-12-03 17:22:30 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:22:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [1]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:47]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [2]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:57]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [RD]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [3]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:09]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [FD]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [4]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:16]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [MIS]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [5]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:44]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [satish]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:22:30 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy Withdraw]
2020-12-03 17:22:58 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:35:16 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 11672 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-03 17:35:16 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-03 17:35:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-03 17:35:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 189ms. Found 22 repository interfaces.
2020-12-03 17:35:18 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-03 17:35:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-03 17:35:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 17:35:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-03 17:35:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 17:35:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 17:35:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-03 17:35:18 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-03 17:35:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fcdb437a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 17:35:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$95890bb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 17:35:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 17:35:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@69c93ca4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 17:35:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ba5dae66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 17:35:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-03 17:35:19 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-03 17:35:19 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-03 17:35:19 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-03 17:35:20 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-03 17:35:20 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-03 17:35:20 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-03 17:35:20 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-03 17:35:20 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3555 ms
2020-12-03 17:35:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-03 17:35:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@47ac613b
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@47ac613b
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@47ac613b
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60a19573
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@619f2afc
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2152ab30
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18137eab
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18137eab
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18137eab
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@57fbc06f
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@57fbc06f
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57fbc06f
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2806d6da
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2806d6da
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2806d6da
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4f4c88f9
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4f4c88f9
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4f4c88f9
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6b63e6ad
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6b63e6ad
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6b63e6ad
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@ae73c80
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@ae73c80
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@ae73c80
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@76a14c8d
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@76a14c8d
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@76a14c8d
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46f902e0
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46f902e0
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7165d530
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7165d530
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7219ac49
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7219ac49
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@625a9c5d
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9b76b60
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@15c487a8
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@15c487a8
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@40f35e52
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@40f35e52
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@41da3aee
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@41da3aee
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@13dbed9e
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@13dbed9e
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2e766822
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2e766822
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@138aa3cc
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@138aa3cc
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45aca496
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45aca496
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7fb53256
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7fb53256
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56382bc9
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56382bc9
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@20a7953c
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@20a7953c
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4e83a98
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4e83a98
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ee27d73
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ee27d73
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ee27d73
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5583098b
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@56f730b2
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56f730b2
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56f730b2
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e60b459
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@41b13f3d
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@41b13f3d
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@254449bb
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@254449bb
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6a0f2853
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6a0f2853
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@19e0dffe
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19e0dffe
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@b0a1231
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@b0a1231
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@56928e17
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@60dd0587
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@60dd0587
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@60dd0587
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4976085
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4976085
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4976085
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1192b58e
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1697f2b3
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@25d0cb3a
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@25d0cb3a
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@25d0cb3a
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3468ee6e
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3468ee6e
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3468ee6e
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@58c1da09
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@751ae8a4
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@360e9c06
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@360e9c06
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7377781e
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1a8b81e8
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1a8b81e8
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@21eee94f
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@21eee94f
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cfb4736
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7650ded6
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3811510
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6d8796c1
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d8796c1
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c413ffc
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d21852b
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6cd98a05
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b8ec001
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1e95b653
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f6c6077
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4fc5563d
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@286090c
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@ea04cab
2020-12-03 17:35:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@ea04cab
2020-12-03 17:35:21 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@b0a1231
2020-12-03 17:35:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1fd7a37] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5b202ff]
2020-12-03 17:35:22 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1fd7a37] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@26e0d39c]
2020-12-03 17:35:23 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-03 17:35:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-03 17:35:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-03 17:35:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-03 17:35:23 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@26e0d39c] for TypeConfiguration
2020-12-03 17:35:23 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-03 17:35:25 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21ce3b22, org.springframework.security.web.context.SecurityContextPersistenceFilter@6bfbab1c, org.springframework.security.web.header.HeaderWriterFilter@12d35bc9, org.springframework.web.filter.CorsFilter@7cd25bf5, org.springframework.security.web.authentication.logout.LogoutFilter@118e2487, com.app.config.JwtRequestFilter@48860139, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3700994c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@77f529a6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e2f6e13, org.springframework.security.web.session.SessionManagementFilter@749ee0e3, org.springframework.security.web.access.ExceptionTranslationFilter@3b77940f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3b4f1eb]
2020-12-03 17:35:25 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-03 17:35:25 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-03 17:35:25 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-03 17:35:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-03 17:35:25 [main] INFO  com.app.Application - Started Application in 9.698 seconds (JVM running for 10.451)
2020-12-03 17:35:33 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-03 17:35:33 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-03 17:35:33 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-12-03 17:35:33 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:35:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.slno=?
2020-12-03 17:35:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-03 17:35:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [1]
2020-12-03 17:35:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:47]
2020-12-03 17:35:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:35:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:35:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:35:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:35:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:35:34 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy]
2020-12-03 17:36:10 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:36:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.slno=?
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [4]
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:16]
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [MIS]
2020-12-03 17:36:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.name=?
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Pigmy Withdrawal]
2020-12-03 17:36:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update gen_std_deposit_type set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Pigmy Withdrawal]
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-03]
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [17:36:10]
2020-12-03 17:36:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [4]
2020-12-03 17:36:22 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:36:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.slno=?
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [4]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:16]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [17:36:10]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [satish]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy Withdrawal]
2020-12-03 17:36:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.name=?
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Pigmy Withdraw]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [5]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:44]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [satish]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:36:22 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy Withdraw]
2020-12-03 17:37:16 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:37:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [1]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:47]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [2]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:57]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [RD]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [3]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:09]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [FD]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [5]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:44]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [satish]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy Withdraw]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [4]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:16]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [17:36:10]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [satish]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:37:16 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy Withdrawal]
2020-12-03 17:37:44 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:37:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_ where deposittyp0_.slno=?
2020-12-03 17:37:44 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-03 17:37:44 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [4]
2020-12-03 17:37:44 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:16]
2020-12-03 17:37:44 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:37:44 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:37:44 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [17:36:10]
2020-12-03 17:37:44 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [satish]
2020-12-03 17:37:44 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:37:44 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy Withdrawal]
2020-12-03 17:37:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - DELETE FROM gen_std_deposit_type WHERE slno = ?
2020-12-03 17:37:44 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-03 17:37:49 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-03 17:37:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select deposittyp0_.slno as slno1_4_, deposittyp0_.created_at as created_2_4_, deposittyp0_.created_by as created_3_4_, deposittyp0_.created_on as created_4_4_, deposittyp0_.modified_at as modified5_4_, deposittyp0_.modified_by as modified6_4_, deposittyp0_.modified_on as modified7_4_, deposittyp0_.name as name8_4_ from gen_std_deposit_type deposittyp0_
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [1]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:47]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [2]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:20:57]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [RD]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [3]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:09]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [sat]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [FD]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_] : [BIGINT]) - [5]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_] : [TIME]) - [17:21:44]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_] : [VARCHAR]) - [satish]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_] : [DATE]) - [2020-12-03]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_] : [TIME]) - [null]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_] : [VARCHAR]) - [null]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_] : [DATE]) - [null]
2020-12-03 17:37:49 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_] : [VARCHAR]) - [Pigmy Withdraw]
2020-12-03 19:50:09 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=53m17s916ms174Âµs).
2020-12-03 21:27:11 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=36m58s372ms399Âµs900ns).
2020-12-03 22:23:03 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=44m52s275ms438Âµs100ns).
