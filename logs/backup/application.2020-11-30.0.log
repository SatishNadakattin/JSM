2020-11-30 09:48:18 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1d14h32m6s218ms12Âµs400ns).
2020-11-30 13:11:14 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 6484 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 13:11:14 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 13:11:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 13:11:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 526ms. Found 16 repository interfaces.
2020-11-30 13:11:19 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 13:11:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 13:11:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 13:11:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 13:11:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 13:11:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 13:11:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 13:11:19 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 13:11:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c473d9dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:11:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5d21a217] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:11:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:11:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4455f57d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:11:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$81f644c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:11:19 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:11:20 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 13:11:20 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 13:11:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 13:11:21 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 13:11:21 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 13:11:21 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 13:11:21 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 13:11:21 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7134 ms
2020-11-30 13:11:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 13:11:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3679d92e
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3679d92e
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3679d92e
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@36aa52d2
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@ba17be6
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@633cc6b5
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5ceecfee
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5ceecfee
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5ceecfee
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@54755dd9
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@54755dd9
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@54755dd9
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@765d55d5
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@765d55d5
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@765d55d5
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5762658b
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5762658b
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5762658b
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6e4599c0
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6e4599c0
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e4599c0
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2b5c4f17
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2b5c4f17
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b5c4f17
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@41ad373
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@41ad373
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@41ad373
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@78a515e4
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@78a515e4
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8cc8cdb
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8cc8cdb
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@76b47204
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@76b47204
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@161aa04a
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@149b0577
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7be1ce6a
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7be1ce6a
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@17ba57f0
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17ba57f0
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7d70638
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7d70638
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@73809e7
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@73809e7
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@67507df
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@67507df
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@33feb805
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@33feb805
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f8aba08
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f8aba08
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@35c9a231
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@35c9a231
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@513b52af
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@513b52af
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@55651434
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@55651434
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@37ad042b
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@37ad042b
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@470d183
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@470d183
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@470d183
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e7b65d7
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6949e948
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6949e948
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6949e948
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4086d8fb
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7c781c42
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7c781c42
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@c386958
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@c386958
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3166f664
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3166f664
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@44a085e5
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44a085e5
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2152ab30
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2152ab30
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@eb6ec6
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3f018494
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f018494
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3f018494
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7c52fc81
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7c52fc81
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7c52fc81
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@75e27856
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6a756082
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7beae796
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7beae796
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7beae796
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22f4f8f2
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22f4f8f2
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22f4f8f2
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@73971965
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6ee99964
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@59bbb974
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59bbb974
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1fd9893c
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5d1e0fbb
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5d1e0fbb
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@15c487a8
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@15c487a8
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@794366a5
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@340d6d89
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@59a79443
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5f174dd2
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f174dd2
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@697173d9
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ceddaf8
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d90eeb3
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1db87583
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7fb53256
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d6d1d42
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@27329d2a
2020-11-30 13:11:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7978e022
2020-11-30 13:11:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@461c3709
2020-11-30 13:11:26 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@461c3709
2020-11-30 13:11:26 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2152ab30
2020-11-30 13:11:26 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d7bbf12] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1450131a]
2020-11-30 13:11:27 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d7bbf12] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@559af296]
2020-11-30 13:11:29 [main] DEBUG org.hibernate.SQL - create table bank_mst_relationship (slno int8 not null, created_at time, created_by varchar(255), created_on DATE, modified_at time, modified_by varchar(255), modified_on DATE, relationship varchar(255), relationship_code varchar(255), primary key (slno))
2020-11-30 13:11:29 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 13:11:29 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 13:11:29 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 13:11:29 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 13:11:29 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@559af296] for TypeConfiguration
2020-11-30 13:11:29 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 13:11:32 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7b8cb283, org.springframework.security.web.context.SecurityContextPersistenceFilter@46e6458d, org.springframework.security.web.header.HeaderWriterFilter@451af781, org.springframework.web.filter.CorsFilter@38b54694, org.springframework.security.web.authentication.logout.LogoutFilter@54f69311, com.app.config.JwtRequestFilter@7791ff50, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65d6640, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f1fec57, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7619fbe7, org.springframework.security.web.session.SessionManagementFilter@6150afc6, org.springframework.security.web.access.ExceptionTranslationFilter@521c67f0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@54bc3bcf]
2020-11-30 13:11:33 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 13:11:33 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 13:11:34 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 13:11:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 13:11:34 [main] INFO  com.app.Application - Started Application in 21.739 seconds (JVM running for 23.545)
2020-11-30 13:14:02 [http-nio-8080-exec-10] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 13:14:02 [http-nio-8080-exec-10] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 13:14:02 [http-nio-8080-exec-10] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-11-30 13:14:02 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 13:14:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-11-30 13:14:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-11-30 13:14:03 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:14:03]
2020-11-30 13:14:03 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-11-30 13:14:03 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 13:14:03 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-11-30 13:14:03 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-11-30 13:14:03 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-11-30 13:14:03 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [brother]
2020-11-30 13:14:03 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [null]
2020-11-30 13:14:03 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [2]
2020-11-30 13:15:22 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 12240 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 13:15:22 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 13:15:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 13:15:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 205ms. Found 16 repository interfaces.
2020-11-30 13:15:24 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 13:15:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 13:15:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 13:15:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 13:15:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 13:15:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 13:15:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 13:15:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 13:15:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6758e35b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:15:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6ab95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:15:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:15:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@677b8e13' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:15:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$24db4e47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:15:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:15:24 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 13:15:24 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 13:15:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 13:15:25 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 13:15:25 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 13:15:25 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 13:15:26 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 13:15:26 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3714 ms
2020-11-30 13:15:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 13:15:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6342ff7f
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6342ff7f
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6342ff7f
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@28237492
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@28ee7bee
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@54755dd9
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@765d55d5
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@765d55d5
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@765d55d5
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5762658b
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5762658b
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5762658b
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6e4599c0
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6e4599c0
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6e4599c0
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2b5c4f17
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2b5c4f17
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2b5c4f17
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@41ad373
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@41ad373
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@41ad373
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@78a515e4
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@78a515e4
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@78a515e4
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@8cc8cdb
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@8cc8cdb
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@8cc8cdb
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@76b47204
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@76b47204
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6848a051
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6848a051
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2b0b7e5a
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b0b7e5a
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6dc9da2d
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17ba57f0
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7d70638
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7d70638
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@73809e7
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@73809e7
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@67507df
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@67507df
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33feb805
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33feb805
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6f8aba08
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6f8aba08
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@35c9a231
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@35c9a231
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2d55e826
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2d55e826
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@29b40b3
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@29b40b3
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5634a861
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5634a861
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@470d183
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@470d183
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3ddeaa5f
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3ddeaa5f
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3bec5821
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3bec5821
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3bec5821
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2e3572e8
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@633fd91
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@633fd91
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@633fd91
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c386958
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3166f664
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3166f664
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@44a085e5
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@44a085e5
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2152ab30
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2152ab30
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@18137eab
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@18137eab
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@57fbc06f
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@57fbc06f
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7c52fc81
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@75e27856
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@75e27856
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@75e27856
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f3b992
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f3b992
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f3b992
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@52bf7bf6
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@22f4f8f2
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@17410c07
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@17410c07
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@17410c07
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@64f981e2
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@64f981e2
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@64f981e2
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@59bbb974
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1fd9893c
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5d1e0fbb
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d1e0fbb
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3fb9a67f
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@794366a5
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@794366a5
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@41da3aee
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@41da3aee
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@59a79443
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@67531e3a
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@21a02556
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7978e022
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7978e022
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6993c8df
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@57545c3f
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@326e0b8e
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@36baa049
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@41184371
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@34585ac9
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@76a805b7
2020-11-30 13:15:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2020-11-30 13:15:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@d7bbf12
2020-11-30 13:15:28 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@d7bbf12
2020-11-30 13:15:28 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@57fbc06f
2020-11-30 13:15:28 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@180b3819] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@733c464f]
2020-11-30 13:15:28 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@180b3819] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1b24ea2a]
2020-11-30 13:15:29 [main] DEBUG org.hibernate.SQL - create table bank_mst_relationship (slno int8 not null, created_at time, created_by varchar(255), created_on DATE, modified_at time, modified_by varchar(255), modified_on DATE, relationship varchar(255), relationship_code varchar(255), primary key (slno))
2020-11-30 13:15:29 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 13:15:29 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 13:15:29 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 13:15:29 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 13:15:29 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1b24ea2a] for TypeConfiguration
2020-11-30 13:15:29 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 13:15:31 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6fa7ce4, org.springframework.security.web.context.SecurityContextPersistenceFilter@498b611e, org.springframework.security.web.header.HeaderWriterFilter@7bb25046, org.springframework.web.filter.CorsFilter@351e86b2, org.springframework.security.web.authentication.logout.LogoutFilter@5d7ff311, com.app.config.JwtRequestFilter@141dfcf9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b56b517, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2fa47368, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a8b42a3, org.springframework.security.web.session.SessionManagementFilter@7793b55d, org.springframework.security.web.access.ExceptionTranslationFilter@4dffff9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@424a152f]
2020-11-30 13:15:32 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 13:15:32 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 13:15:33 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 13:15:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 13:15:33 [main] INFO  com.app.Application - Started Application in 11.405 seconds (JVM running for 12.105)
2020-11-30 13:17:34 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 13:17:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 13:17:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2020-11-30 13:17:34 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 13:17:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-11-30 13:17:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-11-30 13:17:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:17:34]
2020-11-30 13:17:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-11-30 13:17:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 13:17:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-11-30 13:17:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-11-30 13:17:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-11-30 13:17:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [brother]
2020-11-30 13:17:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [null]
2020-11-30 13:17:34 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [3]
2020-11-30 13:18:36 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 13:18:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-11-30 13:18:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-11-30 13:18:36 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:18:36]
2020-11-30 13:18:36 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-11-30 13:18:36 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 13:18:36 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-11-30 13:18:36 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-11-30 13:18:36 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-11-30 13:18:36 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [brother]
2020-11-30 13:18:36 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [123]
2020-11-30 13:18:36 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [4]
2020-11-30 13:21:46 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 13:21:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-11-30 13:21:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-11-30 13:21:46 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:21:46]
2020-11-30 13:21:46 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-11-30 13:21:46 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 13:21:46 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-11-30 13:21:46 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-11-30 13:21:46 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-11-30 13:21:46 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [brothers]
2020-11-30 13:21:46 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [123]
2020-11-30 13:21:46 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [5]
2020-11-30 13:22:49 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 7960 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 13:22:49 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 13:22:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 13:22:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 185ms. Found 16 repository interfaces.
2020-11-30 13:22:51 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 13:22:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 13:22:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 13:22:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 13:22:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 13:22:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 13:22:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 13:22:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 13:22:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$31b135d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:22:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9bc8db97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:22:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:22:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@58cec85b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:22:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c09d7e49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:22:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 13:22:52 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 13:22:52 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 13:22:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 13:22:53 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 13:22:53 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 13:22:53 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 13:22:53 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 13:22:53 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3935 ms
2020-11-30 13:22:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 13:22:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@54755dd9
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@54755dd9
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54755dd9
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7c3e4b1a
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2513a118
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fc1020a
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6aa3bfc
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6aa3bfc
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6aa3bfc
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@28f4f300
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@28f4f300
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@28f4f300
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2f7efd0b
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2f7efd0b
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f7efd0b
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1d61a348
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1d61a348
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d61a348
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@11f9535b
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@11f9535b
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@11f9535b
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7301eebe
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7301eebe
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7301eebe
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@436bd4df
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@436bd4df
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@436bd4df
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67f77f6e
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67f77f6e
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1d408060
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1d408060
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@79518e00
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@79518e00
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@732f6050
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f1dd5b4
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6e3ecf5c
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6e3ecf5c
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5f14761c
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5f14761c
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@724b939e
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@724b939e
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@462abec3
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@462abec3
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3dc95b8b
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3dc95b8b
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3003827c
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3003827c
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1115433e
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1115433e
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@119b0892
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@119b0892
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@ea52184
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@ea52184
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@210d2a6c
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@210d2a6c
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@77c10a5f
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77c10a5f
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@355c94be
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@355c94be
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@355c94be
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@157ec23b
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@47ac613b
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@47ac613b
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@47ac613b
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60a19573
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4db60246
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4db60246
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@34d45ec0
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@34d45ec0
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ce443f9
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ce443f9
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7523a3dc
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7523a3dc
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6bccd036
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6bccd036
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@cb39552
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6749fe50
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6749fe50
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6749fe50
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@bbd4791
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@bbd4791
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@bbd4791
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6ee99964
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@46f902e0
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7165d530
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7165d530
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7165d530
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7219ac49
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7219ac49
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7219ac49
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@625a9c5d
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@9b76b60
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7c011174
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7c011174
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@40f35e52
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@64920dc2
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@64920dc2
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@51ab1ee3
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51ab1ee3
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28757abd
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@138aa3cc
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@ceddaf8
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@76a805b7
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76a805b7
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@56382bc9
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c51782d
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@77bc2e16
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48e8c32a
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@73fbdf68
2020-11-30 13:22:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@73fbdf68
2020-11-30 13:22:55 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6bccd036
2020-11-30 13:22:55 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66bf40e5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2291d9a0]
2020-11-30 13:22:56 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66bf40e5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@b5ac0c1]
2020-11-30 13:22:57 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 13:22:57 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 13:22:57 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 13:22:57 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 13:22:57 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@b5ac0c1] for TypeConfiguration
2020-11-30 13:22:57 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 13:22:59 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@408d945b, org.springframework.security.web.context.SecurityContextPersistenceFilter@4ac7856f, org.springframework.security.web.header.HeaderWriterFilter@7bb25046, org.springframework.web.filter.CorsFilter@15ad5acb, org.springframework.security.web.authentication.logout.LogoutFilter@537451d5, com.app.config.JwtRequestFilter@141dfcf9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@297c3a43, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b56b517, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@59c862af, org.springframework.security.web.session.SessionManagementFilter@7793b55d, org.springframework.security.web.access.ExceptionTranslationFilter@4dffff9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3265995e]
2020-11-30 13:22:59 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 13:22:59 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 13:23:00 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 13:23:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 13:23:00 [main] INFO  com.app.Application - Started Application in 11.279 seconds (JVM running for 12.029)
2020-11-30 13:23:03 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 13:23:03 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 13:23:03 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2020-11-30 13:23:03 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 13:23:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-11-30 13:23:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-11-30 13:23:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:23:03]
2020-11-30 13:23:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-11-30 13:23:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 13:23:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-11-30 13:23:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-11-30 13:23:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-11-30 13:23:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [brotherss]
2020-11-30 13:23:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [123]
2020-11-30 13:23:03 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [6]
2020-11-30 14:10:07 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 6768 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 14:10:07 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 14:10:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 14:10:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 165ms. Found 16 repository interfaces.
2020-11-30 14:10:10 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 14:10:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 14:10:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 14:10:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 14:10:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 14:10:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 14:10:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 14:10:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 14:10:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9b5a9d04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 14:10:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3408653e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 14:10:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 14:10:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4c27d39d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 14:10:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$58dd07f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 14:10:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 14:10:11 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 14:10:11 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 14:10:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 14:10:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 14:10:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 14:10:11 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 14:10:12 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 14:10:12 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4026 ms
2020-11-30 14:10:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 14:10:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@403c3a01
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@403c3a01
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@403c3a01
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ceecfee
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1b5a1d85
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@f1f7db2
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2513a118
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2513a118
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2513a118
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2629d5dc
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2629d5dc
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2629d5dc
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7dffda8b
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7dffda8b
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7dffda8b
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6ca8fcf3
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6ca8fcf3
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6ca8fcf3
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6801b414
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6801b414
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6801b414
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d2291de
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d2291de
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d2291de
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1e236278
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1e236278
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e236278
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d6ccc97
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d6ccc97
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@149b0577
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@149b0577
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7be1ce6a
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7be1ce6a
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1d408060
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3481ff98
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@732f6050
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@732f6050
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5f96f6a2
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5f96f6a2
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@341b13a8
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@341b13a8
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@37854b34
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@37854b34
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7ff19c33
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7ff19c33
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7a4d582c
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7a4d582c
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d1ff6b1
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d1ff6b1
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7d247660
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7d247660
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2b0dc227
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2b0dc227
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7f9fc8bd
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f9fc8bd
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1a500561
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1a500561
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4086d8fb
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4086d8fb
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4086d8fb
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77c10a5f
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@355c94be
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@355c94be
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@355c94be
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@157ec23b
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@47ac613b
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@47ac613b
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@134ff8f8
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@134ff8f8
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3902bd2c
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3902bd2c
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@727320fa
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@727320fa
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51a18b21
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51a18b21
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7523a3dc
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6bccd036
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6bccd036
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6bccd036
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2a53f215
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2a53f215
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2a53f215
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@261db982
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@bbd4791
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6ee99964
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6ee99964
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6ee99964
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@361abd01
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@361abd01
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@361abd01
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7165d530
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1b2df3aa
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2eed37f4
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2eed37f4
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@127705e4
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@480b57e2
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@480b57e2
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5dc0ff7d
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5dc0ff7d
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@493ac8d3
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2b38b1f
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3c8a7e38
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2f894ad9
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2f894ad9
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57545c3f
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@326e0b8e
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@36baa049
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41184371
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@34585ac9
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76a805b7
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2020-11-30 14:10:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@167381c7
2020-11-30 14:10:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@47acd13b
2020-11-30 14:10:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@47acd13b
2020-11-30 14:10:14 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@51a18b21
2020-11-30 14:10:14 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@236eccd1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5d512ddb]
2020-11-30 14:10:15 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@236eccd1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7c1503a3]
2020-11-30 14:10:15 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 14:10:15 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 14:10:15 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 14:10:15 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 14:10:16 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7c1503a3] for TypeConfiguration
2020-11-30 14:10:16 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 14:10:17 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'relationship'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'relationshipRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.lang.Iterable com.app.repository.RelationshipRepository.getRelationship()! No property getRelationship found for type Relationship!
2020-11-30 14:10:17 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-11-30 14:10:17 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-11-30 14:10:17 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-11-30 14:10:17 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-11-30 14:10:17 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 14:10:17 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7c1503a3] for TypeConfiguration
2020-11-30 14:10:17 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7ac1b6c0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7c1503a3]
2020-11-30 14:10:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-11-30 14:10:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-11-30 14:10:17 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-11-30 14:10:17 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'relationship'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'relationshipRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.lang.Iterable com.app.repository.RelationshipRepository.getRelationship()! No property getRelationship found for type Relationship!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'relationship'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'relationshipRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.lang.Iterable com.app.repository.RelationshipRepository.getRelationship()! No property getRelationship found for type Relationship!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'relationshipRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.lang.Iterable com.app.repository.RelationshipRepository.getRelationship()! No property getRelationship found for type Relationship!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.lang.Iterable com.app.repository.RelationshipRepository.getRelationship()! No property getRelationship found for type Relationship!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property getRelationship found for type Relationship!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:93)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-11-30 14:14:01 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 4476 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 14:14:01 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 14:14:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 14:14:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 315ms. Found 16 repository interfaces.
2020-11-30 14:14:03 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 14:14:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 14:14:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 14:14:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 14:14:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 14:14:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 14:14:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 14:14:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 14:14:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3e693d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 14:14:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9c945c0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 14:14:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 14:14:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@131fcb6f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 14:14:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c168febf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 14:14:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 14:14:04 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 14:14:04 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 14:14:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 14:14:05 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 14:14:05 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 14:14:05 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 14:14:05 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 14:14:05 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4072 ms
2020-11-30 14:14:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 14:14:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2dfb885e
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2dfb885e
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2dfb885e
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3679d92e
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@36aa52d2
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ba17be6
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@403c3a01
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@403c3a01
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@403c3a01
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@28ee7bee
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@28ee7bee
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@28ee7bee
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4462efe1
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4462efe1
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4462efe1
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2bfb583b
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2bfb583b
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2bfb583b
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2596d7f4
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2596d7f4
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2596d7f4
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3d1f558a
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3d1f558a
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3d1f558a
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@69f0b0f4
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@69f0b0f4
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@69f0b0f4
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@177c41d7
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@177c41d7
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@51c8f62c
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@51c8f62c
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@44fff386
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@44fff386
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@76b47204
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@161aa04a
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4a901445
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a901445
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6dc9da2d
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6dc9da2d
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2ddb3ae8
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2ddb3ae8
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fbc1bb
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fbc1bb
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48df4071
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48df4071
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@692dba54
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@692dba54
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48eb001a
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48eb001a
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@52b3bf03
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@52b3bf03
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49d30c6f
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49d30c6f
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1a3e8e24
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1a3e8e24
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@50448409
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50448409
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@30b975ad
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@30b975ad
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@30b975ad
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@470d183
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3ddeaa5f
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ddeaa5f
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ddeaa5f
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6949e948
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2e3572e8
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e3572e8
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@633fd91
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@633fd91
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44d64d4e
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44d64d4e
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@60d6fdd4
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60d6fdd4
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@619f2afc
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@619f2afc
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2152ab30
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@18137eab
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@18137eab
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@18137eab
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@57fbc06f
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@57fbc06f
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@57fbc06f
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2806d6da
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@75e27856
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1f3b992
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f3b992
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1f3b992
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52bf7bf6
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52bf7bf6
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52bf7bf6
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@22f4f8f2
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@73971965
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@64f981e2
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@64f981e2
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@59bbb974
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@21da4b5f
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21da4b5f
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@127705e4
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@127705e4
2020-11-30 14:14:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@15c487a8
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@794366a5
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@41da3aee
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@138aa3cc
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@138aa3cc
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5f174dd2
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1945113f
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45aca496
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@697173d9
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@ceddaf8
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3d90eeb3
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1db87583
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7fb53256
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7e3d7dd
2020-11-30 14:14:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7e3d7dd
2020-11-30 14:14:07 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@619f2afc
2020-11-30 14:14:07 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1450131a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f7eee96]
2020-11-30 14:14:07 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1450131a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5edc3e29]
2020-11-30 14:14:08 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 14:14:08 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 14:14:08 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 14:14:08 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 14:14:08 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5edc3e29] for TypeConfiguration
2020-11-30 14:14:08 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 14:14:10 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39ead1b7, org.springframework.security.web.context.SecurityContextPersistenceFilter@13137835, org.springframework.security.web.header.HeaderWriterFilter@76ed7573, org.springframework.web.filter.CorsFilter@27ec74a3, org.springframework.security.web.authentication.logout.LogoutFilter@4ac7856f, com.app.config.JwtRequestFilter@799fb45e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22002459, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4dffff9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@35ff072c, org.springframework.security.web.session.SessionManagementFilter@65d6640, org.springframework.security.web.access.ExceptionTranslationFilter@32e65852, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3c3cd7a5]
2020-11-30 14:14:10 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 14:14:11 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 14:14:11 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 14:14:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 14:14:11 [main] INFO  com.app.Application - Started Application in 10.695 seconds (JVM running for 11.443)
2020-11-30 14:14:20 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 14:14:20 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 14:14:20 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-11-30 14:14:20 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 14:14:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:18:36]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:21:46]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothers]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [4]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:23:03]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotherss]
2020-11-30 14:14:21 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 15:33:39 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h4m2s711ms854Âµs600ns).
2020-11-30 15:58:15 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 11452 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 15:58:15 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 15:58:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 15:58:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 255ms. Found 16 repository interfaces.
2020-11-30 15:58:17 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 15:58:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 15:58:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 15:58:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 15:58:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 15:58:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 15:58:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 15:58:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 15:58:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bbc8f22d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 15:58:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5476ba67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 15:58:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 15:58:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@629f066f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 15:58:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$794b5d19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 15:58:18 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 15:58:18 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 15:58:18 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 15:58:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 15:58:19 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 15:58:19 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 15:58:19 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 15:58:19 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 15:58:19 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3947 ms
2020-11-30 15:58:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 15:58:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@f1f7db2
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@f1f7db2
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@f1f7db2
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2db4ad1
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bfb583b
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5762658b
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6e4599c0
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6e4599c0
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6e4599c0
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2b5c4f17
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2b5c4f17
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b5c4f17
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@41ad373
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@41ad373
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@41ad373
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@78a515e4
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@78a515e4
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@78a515e4
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@8cc8cdb
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@8cc8cdb
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@8cc8cdb
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@76b47204
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@76b47204
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@76b47204
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6848a051
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6848a051
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6848a051
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b0b7e5a
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b0b7e5a
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68a78f3c
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68a78f3c
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3c91530d
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c91530d
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6fbc1bb
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@73809e7
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@67507df
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@67507df
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@33feb805
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@33feb805
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6f8aba08
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6f8aba08
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35c9a231
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35c9a231
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2d55e826
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2d55e826
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@29b40b3
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@29b40b3
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4fdca00a
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4fdca00a
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1a3e8e24
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1a3e8e24
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3e7b65d7
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3e7b65d7
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3bec5821
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3bec5821
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@176555c
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@176555c
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@97a145b
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@97a145b
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@97a145b
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44d64d4e
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@60d6fdd4
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@60d6fdd4
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@60d6fdd4
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44a085e5
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2152ab30
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2152ab30
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@18137eab
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@18137eab
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@57fbc06f
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@57fbc06f
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2806d6da
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2806d6da
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f4c88f9
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f4c88f9
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f3b992
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@52bf7bf6
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@52bf7bf6
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@52bf7bf6
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@40a72ecd
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@40a72ecd
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@40a72ecd
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@257ef9ed
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@64f981e2
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@12f49ca8
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@12f49ca8
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@12f49ca8
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@21da4b5f
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@21da4b5f
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@21da4b5f
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5d1e0fbb
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3fb9a67f
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@794366a5
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@794366a5
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@340d6d89
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@59a79443
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@59a79443
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2e766822
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2e766822
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21a02556
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@10a98392
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3d90eeb3
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@15f35bc3
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@15f35bc3
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@56382bc9
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c51782d
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77bc2e16
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@48e8c32a
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@20a7953c
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@32f1fafe
2020-11-30 15:58:21 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@32f1fafe
2020-11-30 15:58:21 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4f4c88f9
2020-11-30 15:58:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2291d9a0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5e26f1ed]
2020-11-30 15:58:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2291d9a0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@224c7de4]
2020-11-30 15:58:23 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 15:58:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 15:58:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 15:58:23 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 15:58:23 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@224c7de4] for TypeConfiguration
2020-11-30 15:58:23 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 15:58:26 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b56d8a7, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e4b5da1, org.springframework.security.web.header.HeaderWriterFilter@af3295f, org.springframework.web.filter.CorsFilter@13f36d75, org.springframework.security.web.authentication.logout.LogoutFilter@27ec74a3, com.app.config.JwtRequestFilter@ad5cffa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ae2c01b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54bc3bcf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6de5ad56, org.springframework.security.web.session.SessionManagementFilter@6f428e6e, org.springframework.security.web.access.ExceptionTranslationFilter@72ec16f8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5ca4c88a]
2020-11-30 15:58:26 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 15:58:26 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 15:58:27 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 15:58:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 15:58:27 [main] INFO  com.app.Application - Started Application in 12.587 seconds (JVM running for 13.558)
2020-11-30 15:59:34 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 15:59:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 15:59:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2020-11-30 15:59:34 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 15:59:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 15:59:35 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 15:59:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 15:59:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 15:59:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 15:59:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 15:59:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 15:59:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 15:59:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 15:59:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 15:59:35 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-11-30 15:59:57 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 15:59:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 15:59:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-11-30 15:59:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-11-30 15:59:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:18:36]
2020-11-30 15:59:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 15:59:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 15:59:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 15:59:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 15:59:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 15:59:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 15:59:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 16:05:32 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9532 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 16:05:32 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 16:05:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 16:05:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 176ms. Found 16 repository interfaces.
2020-11-30 16:05:34 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 16:05:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 16:05:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 16:05:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 16:05:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 16:05:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 16:05:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 16:05:34 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 16:05:35 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d22304d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 16:05:35 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f5cff887] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 16:05:35 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 16:05:35 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1a5f7e7c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 16:05:35 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$1aa49b39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 16:05:35 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 16:05:35 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 16:05:35 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 16:05:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 16:05:36 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 16:05:36 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 16:05:36 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 16:05:36 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 16:05:36 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3711 ms
2020-11-30 16:05:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 16:05:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@41a374be
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@41a374be
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a374be
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e236278
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7301eebe
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6a12c7a8
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5740ff5e
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5740ff5e
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5740ff5e
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3119cf6f
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3119cf6f
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3119cf6f
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3481ff98
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3481ff98
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3481ff98
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@732f6050
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@732f6050
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732f6050
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f96f6a2
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5f96f6a2
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f96f6a2
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@341b13a8
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@341b13a8
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@341b13a8
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@37854b34
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@37854b34
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@37854b34
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7ff19c33
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7ff19c33
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7a4d582c
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7a4d582c
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4d1ff6b1
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4d1ff6b1
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3003827c
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@656f62dc
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5a8c93
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5a8c93
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1c7350b0
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1c7350b0
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2b0dc227
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b0dc227
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a334bac
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a334bac
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c854752
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c854752
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@210d2a6c
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@210d2a6c
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77c10a5f
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77c10a5f
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@355c94be
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@355c94be
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4db60246
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4db60246
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@727320fa
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@727320fa
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@51a18b21
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51a18b21
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@766a49c7
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@766a49c7
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@766a49c7
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6bccd036
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a53f215
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a53f215
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a53f215
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6749fe50
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@bbd4791
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@bbd4791
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6ee99964
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ee99964
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@361abd01
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@361abd01
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1fd9893c
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1fd9893c
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@551e4c6d
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@551e4c6d
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2eed37f4
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@673c4f6e
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@673c4f6e
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@673c4f6e
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@480b57e2
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@480b57e2
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@480b57e2
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1ee47d9e
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@64920dc2
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2b38b1f
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2b38b1f
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2b38b1f
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28757abd
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28757abd
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28757abd
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@138aa3cc
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5f174dd2
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7fb53256
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fb53256
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7978e022
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@41184371
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@41184371
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@591a4f8e
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@591a4f8e
2020-11-30 16:05:37 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7c51782d
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@20a7953c
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@71b639d0
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@717d7587
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@717d7587
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b7aa898
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@41b13f3d
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c0777b5
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2489e84a
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2a39aa2b
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62b93086
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@254449bb
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4e642ee1
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7061622
2020-11-30 16:05:38 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7061622
2020-11-30 16:05:38 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@551e4c6d
2020-11-30 16:05:38 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e377967] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4dadd690]
2020-11-30 16:05:38 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e377967] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2f9b21d6]
2020-11-30 16:05:39 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 16:05:39 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 16:05:39 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 16:05:39 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 16:05:39 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2f9b21d6] for TypeConfiguration
2020-11-30 16:05:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 16:05:41 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5e360c3b, org.springframework.security.web.context.SecurityContextPersistenceFilter@3245efdb, org.springframework.security.web.header.HeaderWriterFilter@77a4bac, org.springframework.web.filter.CorsFilter@24ac6fef, org.springframework.security.web.authentication.logout.LogoutFilter@2d3c501b, com.app.config.JwtRequestFilter@1fe05fff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@24d7657b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6879e983, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3cb49121, org.springframework.security.web.session.SessionManagementFilter@627d35ff, org.springframework.security.web.access.ExceptionTranslationFilter@924f3f1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@601d9f3a]
2020-11-30 16:05:42 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 16:05:42 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 16:05:42 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 16:05:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 16:05:42 [main] INFO  com.app.Application - Started Application in 10.686 seconds (JVM running for 11.596)
2020-11-30 16:06:08 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 16:06:08 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 16:06:08 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 31 ms
2020-11-30 16:06:08 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 16:06:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:18:36]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:21:46]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothers]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [4]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:23:03]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotherss]
2020-11-30 16:06:09 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 16:06:21 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 16:06:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 16:06:21 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotherss]
2020-11-30 16:06:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [4]
2020-11-30 16:06:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:23:03]
2020-11-30 16:06:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 16:06:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 16:06:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 16:06:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 16:06:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 16:06:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotherss]
2020-11-30 16:06:21 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 16:06:43 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 16:06:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 16:06:43 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotherss]
2020-11-30 16:06:43 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [4]
2020-11-30 16:06:43 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:23:03]
2020-11-30 16:06:43 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 16:06:43 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 16:06:43 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 16:06:43 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 16:06:43 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 16:06:43 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotherss]
2020-11-30 16:06:43 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 16:06:49 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 16:06:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 16:06:49 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brothersss]
2020-11-30 16:06:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-11-30 16:06:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-11-30 16:06:49 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [16:06:49]
2020-11-30 16:06:49 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-11-30 16:06:49 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 16:06:49 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-11-30 16:06:49 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-11-30 16:06:49 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-11-30 16:06:49 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [brothersss]
2020-11-30 16:06:49 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [123]
2020-11-30 16:06:49 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [7]
2020-11-30 16:06:54 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 16:06:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 16:06:54 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brothersss]
2020-11-30 16:06:54 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [5]
2020-11-30 16:06:54 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [16:06:49]
2020-11-30 16:06:54 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 16:06:54 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 16:06:54 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 16:06:54 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 16:06:54 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 16:06:54 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothersss]
2020-11-30 16:06:54 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 16:11:31 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 16:11:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 16:11:31 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brothersss]
2020-11-30 16:11:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [5]
2020-11-30 16:11:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [16:06:49]
2020-11-30 16:11:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 16:11:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 16:11:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 16:11:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 16:11:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 16:11:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothersss]
2020-11-30 16:11:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 16:11:39 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 16:11:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 16:11:39 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brothe]
2020-11-30 16:11:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-11-30 16:11:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-11-30 16:11:39 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [16:11:39]
2020-11-30 16:11:39 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-11-30 16:11:39 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 16:11:39 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-11-30 16:11:39 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-11-30 16:11:39 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-11-30 16:11:39 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [brothe]
2020-11-30 16:11:39 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [Bro]
2020-11-30 16:11:39 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [8]
2020-11-30 16:30:06 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 11760 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 16:30:06 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 16:30:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 16:30:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 208ms. Found 16 repository interfaces.
2020-11-30 16:30:09 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 16:30:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 16:30:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 16:30:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 16:30:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 16:30:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 16:30:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 16:30:09 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 16:30:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$962d7031] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 16:30:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$2edb386b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 16:30:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 16:30:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@49aa766b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 16:30:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$53afdb1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 16:30:09 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 16:30:10 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 16:30:10 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 16:30:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 16:30:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 16:30:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 16:30:11 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 16:30:11 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 16:30:11 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4444 ms
2020-11-30 16:30:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 16:30:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2bfb583b
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2bfb583b
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2bfb583b
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5762658b
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@42a0501e
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7dffda8b
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6ca8fcf3
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6ca8fcf3
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6ca8fcf3
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6801b414
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6801b414
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6801b414
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@d2291de
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@d2291de
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@d2291de
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1e236278
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1e236278
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e236278
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4d6ccc97
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4d6ccc97
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d6ccc97
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@149b0577
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@149b0577
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@149b0577
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7be1ce6a
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7be1ce6a
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7be1ce6a
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@17ba57f0
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@17ba57f0
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7d70638
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7d70638
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@73809e7
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@73809e7
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@290e8cab
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@341b13a8
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@37854b34
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37854b34
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7ff19c33
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ff19c33
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7a4d582c
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7a4d582c
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4d1ff6b1
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4d1ff6b1
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d247660
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d247660
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@513b52af
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@513b52af
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ed4a7e4
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ed4a7e4
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5634a861
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5634a861
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@210d2a6c
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@210d2a6c
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7c781c42
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c781c42
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@c386958
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c386958
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3166f664
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3166f664
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3166f664
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@66f28a1f
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@df921b1
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@df921b1
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@df921b1
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3902bd2c
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@727320fa
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@727320fa
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@51a18b21
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a18b21
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@766a49c7
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@766a49c7
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6a756082
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a756082
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7beae796
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7beae796
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@261db982
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@73971965
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@73971965
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@73971965
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59c70ceb
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59c70ceb
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59c70ceb
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@59bbb974
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1fd9893c
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@551e4c6d
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@551e4c6d
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@551e4c6d
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3fb9a67f
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3fb9a67f
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3fb9a67f
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@673c4f6e
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7c011174
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1ee47d9e
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ee47d9e
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64920dc2
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@51ab1ee3
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@51ab1ee3
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@10a98392
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10a98392
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1945113f
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@ceddaf8
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2f894ad9
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6ba060f3
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6ba060f3
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48e8c32a
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@20a7953c
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@57c00115
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@411a5965
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4fe533ff
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5377414a
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4e83a98
2020-11-30 16:30:12 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@17aa8a11
2020-11-30 16:30:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4c51077d
2020-11-30 16:30:13 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4c51077d
2020-11-30 16:30:13 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7beae796
2020-11-30 16:30:13 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a6c7f42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a515e5d]
2020-11-30 16:30:13 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a6c7f42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@60bf494c]
2020-11-30 16:30:14 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 16:30:14 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 16:30:14 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 16:30:14 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 16:30:14 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@60bf494c] for TypeConfiguration
2020-11-30 16:30:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 16:30:16 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@44106e25, org.springframework.security.web.context.SecurityContextPersistenceFilter@335cdd2, org.springframework.security.web.header.HeaderWriterFilter@432f4626, org.springframework.web.filter.CorsFilter@57a5b03, org.springframework.security.web.authentication.logout.LogoutFilter@54e94de9, com.app.config.JwtRequestFilter@7286827b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@60a99f3d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12e3f4ae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5649f55, org.springframework.security.web.session.SessionManagementFilter@4b56b517, org.springframework.security.web.access.ExceptionTranslationFilter@2ac9e53c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4bb9f7d4]
2020-11-30 16:30:16 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 16:30:16 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 16:30:17 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 16:30:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 16:30:17 [main] INFO  com.app.Application - Started Application in 10.992 seconds (JVM running for 11.809)
2020-11-30 16:30:58 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 16:30:58 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 16:30:58 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2020-11-30 16:30:58 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 16:30:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 16:30:59 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 16:30:59 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 16:30:59 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 16:30:59 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 16:30:59 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 16:30:59 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 16:30:59 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 16:30:59 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 16:30:59 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 16:30:59 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-11-30 16:31:07 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 16:31:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 16:31:07 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [10]
2020-11-30 16:31:37 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 16:31:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 16:31:37 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brothe]
2020-11-30 16:31:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [6]
2020-11-30 16:31:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [16:11:39]
2020-11-30 16:31:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 16:31:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 16:31:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 16:31:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 16:31:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 16:31:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothe]
2020-11-30 16:31:37 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Bro]
2020-11-30 17:07:45 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 7660 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 17:07:45 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 17:07:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 17:07:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 330ms. Found 16 repository interfaces.
2020-11-30 17:07:48 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 17:07:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 17:07:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:07:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:07:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:07:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:07:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:07:48 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:07:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$62fc8654] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:07:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$fbaa4e8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:07:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:07:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@393881f0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:07:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$207ef140] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:07:48 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:07:48 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 17:07:48 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 17:07:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 17:07:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 17:07:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 17:07:49 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 17:07:50 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 17:07:50 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4253 ms
2020-11-30 17:07:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 17:07:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@161aa04a
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@161aa04a
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@161aa04a
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@149b0577
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@67f77f6e
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3119cf6f
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3481ff98
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3481ff98
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3481ff98
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@732f6050
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@732f6050
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@732f6050
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5f96f6a2
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5f96f6a2
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5f96f6a2
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@341b13a8
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@341b13a8
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@341b13a8
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@37854b34
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@37854b34
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@37854b34
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7ff19c33
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7ff19c33
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ff19c33
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7a4d582c
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7a4d582c
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7a4d582c
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d1ff6b1
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d1ff6b1
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7d247660
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7d247660
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@513b52af
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@513b52af
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@119b0892
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1c7350b0
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2b0dc227
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2b0dc227
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2a334bac
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2a334bac
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3c854752
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3c854752
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@210d2a6c
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@210d2a6c
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@77c10a5f
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@77c10a5f
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@355c94be
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@355c94be
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1dd74143
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1dd74143
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@66f28a1f
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@66f28a1f
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3ce443f9
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3ce443f9
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@766a49c7
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@766a49c7
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6a756082
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6a756082
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7beae796
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7beae796
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7beae796
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@261db982
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@73971965
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@73971965
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@73971965
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ee99964
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@361abd01
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@361abd01
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1fd9893c
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1fd9893c
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@551e4c6d
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@551e4c6d
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3fb9a67f
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3fb9a67f
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3f36e8d1
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3f36e8d1
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@480b57e2
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1ee47d9e
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1ee47d9e
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1ee47d9e
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@493ac8d3
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@493ac8d3
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@493ac8d3
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@51ab1ee3
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@28757abd
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@30839e44
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@30839e44
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@30839e44
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ceddaf8
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ceddaf8
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ceddaf8
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7fb53256
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7978e022
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@41184371
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41184371
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15f35bc3
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7c51782d
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7c51782d
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5377414a
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5377414a
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71b639d0
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1ee27d73
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@316acbb5
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4e642ee1
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4e642ee1
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5731d3a
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6a0f2853
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1eff3cfb
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@70c69586
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6dc1dc69
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e9f2c32
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19e0dffe
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d4e13e1
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3e377967
2020-11-30 17:07:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3e377967
2020-11-30 17:07:51 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3f36e8d1
2020-11-30 17:07:51 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4751e8b9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7af443a3]
2020-11-30 17:07:52 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4751e8b9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5b2b8d86]
2020-11-30 17:07:53 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 17:07:53 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 17:07:53 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 17:07:53 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 17:07:53 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5b2b8d86] for TypeConfiguration
2020-11-30 17:07:53 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 17:07:55 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e9a836, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c3cd7a5, org.springframework.security.web.header.HeaderWriterFilter@4ae2c01b, org.springframework.web.filter.CorsFilter@124ff64d, org.springframework.security.web.authentication.logout.LogoutFilter@4d75c604, com.app.config.JwtRequestFilter@117fb9ba, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6eb5b9e7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27ec74a3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75aa7703, org.springframework.security.web.session.SessionManagementFilter@d3d5094, org.springframework.security.web.access.ExceptionTranslationFilter@2e4b5da1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@cfb94fd]
2020-11-30 17:07:55 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 17:07:55 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 17:07:55 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 17:07:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 17:07:56 [main] INFO  com.app.Application - Started Application in 10.931 seconds (JVM running for 11.768)
2020-11-30 17:08:39 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 17:08:39 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 17:08:39 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-11-30 17:08:39 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:08:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:08:39 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:08:39 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:08:39 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:08:39 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:08:39 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:08:39 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:08:39 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:08:39 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:08:39 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 17:08:39 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-11-30 17:08:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 17:08:40 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brothe]
2020-11-30 17:08:40 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [6]
2020-11-30 17:08:40 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [16:11:39]
2020-11-30 17:08:40 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:08:40 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:08:40 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:08:40 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:08:40 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:08:40 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothe]
2020-11-30 17:08:40 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Bro]
2020-11-30 17:08:51 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:08:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-11-30 17:08:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brothe]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [6]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [16:11:39]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothe]
2020-11-30 17:08:51 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Bro]
2020-11-30 17:08:56 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:08:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-11-30 17:08:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brothee]
2020-11-30 17:08:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update bank_mst_relationship set relationshipCode=?, set relationship=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Bror]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brothee]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [admin]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-11-30]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [17:08:56]
2020-11-30 17:08:56 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [BIGINT] - [1]
2020-11-30 17:08:56 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: syntax error at or near "relationship"
  Position: 59
2020-11-30 17:09:34 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:09:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:09:34 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [10]
2020-11-30 17:10:03 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:10:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-11-30 17:10:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brothee]
2020-11-30 17:10:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - update bank_mst_relationship set relationshipCode=?, set relationship=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Bror]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brothee]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [admin]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-11-30]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [17:10:03]
2020-11-30 17:10:03 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [BIGINT] - [1]
2020-11-30 17:10:03 [http-nio-8080-exec-5] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: syntax error at or near "relationship"
  Position: 59
2020-11-30 17:10:13 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:10:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-11-30 17:10:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brothe]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [6]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [16:11:39]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothe]
2020-11-30 17:10:13 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Bro]
2020-11-30 17:10:45 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:10:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:10:45 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [10]
2020-11-30 17:12:48 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9160 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 17:12:48 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 17:12:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 17:12:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 184ms. Found 16 repository interfaces.
2020-11-30 17:12:50 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 17:12:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 17:12:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:12:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:12:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:12:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:12:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:12:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:12:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f321840f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:12:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8bcf4c49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:12:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:12:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3b569985' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:12:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b0a3eefb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:12:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:12:51 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 17:12:51 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 17:12:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 17:12:52 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 17:12:52 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 17:12:52 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 17:12:52 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 17:12:52 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3721 ms
2020-11-30 17:12:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 17:12:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@177c41d7
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@177c41d7
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@177c41d7
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@78a515e4
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@41a374be
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1e236278
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4d6ccc97
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4d6ccc97
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d6ccc97
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@149b0577
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@149b0577
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@149b0577
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7be1ce6a
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7be1ce6a
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7be1ce6a
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@17ba57f0
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@17ba57f0
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@17ba57f0
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7d70638
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7d70638
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d70638
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@73809e7
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@73809e7
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@73809e7
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@67507df
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@67507df
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@67507df
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33feb805
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33feb805
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f8aba08
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f8aba08
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@35c9a231
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@35c9a231
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@45e9b12d
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4d1ff6b1
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7d247660
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7d247660
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@513b52af
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@513b52af
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4ed4a7e4
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4ed4a7e4
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5634a861
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5634a861
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@75e09567
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@75e09567
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e7b65d7
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e7b65d7
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6949e948
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6949e948
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2e3572e8
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2e3572e8
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@66f28a1f
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@66f28a1f
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2152ab30
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2152ab30
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@18137eab
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@18137eab
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@57fbc06f
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57fbc06f
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57fbc06f
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c52fc81
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@75e27856
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@75e27856
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@75e27856
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6a756082
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7beae796
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7beae796
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@22f4f8f2
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@22f4f8f2
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@17410c07
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17410c07
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@64f981e2
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@64f981e2
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@12f49ca8
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@12f49ca8
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@44be69aa
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5d1e0fbb
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d1e0fbb
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5d1e0fbb
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5562c2c9
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5562c2c9
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5562c2c9
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@794366a5
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@340d6d89
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5dc0ff7d
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5dc0ff7d
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5dc0ff7d
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@67531e3a
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@67531e3a
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@67531e3a
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@51ab1ee3
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@28757abd
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1945113f
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1945113f
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ceddaf8
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2f894ad9
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f894ad9
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@34585ac9
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@34585ac9
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@167381c7
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@591a4f8e
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@57c00115
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7ce85af2
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ce85af2
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@47311277
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7930ffa9
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e60b459
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@717d7587
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3e906375
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40230eb9
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b7aa898
2020-11-30 17:12:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@41b13f3d
2020-11-30 17:12:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5856dbe4
2020-11-30 17:12:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5856dbe4
2020-11-30 17:12:54 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@12f49ca8
2020-11-30 17:12:54 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43ecfeb5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51efb731]
2020-11-30 17:12:54 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43ecfeb5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@77cca767]
2020-11-30 17:12:55 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 17:12:55 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 17:12:55 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 17:12:55 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 17:12:55 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@77cca767] for TypeConfiguration
2020-11-30 17:12:55 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 17:12:57 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2aa811f9, org.springframework.security.web.context.SecurityContextPersistenceFilter@2cff03cf, org.springframework.security.web.header.HeaderWriterFilter@614d7fbf, org.springframework.web.filter.CorsFilter@66abb2fa, org.springframework.security.web.authentication.logout.LogoutFilter@1cab19e2, com.app.config.JwtRequestFilter@546083d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19e2db7c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27dc81be, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d4da729, org.springframework.security.web.session.SessionManagementFilter@762cdf46, org.springframework.security.web.access.ExceptionTranslationFilter@537451d5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@148fca83]
2020-11-30 17:12:57 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 17:12:57 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 17:12:58 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 17:12:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 17:12:58 [main] INFO  com.app.Application - Started Application in 10.496 seconds (JVM running for 11.295)
2020-11-30 17:13:15 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 17:13:15 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 17:13:15 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2020-11-30 17:13:16 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:13:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:13:16 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:13:16 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:13:16 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:13:16 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:13:16 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:13:16 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:13:16 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:13:16 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:13:16 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 17:13:16 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-11-30 17:13:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 17:13:16 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotheoop]
2020-11-30 17:13:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update bank_mst_relationship set relationshipCode=?, set relationship=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-11-30 17:13:17 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Brorr]
2020-11-30 17:13:17 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brotheoop]
2020-11-30 17:13:17 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [admin]
2020-11-30 17:13:17 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-11-30]
2020-11-30 17:13:17 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [17:13:16]
2020-11-30 17:13:17 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [BIGINT] - [1]
2020-11-30 17:13:17 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: syntax error at or near "relationship"
  Position: 59
2020-11-30 17:17:42 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 116 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 17:17:42 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 17:17:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 17:17:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 200ms. Found 16 repository interfaces.
2020-11-30 17:17:45 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 17:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 17:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:17:45 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:17:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3356dd18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:17:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$cc04a552] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:17:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:17:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@57540fd0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:17:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f0d94804] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:17:45 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:17:45 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 17:17:45 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 17:17:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 17:17:47 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 17:17:47 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 17:17:47 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 17:17:47 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 17:17:47 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4438 ms
2020-11-30 17:17:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 17:17:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1b5a1d85
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1b5a1d85
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1b5a1d85
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@f1f7db2
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2db4ad1
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2bfb583b
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2596d7f4
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2596d7f4
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2596d7f4
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3d1f558a
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3d1f558a
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d1f558a
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@69f0b0f4
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@69f0b0f4
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@69f0b0f4
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@177c41d7
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@177c41d7
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@177c41d7
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51c8f62c
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51c8f62c
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@51c8f62c
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@44fff386
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@44fff386
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44fff386
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a12c7a8
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a12c7a8
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a12c7a8
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5740ff5e
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5740ff5e
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3119cf6f
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3119cf6f
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3481ff98
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3481ff98
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c91530d
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6fbc1bb
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@48df4071
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@48df4071
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@692dba54
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@692dba54
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@48eb001a
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@48eb001a
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@52b3bf03
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@52b3bf03
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5626d18c
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5626d18c
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@45f756e6
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@45f756e6
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@656f62dc
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@656f62dc
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5a8c93
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5a8c93
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@470d183
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@470d183
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7f608e21
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f608e21
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@66236a0a
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@66236a0a
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@795f8317
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@795f8317
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@795f8317
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@97a145b
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@526a9908
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@526a9908
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@526a9908
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60d6fdd4
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@619f2afc
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@619f2afc
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7d32e714
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d32e714
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2935fd2c
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2935fd2c
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@62b790a5
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@62b790a5
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1db7157f
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1db7157f
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f4c88f9
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6b63e6ad
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6b63e6ad
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6b63e6ad
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ae73c80
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ae73c80
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ae73c80
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@76a14c8d
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@257ef9ed
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@575b5f7d
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@575b5f7d
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@575b5f7d
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b2df3aa
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b2df3aa
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b2df3aa
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@21da4b5f
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5d1e0fbb
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@15c487a8
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15c487a8
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@794366a5
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@41da3aee
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@41da3aee
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2b38b1f
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b38b1f
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2e766822
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21a02556
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@45aca496
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@41184371
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@41184371
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@167381c7
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@56382bc9
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c51782d
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@733c464f
2020-11-30 17:17:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@733c464f
2020-11-30 17:17:49 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1db7157f
2020-11-30 17:17:49 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5974b7e8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2839e3c8]
2020-11-30 17:17:50 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5974b7e8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3f857e08]
2020-11-30 17:17:52 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 17:17:52 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 17:17:52 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 17:17:52 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 17:17:52 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3f857e08] for TypeConfiguration
2020-11-30 17:17:52 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 17:17:54 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7846913f, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d7aa291, org.springframework.security.web.header.HeaderWriterFilter@1e50eb3f, org.springframework.web.filter.CorsFilter@48da64f2, org.springframework.security.web.authentication.logout.LogoutFilter@72e49f6a, com.app.config.JwtRequestFilter@32513dea, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@762cdf46, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d5a0b14, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@60b553f, org.springframework.security.web.session.SessionManagementFilter@4ad3969, org.springframework.security.web.access.ExceptionTranslationFilter@35841d6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4e3ee457]
2020-11-30 17:17:55 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 17:17:55 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 17:17:55 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 17:17:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 17:17:55 [main] INFO  com.app.Application - Started Application in 13.399 seconds (JVM running for 14.257)
2020-11-30 17:17:59 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 17:17:59 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 17:17:59 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 38 ms
2020-11-30 17:17:59 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:18:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-11-30 17:18:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotheoop]
2020-11-30 17:18:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update bank_mst_relationship set relationshipCode=?, relationship=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Brorr]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brotheoop]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [admin]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-11-30]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [17:18:00]
2020-11-30 17:18:00 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [BIGINT] - [1]
2020-11-30 17:18:00 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: column "relationshipcode" of relation "bank_mst_relationship" does not exist
  Position: 34
2020-11-30 17:19:33 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 15084 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 17:19:33 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 17:19:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 17:19:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 195ms. Found 16 repository interfaces.
2020-11-30 17:19:35 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 17:19:35 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 17:19:35 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:19:35 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:19:35 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:19:35 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:19:35 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:19:35 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:19:35 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$35f28e22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:19:35 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$cea0565c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:19:35 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:19:35 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1bbae752' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:19:35 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f374f90e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:19:35 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:19:36 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 17:19:36 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 17:19:37 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 17:19:37 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 17:19:37 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 17:19:37 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 17:19:37 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 17:19:37 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4361 ms
2020-11-30 17:19:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 17:19:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@42aae04d
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@42aae04d
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@42aae04d
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58015e56
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@516462cc
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6cbe7d4d
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@36aa52d2
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@36aa52d2
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@36aa52d2
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@332bcab0
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@332bcab0
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@332bcab0
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@28237492
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@28237492
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@28237492
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@31e130bf
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@31e130bf
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@31e130bf
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2db4ad1
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2db4ad1
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2db4ad1
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6fc1020a
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6fc1020a
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fc1020a
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6aa3bfc
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6aa3bfc
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6aa3bfc
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28f4f300
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28f4f300
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f7efd0b
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f7efd0b
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1d61a348
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d61a348
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51c8f62c
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@8cc8cdb
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@76b47204
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@76b47204
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6848a051
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6848a051
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2b0b7e5a
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b0b7e5a
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@68a78f3c
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@68a78f3c
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c91530d
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c91530d
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f1dd5b4
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f1dd5b4
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6e3ecf5c
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6e3ecf5c
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f14761c
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f14761c
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d55e826
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d55e826
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@656f62dc
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@656f62dc
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5a8c93
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a8c93
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1c7350b0
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1c7350b0
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1c7350b0
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@50448409
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@30b975ad
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@30b975ad
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@30b975ad
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@470d183
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3ddeaa5f
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3ddeaa5f
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3bec5821
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3bec5821
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@176555c
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@176555c
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@97a145b
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@97a145b
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@526a9908
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@526a9908
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60d6fdd4
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@619f2afc
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@619f2afc
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@619f2afc
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7d32e714
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7d32e714
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7d32e714
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2935fd2c
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@57fbc06f
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2806d6da
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2806d6da
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2806d6da
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4f4c88f9
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4f4c88f9
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4f4c88f9
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1f3b992
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7beae796
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@40a72ecd
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@40a72ecd
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17410c07
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@575b5f7d
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@575b5f7d
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7219ac49
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7219ac49
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@625a9c5d
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@9b76b60
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7c011174
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2b38b1f
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2b38b1f
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e766822
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3003e580
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@28757abd
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@21a02556
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c8a7e38
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@138aa3cc
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@10a98392
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@30839e44
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@72bd2871
2020-11-30 17:19:39 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@72bd2871
2020-11-30 17:19:39 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@526a9908
2020-11-30 17:19:39 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@413bef78] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66383c29]
2020-11-30 17:19:40 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@413bef78] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6403a4a5]
2020-11-30 17:19:40 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 17:19:41 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 17:19:41 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 17:19:41 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 17:19:41 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6403a4a5] for TypeConfiguration
2020-11-30 17:19:41 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 17:19:43 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@50b38342, org.springframework.security.web.context.SecurityContextPersistenceFilter@7793b55d, org.springframework.security.web.header.HeaderWriterFilter@4dffff9, org.springframework.web.filter.CorsFilter@424a152f, org.springframework.security.web.authentication.logout.LogoutFilter@1e50eb3f, com.app.config.JwtRequestFilter@397a10df, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ac7856f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@498b611e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@408d945b, org.springframework.security.web.session.SessionManagementFilter@54f69311, org.springframework.security.web.access.ExceptionTranslationFilter@1dc9f5ad, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@52d59507]
2020-11-30 17:19:43 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 17:19:43 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 17:19:44 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 17:19:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 17:19:44 [main] INFO  com.app.Application - Started Application in 11.636 seconds (JVM running for 12.552)
2020-11-30 17:19:47 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 17:19:47 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 17:19:47 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-11-30 17:19:47 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:19:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [null]
2020-11-30 17:19:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotheoop]
2020-11-30 17:19:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update bank_mst_relationship set relationship_code=?, relationship=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Brorr]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brotheoop]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [admin]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-11-30]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [17:19:48]
2020-11-30 17:19:48 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [BIGINT] - [1]
2020-11-30 17:19:57 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:19:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [17:19:48]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [admin]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotheoop]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Brorr]
2020-11-30 17:19:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotheooghjngp]
2020-11-30 17:19:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update bank_mst_relationship set relationship_code=?, relationship=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Brortyr]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brotheooghjngp]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [admin]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-11-30]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [17:19:57]
2020-11-30 17:19:57 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [BIGINT] - [1]
2020-11-30 17:22:57 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 256 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 17:22:57 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 17:22:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 17:22:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 329ms. Found 16 repository interfaces.
2020-11-30 17:23:00 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 17:23:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 17:23:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:23:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:23:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:23:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:23:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:23:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:23:00 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d6b68b6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:23:00 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6f6453a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:23:00 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:23:00 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@65004ff6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:23:00 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9438f65b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:23:00 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:23:00 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 17:23:00 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 17:23:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 17:23:01 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 17:23:01 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 17:23:01 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 17:23:01 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 17:23:01 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4310 ms
2020-11-30 17:23:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 17:23:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73ae0257
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73ae0257
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73ae0257
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2629d5dc
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6aa3bfc
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d1f558a
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69f0b0f4
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@69f0b0f4
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@69f0b0f4
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@177c41d7
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@177c41d7
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@177c41d7
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@51c8f62c
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@51c8f62c
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51c8f62c
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@44fff386
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@44fff386
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44fff386
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6a12c7a8
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6a12c7a8
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a12c7a8
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5740ff5e
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5740ff5e
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5740ff5e
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3119cf6f
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3119cf6f
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3119cf6f
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3481ff98
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3481ff98
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@732f6050
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@732f6050
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5f96f6a2
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f96f6a2
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e3ecf5c
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@692dba54
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@48eb001a
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@48eb001a
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@52b3bf03
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@52b3bf03
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5626d18c
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5626d18c
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@45f756e6
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@45f756e6
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@656f62dc
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@656f62dc
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a8c93
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a8c93
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1c7350b0
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1c7350b0
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b0dc227
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b0dc227
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3bec5821
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3bec5821
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@795f8317
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@795f8317
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@157ec23b
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@157ec23b
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@47ac613b
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@47ac613b
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@47ac613b
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@60a19573
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4db60246
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4db60246
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4db60246
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d32e714
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2935fd2c
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2935fd2c
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@62b790a5
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62b790a5
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1db7157f
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1db7157f
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@cb39552
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cb39552
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6749fe50
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6749fe50
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ae73c80
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@76a14c8d
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@76a14c8d
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@76a14c8d
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@46f902e0
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@46f902e0
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@46f902e0
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7165d530
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1b2df3aa
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@625a9c5d
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@625a9c5d
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@625a9c5d
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@127705e4
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@127705e4
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@127705e4
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@15c487a8
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@794366a5
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@41da3aee
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41da3aee
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@59a79443
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2e766822
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2e766822
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@30839e44
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@30839e44
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@45aca496
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3d90eeb3
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5afbd567
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7c51782d
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7c51782d
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20a7953c
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@57c00115
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@411a5965
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4fe533ff
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5377414a
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e83a98
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@17aa8a11
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@71b639d0
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5974b7e8
2020-11-30 17:23:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5974b7e8
2020-11-30 17:23:03 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6749fe50
2020-11-30 17:23:03 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a515e5d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@423a0e1d]
2020-11-30 17:23:04 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a515e5d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47a4eee2]
2020-11-30 17:23:04 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 17:23:04 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 17:23:04 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 17:23:04 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 17:23:04 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@47a4eee2] for TypeConfiguration
2020-11-30 17:23:04 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 17:23:07 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d5bb5c, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d7ff311, org.springframework.security.web.header.HeaderWriterFilter@5e9ea380, org.springframework.web.filter.CorsFilter@7846913f, org.springframework.security.web.authentication.logout.LogoutFilter@6f428e6e, com.app.config.JwtRequestFilter@24068086, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ba7db2a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@534fc1f7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@48da64f2, org.springframework.security.web.session.SessionManagementFilter@e171f93, org.springframework.security.web.access.ExceptionTranslationFilter@2fa47368, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@401b67a9]
2020-11-30 17:23:07 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 17:23:07 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 17:23:07 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 17:23:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 17:23:08 [main] INFO  com.app.Application - Started Application in 11.423 seconds (JVM running for 12.462)
2020-11-30 17:23:12 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 17:23:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 17:23:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2020-11-30 17:23:12 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:23:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [17:19:57]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [admin]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotheooghjngp]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Brortyr]
2020-11-30 17:23:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotheooghjngp]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:23:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update bank_mst_relationship set relationship_code=?, relationship=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Brortyr]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brotheooghjngp]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [admin]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-11-30]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [17:23:12]
2020-11-30 17:23:12 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [BIGINT] - [1]
2020-11-30 17:23:24 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:23:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:23:24 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [10]
2020-11-30 17:23:34 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:23:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [17:23:12]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [admin]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotheooghjngp]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Brortyr]
2020-11-30 17:23:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotheooghjngp]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:23:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update bank_mst_relationship set relationship_code=?, relationship=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Brortyr]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brotheooghjngp]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [admin]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-11-30]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [17:23:34]
2020-11-30 17:23:34 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [BIGINT] - [1]
2020-11-30 17:49:28 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 14372 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 17:49:28 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 17:49:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 17:49:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 193ms. Found 16 repository interfaces.
2020-11-30 17:49:30 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 17:49:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 17:49:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:49:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:49:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:49:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:49:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:49:30 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:49:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fe626695] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:49:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$97102ecf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:49:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:49:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@153f66e7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:49:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bbe4d181] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:49:31 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:49:31 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 17:49:31 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 17:49:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 17:49:32 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 17:49:32 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 17:49:32 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 17:49:32 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 17:49:32 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4094 ms
2020-11-30 17:49:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 17:49:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7d70638
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7d70638
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d70638
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30c4e352
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f96f6a2
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6e3ecf5c
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5f14761c
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5f14761c
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5f14761c
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@724b939e
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@724b939e
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@724b939e
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@462abec3
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@462abec3
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@462abec3
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3dc95b8b
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3dc95b8b
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3dc95b8b
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3003827c
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3003827c
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3003827c
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1115433e
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1115433e
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1115433e
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@119b0892
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@119b0892
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@119b0892
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3bc4ef12
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3bc4ef12
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43bdaa1b
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43bdaa1b
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7f9fc8bd
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7f9fc8bd
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c854752
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f608e21
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@66236a0a
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@66236a0a
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@795f8317
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@795f8317
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@157ec23b
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@157ec23b
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@47ac613b
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@47ac613b
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@134ff8f8
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@134ff8f8
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3902bd2c
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3902bd2c
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@727320fa
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@727320fa
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@51a18b21
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@51a18b21
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6749fe50
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6749fe50
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@73971965
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73971965
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@59c70ceb
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@59c70ceb
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@59bbb974
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@59bbb974
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@59bbb974
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fd9893c
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@551e4c6d
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@551e4c6d
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@551e4c6d
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2eed37f4
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@673c4f6e
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@673c4f6e
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@480b57e2
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@480b57e2
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1ee47d9e
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1ee47d9e
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@493ac8d3
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@493ac8d3
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51ab1ee3
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51ab1ee3
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@28757abd
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@30839e44
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@30839e44
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@30839e44
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ceddaf8
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ceddaf8
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ceddaf8
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@27329d2a
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5afbd567
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@41184371
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@41184371
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@41184371
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@608b1fd2
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@608b1fd2
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@608b1fd2
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@53ed80d3
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@77bc2e16
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4e83a98
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4e83a98
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@18a25bbd
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@53a84ff4
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@53a84ff4
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@717d7587
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@717d7587
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5b7aa898
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2489e84a
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5731d3a
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@dd2856e
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dd2856e
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@793d163b
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@60dd0587
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77f905e3
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@221a2068
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@338766de
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b7eac14
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4976085
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@777d191f
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4f379769
2020-11-30 17:49:34 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4f379769
2020-11-30 17:49:34 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@51ab1ee3
2020-11-30 17:49:34 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1235151c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a1f778]
2020-11-30 17:49:35 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1235151c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5db948c9]
2020-11-30 17:49:35 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 17:49:35 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 17:49:35 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 17:49:35 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 17:49:35 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5db948c9] for TypeConfiguration
2020-11-30 17:49:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 17:49:38 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@79777da7, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d3c501b, org.springframework.security.web.header.HeaderWriterFilter@45d38165, org.springframework.web.filter.CorsFilter@3395c2a7, org.springframework.security.web.authentication.logout.LogoutFilter@2ed7978c, com.app.config.JwtRequestFilter@573870cb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38b54694, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27053257, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e05a706, org.springframework.security.web.session.SessionManagementFilter@6eb5b9e7, org.springframework.security.web.access.ExceptionTranslationFilter@6879e983, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a63fa71]
2020-11-30 17:49:38 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 17:49:38 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 17:49:38 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 17:49:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 17:49:38 [main] INFO  com.app.Application - Started Application in 10.928 seconds (JVM running for 11.709)
2020-11-30 17:49:50 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 17:49:50 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 17:49:50 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2020-11-30 17:49:50 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:49:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [17:23:34]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [admin]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotheooghjngp]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Brortyr]
2020-11-30 17:49:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotheooghjngp]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:49:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update bank_mst_relationship set relationship_code=?, relationship=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Brortyr]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brotheooghjngp]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [admin]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-11-30]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [17:49:51]
2020-11-30 17:49:51 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [BIGINT] - [1]
2020-11-30 17:50:41 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9364 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 17:50:41 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 17:50:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 17:50:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 216ms. Found 16 repository interfaces.
2020-11-30 17:50:44 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 17:50:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 17:50:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:50:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:50:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:50:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:50:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 17:50:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 17:50:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$36485832] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:50:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$cef6206c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:50:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:50:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@64030b91' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:50:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f3cac31e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:50:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 17:50:44 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 17:50:44 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 17:50:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 17:50:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 17:50:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 17:50:45 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 17:50:45 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 17:50:45 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4191 ms
2020-11-30 17:50:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 17:50:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dffda8b
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dffda8b
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7dffda8b
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@28f4f300
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@69f0b0f4
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@41ad373
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@78a515e4
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@78a515e4
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78a515e4
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@8cc8cdb
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@8cc8cdb
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@8cc8cdb
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@76b47204
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@76b47204
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@76b47204
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6848a051
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6848a051
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6848a051
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2b0b7e5a
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2b0b7e5a
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2b0b7e5a
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@68a78f3c
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@68a78f3c
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68a78f3c
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3c91530d
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3c91530d
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3c91530d
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f1dd5b4
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f1dd5b4
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6e3ecf5c
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6e3ecf5c
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5f14761c
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f14761c
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@48eb001a
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f8aba08
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@35c9a231
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@35c9a231
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2d55e826
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2d55e826
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@29b40b3
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@29b40b3
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4fdca00a
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4fdca00a
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1a3e8e24
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1a3e8e24
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@50448409
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@50448409
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30b975ad
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30b975ad
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@ea52184
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@ea52184
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@633fd91
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@633fd91
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@526a9908
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@526a9908
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@60a19573
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@60a19573
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4db60246
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4db60246
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4db60246
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d32e714
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2935fd2c
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2935fd2c
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2935fd2c
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@57fbc06f
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2806d6da
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2806d6da
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4f4c88f9
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f4c88f9
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b63e6ad
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b63e6ad
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@ae73c80
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@ae73c80
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76a14c8d
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76a14c8d
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@257ef9ed
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@575b5f7d
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@575b5f7d
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@575b5f7d
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b2df3aa
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b2df3aa
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b2df3aa
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@625a9c5d
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@9b76b60
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@15c487a8
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@15c487a8
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@15c487a8
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@40f35e52
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@40f35e52
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@40f35e52
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@443faa85
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5dc0ff7d
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1d50a7ca
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1d50a7ca
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3003e580
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5f174dd2
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f174dd2
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7fb53256
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7fb53256
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7978e022
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6993c8df
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@15f35bc3
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4e83a98
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4e83a98
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18a25bbd
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5d5b9ecb
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1ee27d73
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e5aafc6
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@542f6803
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5583098b
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5807efad
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53a84ff4
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@60f21960
2020-11-30 17:50:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@60f21960
2020-11-30 17:50:47 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@76a14c8d
2020-11-30 17:50:47 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a01d7f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5856dbe4]
2020-11-30 17:50:48 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a01d7f0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6de004f1]
2020-11-30 17:50:49 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 17:50:49 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 17:50:49 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 17:50:49 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 17:50:49 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6de004f1] for TypeConfiguration
2020-11-30 17:50:49 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 17:50:51 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7846913f, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d7aa291, org.springframework.security.web.header.HeaderWriterFilter@1e50eb3f, org.springframework.web.filter.CorsFilter@48da64f2, org.springframework.security.web.authentication.logout.LogoutFilter@72e49f6a, com.app.config.JwtRequestFilter@32513dea, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@762cdf46, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d5a0b14, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@60b553f, org.springframework.security.web.session.SessionManagementFilter@4ad3969, org.springframework.security.web.access.ExceptionTranslationFilter@35841d6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4e3ee457]
2020-11-30 17:50:51 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 17:50:51 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 17:50:51 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 17:50:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 17:50:52 [main] INFO  com.app.Application - Started Application in 11.046 seconds (JVM running for 11.844)
2020-11-30 17:50:56 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 17:50:56 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 17:50:56 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2020-11-30 17:50:56 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:50:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:50:56 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:50:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [1]
2020-11-30 17:50:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:17:34]
2020-11-30 17:50:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:50:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:50:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [17:49:51]
2020-11-30 17:50:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [admin]
2020-11-30 17:50:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:50:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotheooghjngp]
2020-11-30 17:50:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Brortyr]
2020-11-30 17:50:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - DELETE FROM bank_mst_relationship WHERE slno = ?
2020-11-30 17:50:56 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-11-30 17:51:06 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:51:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:18:36]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:21:46]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothers]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [4]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:23:03]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotherss]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [5]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [16:06:49]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothersss]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [6]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [16:11:39]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothe]
2020-11-30 17:51:06 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Bro]
2020-11-30 17:51:21 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:51:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:51:21 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [6]
2020-11-30 17:51:21 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [6]
2020-11-30 17:51:21 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [16:11:39]
2020-11-30 17:51:21 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:51:21 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:51:21 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:51:21 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:51:21 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:51:21 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothe]
2020-11-30 17:51:21 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Bro]
2020-11-30 17:51:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - DELETE FROM bank_mst_relationship WHERE slno = ?
2020-11-30 17:51:21 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [6]
2020-11-30 17:51:27 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:51:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:18:36]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:21:46]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothers]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [4]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:23:03]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotherss]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [5]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [16:06:49]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothersss]
2020-11-30 17:51:27 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 17:53:37 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:53:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [2]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:18:36]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brother]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [3]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:21:46]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothers]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [4]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [13:23:03]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotherss]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [5]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [16:06:49]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brothersss]
2020-11-30 17:53:37 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [123]
2020-11-30 17:53:44 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 17:53:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 17:53:44 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [10]
2020-11-30 18:23:47 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 18:40:10 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 18:40:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 18:40:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotheooghjngp]
2020-11-30 18:40:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-11-30 18:40:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-11-30 18:40:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [18:40:10]
2020-11-30 18:40:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-11-30 18:40:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 18:40:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-11-30 18:40:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-11-30 18:40:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-11-30 18:40:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [brotheooghjngp]
2020-11-30 18:40:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [Brortyr]
2020-11-30 18:40:10 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [9]
2020-11-30 18:40:40 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 18:40:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 18:40:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotheooghjngp]
2020-11-30 18:40:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [6]
2020-11-30 18:40:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:40:10]
2020-11-30 18:40:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 18:40:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 18:40:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 18:40:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 18:40:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 18:40:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotheooghjngp]
2020-11-30 18:40:40 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Brortyr]
2020-11-30 18:40:59 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 18:40:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 18:40:59 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotheooghjngpgjnvj]
2020-11-30 18:40:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-11-30 18:40:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into bank_mst_relationship (created_at, created_by, created_on, modified_at, modified_by, modified_on, relationship, relationship_code, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-11-30 18:40:59 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [18:40:59]
2020-11-30 18:40:59 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-11-30 18:40:59 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 18:40:59 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-11-30 18:40:59 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-11-30 18:40:59 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-11-30 18:40:59 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [brotheooghjngpgjnvj]
2020-11-30 18:40:59 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [Brojhgkhk]
2020-11-30 18:40:59 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [10]
2020-11-30 18:41:42 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 18:41:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno is null
2020-11-30 18:42:22 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 18:42:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.slno=?
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [7]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [7]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_0_] : [TIME]) - [18:40:59]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_0_] : [VARCHAR]) - [pooja]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_0_] : [DATE]) - [2020-11-30]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_0_] : [TIME]) - [null]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_0_] : [VARCHAR]) - [null]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_0_] : [DATE]) - [null]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation8_0_] : [VARCHAR]) - [brotheooghjngpgjnvj]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([relation9_0_] : [VARCHAR]) - [Brojhgkhk]
2020-11-30 18:42:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select relationsh0_.slno as slno1_0_, relationsh0_.created_at as created_2_0_, relationsh0_.created_by as created_3_0_, relationsh0_.created_on as created_4_0_, relationsh0_.modified_at as modified5_0_, relationsh0_.modified_by as modified6_0_, relationsh0_.modified_on as modified7_0_, relationsh0_.relationship as relation8_0_, relationsh0_.relationship_code as relation9_0_ from bank_mst_relationship relationsh0_ where relationsh0_.relationship=?
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brotheooghjngpgjnvj]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_0_] : [BIGINT]) - [7]
2020-11-30 18:42:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - update bank_mst_relationship set relationship_code=?, relationship=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [b]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brotheooghjngpgjnvj]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [admin]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-11-30]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [18:42:22]
2020-11-30 18:42:22 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [BIGINT] - [7]
2020-11-30 19:58:40 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 3856 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 19:58:40 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 19:58:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 19:58:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 193ms. Found 17 repository interfaces.
2020-11-30 19:58:42 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 19:58:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 19:58:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 19:58:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 19:58:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 19:58:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 19:58:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 19:58:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 19:58:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ce6f702a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 19:58:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$671d3864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 19:58:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 19:58:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@24097e9b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 19:58:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8bf1db16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 19:58:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 19:58:42 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 19:58:42 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 19:58:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 19:58:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 19:58:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 19:58:43 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 19:58:44 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 19:58:44 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3669 ms
2020-11-30 19:58:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 19:58:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@79518e00
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@79518e00
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79518e00
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@732f6050
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@f1dd5b4
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@48df4071
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@692dba54
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@692dba54
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@692dba54
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@48eb001a
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@48eb001a
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48eb001a
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@52b3bf03
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@52b3bf03
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52b3bf03
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5626d18c
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5626d18c
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5626d18c
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@45f756e6
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@45f756e6
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@45f756e6
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@656f62dc
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@656f62dc
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@656f62dc
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5a8c93
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5a8c93
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a8c93
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c7350b0
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c7350b0
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2b0dc227
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2b0dc227
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2a334bac
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2a334bac
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ea52184
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3ddeaa5f
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3bec5821
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3bec5821
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@176555c
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@176555c
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@97a145b
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@97a145b
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@526a9908
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@526a9908
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60a19573
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60a19573
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4db60246
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4db60246
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@34d45ec0
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@34d45ec0
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3ce443f9
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3ce443f9
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6b63e6ad
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6b63e6ad
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@bbd4791
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@bbd4791
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6ee99964
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6ee99964
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@361abd01
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@361abd01
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@361abd01
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7165d530
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7219ac49
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7219ac49
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7219ac49
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@625a9c5d
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@127705e4
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@127705e4
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7c011174
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7c011174
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@561953e3
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@561953e3
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@64920dc2
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@64920dc2
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2b38b1f
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2b38b1f
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2e766822
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@138aa3cc
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@138aa3cc
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@138aa3cc
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45aca496
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45aca496
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45aca496
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fb53256
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7978e022
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@326e0b8e
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@326e0b8e
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@326e0b8e
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@15f35bc3
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@15f35bc3
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@15f35bc3
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@56382bc9
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6ba060f3
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4fe533ff
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4fe533ff
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17aa8a11
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5583098b
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5583098b
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7930ffa9
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7930ffa9
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e906375
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41b13f3d
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@29ebbdf4
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4694f434
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4694f434
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a49af50
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3b1dc579
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@793d163b
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@60dd0587
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@77f905e3
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@221a2068
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@338766de
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b7eac14
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@664632e9
2020-11-30 19:58:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@664632e9
2020-11-30 19:58:45 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2b38b1f
2020-11-30 19:58:45 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e1ffe70] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@73041b7d]
2020-11-30 19:58:46 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e1ffe70] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@fbe70d8]
2020-11-30 19:58:47 [main] DEBUG org.hibernate.SQL - create table gen_std_member_type (slno int8 not null, created_at time, created_by varchar(255), created_on DATE, modified_at time, modified_by varchar(255), modified_on DATE, name varchar(255), primary key (slno))
2020-11-30 19:58:47 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 19:58:47 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 19:58:47 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 19:58:47 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 19:58:47 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@fbe70d8] for TypeConfiguration
2020-11-30 19:58:47 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 19:58:49 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@69d021c1, org.springframework.security.web.context.SecurityContextPersistenceFilter@215a0264, org.springframework.security.web.header.HeaderWriterFilter@74a74070, org.springframework.web.filter.CorsFilter@6d5508a5, org.springframework.security.web.authentication.logout.LogoutFilter@4efed0e0, com.app.config.JwtRequestFilter@1d0b447b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@103478b8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@278cb145, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@103bcc9f, org.springframework.security.web.session.SessionManagementFilter@2d2f09a4, org.springframework.security.web.access.ExceptionTranslationFilter@602a3237, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1fba3fd6]
2020-11-30 19:58:49 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 19:58:49 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 19:58:50 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 19:58:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 19:58:50 [main] INFO  com.app.Application - Started Application in 10.518 seconds (JVM running for 11.378)
2020-11-30 19:59:19 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 19:59:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 19:59:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-11-30 19:59:20 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 19:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_ where membertype0_.name is null
2020-11-30 19:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-11-30 19:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into gen_std_member_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-11-30 19:59:20 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [19:59:20]
2020-11-30 19:59:20 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-11-30 19:59:20 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 19:59:20 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-11-30 19:59:20 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-11-30 19:59:20 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-11-30 19:59:20 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [null]
2020-11-30 19:59:20 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [11]
2020-11-30 20:00:37 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:00:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_ where membertype0_.name=?
2020-11-30 20:00:37 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [stakholder]
2020-11-30 20:00:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-11-30 20:00:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into gen_std_member_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-11-30 20:00:37 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [20:00:37]
2020-11-30 20:00:37 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-11-30 20:00:37 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 20:00:37 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-11-30 20:00:37 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-11-30 20:00:37 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-11-30 20:00:37 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [stakholder]
2020-11-30 20:00:37 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [12]
2020-11-30 20:01:44 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9372 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 20:01:44 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 20:01:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 20:01:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 201ms. Found 17 repository interfaces.
2020-11-30 20:01:46 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 20:01:46 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 20:01:46 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:01:46 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:01:46 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:01:46 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:01:46 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:01:46 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:01:46 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cfdaf8ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:01:46 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6888c126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:01:46 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:01:46 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@57540fd0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:01:46 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8d5d63d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:01:46 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:01:47 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 20:01:47 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 20:01:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 20:01:47 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 20:01:47 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 20:01:47 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 20:01:48 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 20:01:48 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3908 ms
2020-11-30 20:01:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 20:01:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1b5a1d85
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1b5a1d85
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1b5a1d85
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@f1f7db2
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2db4ad1
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2bfb583b
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2596d7f4
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2596d7f4
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2596d7f4
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3d1f558a
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3d1f558a
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d1f558a
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@69f0b0f4
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@69f0b0f4
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@69f0b0f4
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@177c41d7
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@177c41d7
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@177c41d7
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51c8f62c
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51c8f62c
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@51c8f62c
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@44fff386
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@44fff386
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44fff386
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a12c7a8
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a12c7a8
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a12c7a8
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5740ff5e
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5740ff5e
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3119cf6f
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3119cf6f
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3481ff98
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3481ff98
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c91530d
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6fbc1bb
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@48df4071
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@48df4071
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@692dba54
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@692dba54
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@48eb001a
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@48eb001a
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@52b3bf03
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@52b3bf03
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5626d18c
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5626d18c
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@45f756e6
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@45f756e6
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@656f62dc
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@656f62dc
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5a8c93
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5a8c93
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@470d183
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@470d183
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7f608e21
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f608e21
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@66236a0a
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@66236a0a
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@795f8317
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@795f8317
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@795f8317
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@97a145b
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@526a9908
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@526a9908
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@526a9908
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60d6fdd4
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@619f2afc
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@619f2afc
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7d32e714
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d32e714
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2935fd2c
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2935fd2c
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@62b790a5
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@62b790a5
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1db7157f
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1db7157f
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f4c88f9
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6b63e6ad
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6b63e6ad
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6b63e6ad
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ae73c80
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ae73c80
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ae73c80
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@76a14c8d
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@257ef9ed
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@575b5f7d
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@575b5f7d
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@575b5f7d
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b2df3aa
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b2df3aa
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b2df3aa
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@21da4b5f
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5d1e0fbb
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@15c487a8
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15c487a8
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@794366a5
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@41da3aee
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@41da3aee
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2b38b1f
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b38b1f
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2e766822
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21a02556
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@45aca496
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@41184371
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@41184371
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@167381c7
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@56382bc9
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c51782d
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@733c464f
2020-11-30 20:01:49 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@733c464f
2020-11-30 20:01:49 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1db7157f
2020-11-30 20:01:49 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5974b7e8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2839e3c8]
2020-11-30 20:01:50 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5974b7e8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3f857e08]
2020-11-30 20:01:51 [main] DEBUG org.hibernate.SQL - create table gen_std_member_type (slno int8 not null, created_at time, created_by varchar(255), created_on DATE, modified_at time, modified_by varchar(255), modified_on DATE, name varchar(255), primary key (slno))
2020-11-30 20:01:51 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 20:01:51 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 20:01:51 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 20:01:51 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 20:01:51 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3f857e08] for TypeConfiguration
2020-11-30 20:01:51 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 20:01:52 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36a1fd20, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c9ef37b, org.springframework.security.web.header.HeaderWriterFilter@25f14e93, org.springframework.web.filter.CorsFilter@45f8415b, org.springframework.security.web.authentication.logout.LogoutFilter@4efe014f, com.app.config.JwtRequestFilter@178dc733, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c8758d1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@225ddf5f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10dbf660, org.springframework.security.web.session.SessionManagementFilter@3278d065, org.springframework.security.web.access.ExceptionTranslationFilter@64688978, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@543d2ef3]
2020-11-30 20:01:53 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 20:01:53 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 20:01:53 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 20:01:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 20:01:53 [main] INFO  com.app.Application - Started Application in 10.079 seconds (JVM running for 10.853)
2020-11-30 20:02:15 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 20:02:15 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 20:02:15 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2020-11-30 20:02:15 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:02:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_ where membertype0_.name=?
2020-11-30 20:02:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [stakholder]
2020-11-30 20:02:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-11-30 20:02:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into gen_std_member_type (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-11-30 20:02:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [20:02:15]
2020-11-30 20:02:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pooja]
2020-11-30 20:02:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 20:02:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-11-30 20:02:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-11-30 20:02:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-11-30 20:02:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [stakholder]
2020-11-30 20:02:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [13]
2020-11-30 20:03:20 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:03:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_ where membertype0_.name=?
2020-11-30 20:03:20 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [stakholder]
2020-11-30 20:03:20 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_8_] : [BIGINT]) - [13]
2020-11-30 20:03:20 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_8_] : [TIME]) - [20:02:15]
2020-11-30 20:03:20 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_8_] : [VARCHAR]) - [pooja]
2020-11-30 20:03:20 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_8_] : [DATE]) - [2020-11-30]
2020-11-30 20:03:20 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_8_] : [TIME]) - [null]
2020-11-30 20:03:20 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_8_] : [VARCHAR]) - [null]
2020-11-30 20:03:20 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_8_] : [DATE]) - [null]
2020-11-30 20:03:20 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_8_] : [VARCHAR]) - [stakholder]
2020-11-30 20:08:59 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 15176 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 20:08:59 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 20:09:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 20:09:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 208ms. Found 17 repository interfaces.
2020-11-30 20:09:01 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 20:09:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 20:09:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:09:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:09:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:09:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:09:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:09:01 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:09:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4b71926e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:09:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e41f5aa8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:09:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:09:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@441cc260' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:09:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8f3fd5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:09:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:09:02 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 20:09:02 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 20:09:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 20:09:03 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 20:09:03 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 20:09:03 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 20:09:03 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 20:09:03 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3974 ms
2020-11-30 20:09:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 20:09:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2b5c4f17
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2b5c4f17
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b5c4f17
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@66933239
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6801b414
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1d61a348
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@11f9535b
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@11f9535b
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11f9535b
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7301eebe
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7301eebe
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7301eebe
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@436bd4df
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@436bd4df
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@436bd4df
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@67f77f6e
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@67f77f6e
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@67f77f6e
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1d408060
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1d408060
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d408060
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@79518e00
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@79518e00
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@79518e00
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@30c4e352
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@30c4e352
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@30c4e352
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@290e8cab
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@290e8cab
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71f1cc02
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71f1cc02
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@34332b8d
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@34332b8d
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ff19c33
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@462abec3
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3dc95b8b
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3dc95b8b
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3003827c
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3003827c
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1115433e
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1115433e
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@119b0892
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@119b0892
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3bc4ef12
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3bc4ef12
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@43bdaa1b
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@43bdaa1b
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f9fc8bd
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f9fc8bd
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1a500561
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1a500561
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@157ec23b
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@157ec23b
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@66f28a1f
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@66f28a1f
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@df921b1
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@df921b1
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@eb6ec6
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@eb6ec6
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@eb6ec6
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@727320fa
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@51a18b21
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51a18b21
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51a18b21
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7523a3dc
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6bccd036
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bccd036
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2a53f215
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2a53f215
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@261db982
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@261db982
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@73971965
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73971965
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@59c70ceb
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@59c70ceb
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@361abd01
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1fd9893c
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1fd9893c
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1fd9893c
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@551e4c6d
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@551e4c6d
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@551e4c6d
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3fb9a67f
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@673c4f6e
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@480b57e2
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@480b57e2
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@480b57e2
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ee47d9e
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ee47d9e
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ee47d9e
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@64920dc2
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@13dbed9e
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@28757abd
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28757abd
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@138aa3cc
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@ceddaf8
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ceddaf8
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2f894ad9
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2f894ad9
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@57545c3f
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41184371
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@591a4f8e
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5d5b9ecb
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5d5b9ecb
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@542f6803
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5583098b
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5807efad
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53a84ff4
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ce85af2
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@316acbb5
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@56f730b2
2020-11-30 20:09:04 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@47311277
2020-11-30 20:09:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@52ae997b
2020-11-30 20:09:05 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@52ae997b
2020-11-30 20:09:05 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@59c70ceb
2020-11-30 20:09:05 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@32d418a9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@52ea0269]
2020-11-30 20:09:05 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@32d418a9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@57bd6a8f]
2020-11-30 20:09:06 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 20:09:06 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 20:09:06 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 20:09:06 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 20:09:06 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@57bd6a8f] for TypeConfiguration
2020-11-30 20:09:06 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 20:09:08 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a5fab78, org.springframework.security.web.context.SecurityContextPersistenceFilter@4feec184, org.springframework.security.web.header.HeaderWriterFilter@c6c84fa, org.springframework.web.filter.CorsFilter@77a85e76, org.springframework.security.web.authentication.logout.LogoutFilter@59b3f754, com.app.config.JwtRequestFilter@64544ee4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3278d065, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57b3d869, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2cebf82f, org.springframework.security.web.session.SessionManagementFilter@74231642, org.springframework.security.web.access.ExceptionTranslationFilter@12a0d249, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@764db16c]
2020-11-30 20:09:08 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 20:09:08 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 20:09:08 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 20:09:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 20:09:08 [main] INFO  com.app.Application - Started Application in 9.975 seconds (JVM running for 10.688)
2020-11-30 20:09:16 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 20:09:16 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 20:09:16 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2020-11-30 20:09:16 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:09:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_
2020-11-30 20:09:17 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_8_] : [BIGINT]) - [13]
2020-11-30 20:09:17 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_8_] : [TIME]) - [20:02:15]
2020-11-30 20:09:17 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_8_] : [VARCHAR]) - [pooja]
2020-11-30 20:09:17 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_8_] : [DATE]) - [2020-11-30]
2020-11-30 20:09:17 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_8_] : [TIME]) - [null]
2020-11-30 20:09:17 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_8_] : [VARCHAR]) - [null]
2020-11-30 20:09:17 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_8_] : [DATE]) - [null]
2020-11-30 20:09:17 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_8_] : [VARCHAR]) - [stakholder]
2020-11-30 20:12:51 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 6128 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 20:12:51 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 20:12:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 20:12:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 201ms. Found 17 repository interfaces.
2020-11-30 20:12:54 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 20:12:54 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 20:12:54 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:12:54 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:12:54 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:12:54 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:12:54 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:12:54 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:12:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6ccb4458] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:12:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5790c92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:12:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:12:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1ecfcbc9' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:12:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2a4daf44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:12:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:12:54 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 20:12:54 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 20:12:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 20:12:56 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 20:12:56 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 20:12:56 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 20:12:56 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 20:12:56 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4751 ms
2020-11-30 20:12:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 20:12:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5740ff5e
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5740ff5e
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5740ff5e
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2b0b7e5a
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6dc9da2d
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@17ba57f0
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7d70638
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7d70638
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d70638
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@73809e7
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@73809e7
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@73809e7
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67507df
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67507df
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67507df
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@33feb805
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@33feb805
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@33feb805
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6f8aba08
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6f8aba08
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6f8aba08
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@35c9a231
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@35c9a231
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@35c9a231
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2d55e826
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2d55e826
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2d55e826
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@29b40b3
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@29b40b3
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4fdca00a
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4fdca00a
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1a3e8e24
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1a3e8e24
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@55651434
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5634a861
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@75e09567
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@75e09567
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3e7b65d7
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3e7b65d7
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6949e948
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6949e948
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2e3572e8
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2e3572e8
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@633fd91
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@633fd91
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@44d64d4e
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@44d64d4e
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@60d6fdd4
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@60d6fdd4
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@619f2afc
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@619f2afc
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c52fc81
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c52fc81
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4f4c88f9
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f4c88f9
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6b63e6ad
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6b63e6ad
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@ae73c80
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@ae73c80
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@ae73c80
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@40a72ecd
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@257ef9ed
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@257ef9ed
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@257ef9ed
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64f981e2
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@12f49ca8
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@12f49ca8
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@21da4b5f
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@21da4b5f
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@9b76b60
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@9b76b60
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@15c487a8
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@15c487a8
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@40f35e52
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@40f35e52
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@443faa85
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@59a79443
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@59a79443
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@59a79443
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d50a7ca
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d50a7ca
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d50a7ca
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@21a02556
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@10a98392
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@697173d9
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@697173d9
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@697173d9
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d6d1d42
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d6d1d42
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d6d1d42
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2f894ad9
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@57545c3f
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@167381c7
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@167381c7
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@591a4f8e
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@57c00115
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57c00115
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@18a25bbd
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@18a25bbd
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e5aafc6
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5807efad
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1e60b459
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6a0f2853
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a0f2853
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6dc1dc69
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e9f2c32
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@19e0dffe
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d4e13e1
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3e0fbeb5
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3976ebfa
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2676dc05
2020-11-30 20:12:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b0a1231
2020-11-30 20:12:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5eabff6b
2020-11-30 20:12:58 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5eabff6b
2020-11-30 20:12:58 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@40f35e52
2020-11-30 20:12:58 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f379769] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1c57f6b2]
2020-11-30 20:12:58 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f379769] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@c412556]
2020-11-30 20:12:59 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 20:12:59 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 20:12:59 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 20:12:59 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 20:12:59 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@c412556] for TypeConfiguration
2020-11-30 20:12:59 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 20:13:01 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4dad2363, org.springframework.security.web.context.SecurityContextPersistenceFilter@59b3f754, org.springframework.security.web.header.HeaderWriterFilter@291cbe70, org.springframework.web.filter.CorsFilter@114b2414, org.springframework.security.web.authentication.logout.LogoutFilter@3063be68, com.app.config.JwtRequestFilter@2168def, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a510e0e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66dd04e2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@57920d6c, org.springframework.security.web.session.SessionManagementFilter@499c4d61, org.springframework.security.web.access.ExceptionTranslationFilter@57b3d869, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2c0a3826]
2020-11-30 20:13:02 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 20:13:02 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 20:13:02 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 20:13:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 20:13:03 [main] INFO  com.app.Application - Started Application in 12.243 seconds (JVM running for 13.264)
2020-11-30 20:13:20 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 20:13:20 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 20:13:20 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2020-11-30 20:13:20 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:13:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_ where membertype0_.slno is null
2020-11-30 20:13:41 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:13:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_ where membertype0_.slno=?
2020-11-30 20:13:41 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [10]
2020-11-30 20:13:50 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:13:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_ where membertype0_.slno=?
2020-11-30 20:13:50 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [13]
2020-11-30 20:13:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_8_] : [BIGINT]) - [13]
2020-11-30 20:13:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_8_] : [TIME]) - [20:02:15]
2020-11-30 20:13:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_8_] : [VARCHAR]) - [pooja]
2020-11-30 20:13:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_8_] : [DATE]) - [2020-11-30]
2020-11-30 20:13:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_8_] : [TIME]) - [null]
2020-11-30 20:13:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_8_] : [VARCHAR]) - [null]
2020-11-30 20:13:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_8_] : [DATE]) - [null]
2020-11-30 20:13:50 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_8_] : [VARCHAR]) - [stakholder]
2020-11-30 20:22:48 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 4128 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 20:22:48 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 20:22:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 20:22:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 195ms. Found 17 repository interfaces.
2020-11-30 20:22:50 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 20:22:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 20:22:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:22:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:22:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:22:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:22:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:22:50 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:22:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d6b68b6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:22:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6f6453a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:22:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:22:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4cafa9aa' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:22:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9438f65b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:22:50 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:22:50 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 20:22:50 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 20:22:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 20:22:51 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 20:22:51 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 20:22:51 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 20:22:51 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 20:22:51 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3699 ms
2020-11-30 20:22:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 20:22:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6fc1020a
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6fc1020a
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6fc1020a
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2596d7f4
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e4599c0
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6abdec0e
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@66933239
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@66933239
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66933239
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4f327096
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4f327096
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4f327096
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@41a374be
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@41a374be
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@41a374be
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1fc713c9
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1fc713c9
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1fc713c9
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@161aa04a
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@161aa04a
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@161aa04a
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4a901445
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4a901445
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a901445
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6dc9da2d
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6dc9da2d
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6dc9da2d
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ddb3ae8
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ddb3ae8
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6fbc1bb
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6fbc1bb
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@48df4071
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@48df4071
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@67507df
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71f1cc02
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@34332b8d
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34332b8d
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7cca01a8
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7cca01a8
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@45e9b12d
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@45e9b12d
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@329548d0
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@329548d0
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@49d30c6f
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@49d30c6f
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3bed3315
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3bed3315
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55651434
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55651434
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@37ad042b
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@37ad042b
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4086d8fb
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4086d8fb
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@633fd91
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@633fd91
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@44d64d4e
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@44d64d4e
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@60d6fdd4
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60d6fdd4
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60d6fdd4
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44a085e5
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2152ab30
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2152ab30
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2152ab30
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eb6ec6
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3f018494
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f018494
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7c52fc81
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7c52fc81
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@75e27856
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@75e27856
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1f3b992
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f3b992
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52bf7bf6
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52bf7bf6
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22f4f8f2
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@17410c07
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@17410c07
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@17410c07
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64f981e2
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64f981e2
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64f981e2
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@12f49ca8
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@44be69aa
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5d1e0fbb
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5d1e0fbb
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5d1e0fbb
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5562c2c9
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5562c2c9
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5562c2c9
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3f36e8d1
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@480b57e2
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5dc0ff7d
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5dc0ff7d
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@493ac8d3
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3003e580
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3003e580
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5f174dd2
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5f174dd2
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@697173d9
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1db87583
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6993c8df
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@77bc2e16
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@77bc2e16
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57c00115
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@411a5965
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fe533ff
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5377414a
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4e83a98
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17aa8a11
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@71b639d0
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@18a25bbd
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@39666e42
2020-11-30 20:22:53 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@39666e42
2020-11-30 20:22:53 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@52bf7bf6
2020-11-30 20:22:53 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@79476a4e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@52ae997b]
2020-11-30 20:22:54 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@79476a4e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@51ff3c4b]
2020-11-30 20:22:54 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 20:22:54 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 20:22:54 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 20:22:54 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 20:22:54 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@51ff3c4b] for TypeConfiguration
2020-11-30 20:22:54 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 20:22:55 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'memberType'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
2020-11-30 20:22:55 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-11-30 20:22:55 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-11-30 20:22:55 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-11-30 20:22:56 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-11-30 20:22:56 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 20:22:56 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@51ff3c4b] for TypeConfiguration
2020-11-30 20:22:56 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@76e9eed8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@51ff3c4b]
2020-11-30 20:22:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-11-30 20:22:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-11-30 20:22:56 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-11-30 20:22:56 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'memberType'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'memberType'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property memberType found for type MemberType!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-11-30 20:28:23 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 8164 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 20:28:23 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 20:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 20:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 223ms. Found 17 repository interfaces.
2020-11-30 20:28:26 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 20:28:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 20:28:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:28:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:28:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:28:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:28:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:28:26 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:28:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c2770b36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:28:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5b24d370] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:28:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:28:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1965539b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:28:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7ff97622] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:28:26 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:28:26 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 20:28:26 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 20:28:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 20:28:27 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 20:28:27 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 20:28:27 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 20:28:27 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 20:28:27 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4095 ms
2020-11-30 20:28:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 20:28:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@67f77f6e
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@67f77f6e
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@67f77f6e
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3119cf6f
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@68a78f3c
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2ddb3ae8
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6fbc1bb
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6fbc1bb
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6fbc1bb
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@48df4071
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@48df4071
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48df4071
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@692dba54
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@692dba54
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@692dba54
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@48eb001a
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@48eb001a
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@48eb001a
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@52b3bf03
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@52b3bf03
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@52b3bf03
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5626d18c
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5626d18c
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5626d18c
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@45f756e6
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@45f756e6
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@45f756e6
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@656f62dc
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@656f62dc
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5a8c93
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5a8c93
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1c7350b0
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1c7350b0
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50448409
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@37ad042b
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@470d183
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@470d183
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3ddeaa5f
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3ddeaa5f
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3bec5821
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3bec5821
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@176555c
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@176555c
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@97a145b
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@97a145b
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@526a9908
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@526a9908
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@60a19573
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@60a19573
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4db60246
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4db60246
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2806d6da
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2806d6da
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@cb39552
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@cb39552
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6749fe50
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6749fe50
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@bbd4791
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@bbd4791
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@bbd4791
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@76a14c8d
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@46f902e0
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@46f902e0
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@46f902e0
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@575b5f7d
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1b2df3aa
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1b2df3aa
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@625a9c5d
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@625a9c5d
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@127705e4
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@127705e4
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7c011174
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7c011174
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@561953e3
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@561953e3
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41da3aee
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@13dbed9e
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@13dbed9e
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@13dbed9e
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e766822
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e766822
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e766822
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@138aa3cc
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5f174dd2
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3d90eeb3
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3d90eeb3
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3d90eeb3
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7978e022
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7978e022
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7978e022
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6993c8df
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@36baa049
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@56382bc9
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56382bc9
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6ba060f3
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4fe533ff
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fe533ff
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1ee27d73
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1ee27d73
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5583098b
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7ce85af2
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3e906375
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@70c69586
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@70c69586
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@19e0dffe
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5d4e13e1
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e0fbeb5
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3976ebfa
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2676dc05
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b0a1231
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4833eff3
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4694f434
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4751e8b9
2020-11-30 20:28:29 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4751e8b9
2020-11-30 20:28:29 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@561953e3
2020-11-30 20:28:29 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4b515eab] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66c9b52f]
2020-11-30 20:28:29 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4b515eab] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@450f0235]
2020-11-30 20:28:30 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 20:28:31 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 20:28:31 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 20:28:31 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 20:28:31 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@450f0235] for TypeConfiguration
2020-11-30 20:28:31 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 20:28:32 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'memberType'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
2020-11-30 20:28:32 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-11-30 20:28:32 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-11-30 20:28:32 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-11-30 20:28:32 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-11-30 20:28:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 20:28:32 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@450f0235] for TypeConfiguration
2020-11-30 20:28:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4e647f39] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@450f0235]
2020-11-30 20:28:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-11-30 20:28:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-11-30 20:28:32 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-11-30 20:28:32 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'memberType'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'memberType'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property memberType found for type MemberType!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-11-30 20:31:41 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 12540 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 20:31:41 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 20:31:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 20:31:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 190ms. Found 17 repository interfaces.
2020-11-30 20:31:43 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 20:31:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 20:31:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:31:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:31:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:31:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:31:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:31:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:31:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$26dfa627] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:31:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$bf8d6e61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:31:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:31:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3e48e859' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:31:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e4621113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:31:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:31:44 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 20:31:44 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 20:31:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 20:31:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 20:31:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 20:31:45 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 20:31:45 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 20:31:45 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3855 ms
2020-11-30 20:31:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 20:31:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@d2291de
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@d2291de
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d2291de
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11f9535b
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@44fff386
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@76b47204
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6848a051
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6848a051
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6848a051
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2b0b7e5a
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2b0b7e5a
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b0b7e5a
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@68a78f3c
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@68a78f3c
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68a78f3c
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3c91530d
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3c91530d
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c91530d
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@f1dd5b4
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@f1dd5b4
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@f1dd5b4
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6e3ecf5c
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6e3ecf5c
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6e3ecf5c
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5f14761c
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5f14761c
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5f14761c
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@724b939e
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@724b939e
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@462abec3
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@462abec3
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3dc95b8b
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3dc95b8b
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@45f756e6
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@29b40b3
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4fdca00a
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4fdca00a
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1a3e8e24
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1a3e8e24
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@50448409
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@50448409
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@30b975ad
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@30b975ad
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@ea52184
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@ea52184
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7f608e21
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7f608e21
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@66236a0a
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@66236a0a
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@795f8317
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@795f8317
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@619f2afc
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@619f2afc
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34d45ec0
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34d45ec0
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3ce443f9
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3ce443f9
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7523a3dc
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7523a3dc
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7523a3dc
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1db7157f
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@cb39552
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cb39552
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cb39552
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b63e6ad
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@ae73c80
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@ae73c80
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@76a14c8d
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@76a14c8d
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@46f902e0
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@46f902e0
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7165d530
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7165d530
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7219ac49
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7219ac49
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@625a9c5d
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@127705e4
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@127705e4
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@127705e4
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7c011174
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7c011174
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7c011174
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@561953e3
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@41da3aee
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@13dbed9e
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@13dbed9e
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@13dbed9e
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2e766822
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2e766822
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2e766822
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@21a02556
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@10a98392
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3d90eeb3
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3d90eeb3
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d6d1d42
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@326e0b8e
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@326e0b8e
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@608b1fd2
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@608b1fd2
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53ed80d3
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77bc2e16
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4e83a98
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7930ffa9
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7930ffa9
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e906375
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40230eb9
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5b7aa898
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41b13f3d
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c0777b5
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2489e84a
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2a39aa2b
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62b93086
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@52ea0269
2020-11-30 20:31:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@52ea0269
2020-11-30 20:31:47 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7219ac49
2020-11-30 20:31:47 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707e4fe4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3281dfc2]
2020-11-30 20:31:48 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707e4fe4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@16a3cc88]
2020-11-30 20:31:48 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 20:31:48 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 20:31:48 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 20:31:48 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 20:31:49 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@16a3cc88] for TypeConfiguration
2020-11-30 20:31:49 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 20:31:50 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'memberType'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
2020-11-30 20:31:50 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-11-30 20:31:50 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-11-30 20:31:50 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-11-30 20:31:50 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-11-30 20:31:50 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 20:31:50 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@16a3cc88] for TypeConfiguration
2020-11-30 20:31:50 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5dce5c03] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@16a3cc88]
2020-11-30 20:31:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-11-30 20:31:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-11-30 20:31:50 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-11-30 20:31:50 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'memberType'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'memberType'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.MemberTypeRepository.findByMemberType(java.lang.String)! No property memberType found for type MemberType!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property memberType found for type MemberType!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-11-30 20:43:42 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 12664 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 20:43:42 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 20:43:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 20:43:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 181ms. Found 17 repository interfaces.
2020-11-30 20:43:44 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 20:43:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 20:43:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:43:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:43:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:43:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:43:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:43:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:43:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c259d63a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:43:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5b079e74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:43:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:43:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@773c0293' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:43:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7fdc4126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:43:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:43:44 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 20:43:44 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 20:43:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 20:43:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 20:43:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 20:43:45 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 20:43:45 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 20:43:45 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3447 ms
2020-11-30 20:43:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 20:43:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6801b414
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6801b414
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6801b414
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d61a348
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@51c8f62c
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@8cc8cdb
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@76b47204
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@76b47204
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@76b47204
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6848a051
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6848a051
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6848a051
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2b0b7e5a
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2b0b7e5a
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2b0b7e5a
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@68a78f3c
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@68a78f3c
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@68a78f3c
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3c91530d
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3c91530d
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3c91530d
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@f1dd5b4
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@f1dd5b4
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f1dd5b4
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6e3ecf5c
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6e3ecf5c
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6e3ecf5c
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5f14761c
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5f14761c
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@724b939e
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@724b939e
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@462abec3
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@462abec3
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5626d18c
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2d55e826
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@29b40b3
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@29b40b3
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4fdca00a
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4fdca00a
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1a3e8e24
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1a3e8e24
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@50448409
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@50448409
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@30b975ad
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@30b975ad
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@ea52184
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@ea52184
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f608e21
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f608e21
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@66236a0a
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@66236a0a
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60d6fdd4
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60d6fdd4
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4db60246
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4db60246
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@34d45ec0
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34d45ec0
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3ce443f9
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3ce443f9
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3ce443f9
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@62b790a5
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1db7157f
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1db7157f
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1db7157f
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4f4c88f9
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6b63e6ad
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6b63e6ad
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@ae73c80
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ae73c80
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@76a14c8d
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@76a14c8d
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@46f902e0
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@46f902e0
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7165d530
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7165d530
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b2df3aa
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@625a9c5d
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@625a9c5d
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@625a9c5d
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@127705e4
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@127705e4
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@127705e4
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7c011174
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@40f35e52
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@41da3aee
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@41da3aee
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@41da3aee
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13dbed9e
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13dbed9e
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13dbed9e
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1d50a7ca
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3003e580
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5f174dd2
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f174dd2
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@697173d9
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7978e022
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7978e022
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@41184371
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@41184371
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@15f35bc3
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@56382bc9
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@20a7953c
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@53a84ff4
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@53a84ff4
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@56f730b2
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@47311277
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7930ffa9
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1e60b459
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@717d7587
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e906375
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@40230eb9
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b7aa898
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4eaf7902
2020-11-30 20:43:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4eaf7902
2020-11-30 20:43:47 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7165d530
2020-11-30 20:43:47 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45e6d1e0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@61db86bf]
2020-11-30 20:43:47 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45e6d1e0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@23444a36]
2020-11-30 20:43:48 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 20:43:49 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 20:43:49 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 20:43:49 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 20:43:49 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@23444a36] for TypeConfiguration
2020-11-30 20:43:49 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 20:43:50 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77a85e76, org.springframework.security.web.context.SecurityContextPersistenceFilter@4feec184, org.springframework.security.web.header.HeaderWriterFilter@c6c84fa, org.springframework.web.filter.CorsFilter@2cebf82f, org.springframework.security.web.authentication.logout.LogoutFilter@18dbc1b, com.app.config.JwtRequestFilter@64544ee4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3278d065, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@51f4439e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@34fc315d, org.springframework.security.web.session.SessionManagementFilter@74231642, org.springframework.security.web.access.ExceptionTranslationFilter@12a0d249, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@45cb5307]
2020-11-30 20:43:50 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 20:43:50 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 20:43:51 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 20:43:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 20:43:51 [main] INFO  com.app.Application - Started Application in 9.745 seconds (JVM running for 10.512)
2020-11-30 20:44:36 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 20:44:36 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 20:44:36 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2020-11-30 20:44:37 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:44:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_ where membertype0_.slno=?
2020-11-30 20:44:37 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [13]
2020-11-30 20:44:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_8_] : [BIGINT]) - [13]
2020-11-30 20:44:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_8_] : [TIME]) - [20:02:15]
2020-11-30 20:44:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_8_] : [VARCHAR]) - [pooja]
2020-11-30 20:44:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_8_] : [DATE]) - [2020-11-30]
2020-11-30 20:44:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_8_] : [TIME]) - [null]
2020-11-30 20:44:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_8_] : [VARCHAR]) - [null]
2020-11-30 20:44:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_8_] : [DATE]) - [null]
2020-11-30 20:44:37 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_8_] : [VARCHAR]) - [stakholder]
2020-11-30 20:45:27 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:45:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_ where membertype0_.slno=?
2020-11-30 20:45:27 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [13]
2020-11-30 20:45:27 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_8_] : [BIGINT]) - [13]
2020-11-30 20:45:27 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_8_] : [TIME]) - [20:02:15]
2020-11-30 20:45:27 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_8_] : [VARCHAR]) - [pooja]
2020-11-30 20:45:27 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_8_] : [DATE]) - [2020-11-30]
2020-11-30 20:45:27 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_8_] : [TIME]) - [null]
2020-11-30 20:45:27 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_8_] : [VARCHAR]) - [null]
2020-11-30 20:45:27 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_8_] : [DATE]) - [null]
2020-11-30 20:45:27 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_8_] : [VARCHAR]) - [stakholder]
2020-11-30 20:45:39 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:45:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_ where membertype0_.slno=?
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [13]
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_8_] : [BIGINT]) - [13]
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_8_] : [TIME]) - [20:02:15]
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_8_] : [VARCHAR]) - [pooja]
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_8_] : [DATE]) - [2020-11-30]
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_8_] : [TIME]) - [null]
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_8_] : [VARCHAR]) - [null]
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_8_] : [DATE]) - [null]
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_8_] : [VARCHAR]) - [stakholder]
2020-11-30 20:45:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_ where membertype0_.name=?
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [satish]
2020-11-30 20:45:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update gen_std_member_type set name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [satish]
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [admin]
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-11-30]
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [20:45:39]
2020-11-30 20:45:39 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [13]
2020-11-30 20:45:48 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:45:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_
2020-11-30 20:45:48 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_8_] : [BIGINT]) - [13]
2020-11-30 20:45:48 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_8_] : [TIME]) - [20:02:15]
2020-11-30 20:45:48 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_8_] : [VARCHAR]) - [pooja]
2020-11-30 20:45:48 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_8_] : [DATE]) - [2020-11-30]
2020-11-30 20:45:48 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_8_] : [TIME]) - [20:45:39]
2020-11-30 20:45:48 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_8_] : [VARCHAR]) - [admin]
2020-11-30 20:45:48 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_8_] : [DATE]) - [2020-11-30]
2020-11-30 20:45:48 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_8_] : [VARCHAR]) - [satish]
2020-11-30 20:52:15 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 4164 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-11-30 20:52:15 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-11-30 20:52:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-11-30 20:52:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 216ms. Found 17 repository interfaces.
2020-11-30 20:52:17 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-11-30 20:52:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-11-30 20:52:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:52:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:52:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:52:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:52:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-11-30 20:52:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-11-30 20:52:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8954a230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:52:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$22026a6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:52:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:52:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@383f1975' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:52:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$46d70d1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:52:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-30 20:52:18 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-11-30 20:52:18 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-11-30 20:52:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-30 20:52:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-11-30 20:52:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-11-30 20:52:19 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-11-30 20:52:19 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-11-30 20:52:19 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3989 ms
2020-11-30 20:52:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-11-30 20:52:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@28f4f300
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@28f4f300
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@28f4f300
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69f0b0f4
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@41ad373
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4f327096
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@41a374be
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@41a374be
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@41a374be
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1fc713c9
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1fc713c9
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1fc713c9
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@161aa04a
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@161aa04a
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@161aa04a
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4a901445
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4a901445
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4a901445
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6dc9da2d
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6dc9da2d
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6dc9da2d
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2ddb3ae8
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2ddb3ae8
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ddb3ae8
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6fbc1bb
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6fbc1bb
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fbc1bb
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@48df4071
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@48df4071
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@692dba54
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@692dba54
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@48eb001a
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@48eb001a
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6f8aba08
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7cca01a8
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@45e9b12d
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@45e9b12d
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@329548d0
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@329548d0
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@49d30c6f
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@49d30c6f
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3bed3315
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3bed3315
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@55651434
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@55651434
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@37ad042b
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@37ad042b
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@470d183
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@470d183
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3ddeaa5f
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3ddeaa5f
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@c386958
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@c386958
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@60d6fdd4
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60d6fdd4
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@619f2afc
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@619f2afc
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7d32e714
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7d32e714
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7d32e714
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18137eab
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@57fbc06f
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@57fbc06f
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@57fbc06f
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c52fc81
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@75e27856
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@75e27856
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1f3b992
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1f3b992
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@52bf7bf6
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@52bf7bf6
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@40a72ecd
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@40a72ecd
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@257ef9ed
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@257ef9ed
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@64f981e2
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@12f49ca8
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@12f49ca8
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@12f49ca8
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21da4b5f
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21da4b5f
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21da4b5f
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@9b76b60
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5562c2c9
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@794366a5
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@794366a5
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@794366a5
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@443faa85
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@443faa85
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@443faa85
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5dc0ff7d
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@493ac8d3
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3003e580
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3003e580
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c8a7e38
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@697173d9
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697173d9
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7978e022
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7978e022
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6993c8df
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@36baa049
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@56382bc9
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@18a25bbd
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@18a25bbd
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e5aafc6
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@542f6803
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5583098b
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5807efad
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53a84ff4
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ce85af2
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@316acbb5
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56f730b2
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@79476a4e
2020-11-30 20:52:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@79476a4e
2020-11-30 20:52:20 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@257ef9ed
2020-11-30 20:52:20 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7061622] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@32d418a9]
2020-11-30 20:52:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7061622] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@12fcb2c3]
2020-11-30 20:52:21 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-11-30 20:52:22 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-11-30 20:52:22 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-11-30 20:52:22 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-11-30 20:52:22 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@12fcb2c3] for TypeConfiguration
2020-11-30 20:52:22 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-30 20:52:23 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a5fab78, org.springframework.security.web.context.SecurityContextPersistenceFilter@4a6facb0, org.springframework.security.web.header.HeaderWriterFilter@3c62be3c, org.springframework.web.filter.CorsFilter@77a85e76, org.springframework.security.web.authentication.logout.LogoutFilter@74badf19, com.app.config.JwtRequestFilter@5be69f7e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5e055ce1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5da3f32a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2cebf82f, org.springframework.security.web.session.SessionManagementFilter@5b895e76, org.springframework.security.web.access.ExceptionTranslationFilter@33fec21, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@764db16c]
2020-11-30 20:52:24 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-30 20:52:24 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-30 20:52:24 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-11-30 20:52:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-11-30 20:52:24 [main] INFO  com.app.Application - Started Application in 9.987 seconds (JVM running for 10.81)
2020-11-30 20:52:45 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-30 20:52:45 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-30 20:52:45 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-11-30 20:52:45 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:52:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_ where membertype0_.slno=?
2020-11-30 20:52:46 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [13]
2020-11-30 20:52:46 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_8_] : [BIGINT]) - [13]
2020-11-30 20:52:46 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_8_] : [TIME]) - [20:02:15]
2020-11-30 20:52:46 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_8_] : [VARCHAR]) - [pooja]
2020-11-30 20:52:46 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_8_] : [DATE]) - [2020-11-30]
2020-11-30 20:52:46 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_8_] : [TIME]) - [20:45:39]
2020-11-30 20:52:46 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_8_] : [VARCHAR]) - [admin]
2020-11-30 20:52:46 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_8_] : [DATE]) - [2020-11-30]
2020-11-30 20:52:46 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_8_] : [VARCHAR]) - [satish]
2020-11-30 20:52:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - DELETE FROM gen_std_member_type WHERE slno = ?
2020-11-30 20:52:46 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [13]
2020-11-30 20:52:53 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:52:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_
2020-11-30 20:54:04 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-11-30 20:54:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select membertype0_.slno as slno1_8_, membertype0_.created_at as created_2_8_, membertype0_.created_by as created_3_8_, membertype0_.created_on as created_4_8_, membertype0_.modified_at as modified5_8_, membertype0_.modified_by as modified6_8_, membertype0_.modified_on as modified7_8_, membertype0_.name as name8_8_ from gen_std_member_type membertype0_
