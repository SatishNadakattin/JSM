2020-12-07 09:59:53 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9896 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 09:59:53 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 09:59:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 09:59:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 236ms. Found 24 repository interfaces.
2020-12-07 09:59:55 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 09:59:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 09:59:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 09:59:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 09:59:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 09:59:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 09:59:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 09:59:56 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 09:59:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e37dd37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 09:59:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b6e5a571] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 09:59:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 09:59:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6124287a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 09:59:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$dbba4823] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 09:59:56 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 09:59:56 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 09:59:56 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 09:59:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 09:59:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 09:59:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 09:59:57 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 09:59:57 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 09:59:57 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4078 ms
2020-12-07 09:59:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 09:59:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6bccd036
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6bccd036
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6bccd036
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@cb39552
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b63e6ad
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@52bf7bf6
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@40a72ecd
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@40a72ecd
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@40a72ecd
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@257ef9ed
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@257ef9ed
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@257ef9ed
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@575b5f7d
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@575b5f7d
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@575b5f7d
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1b2df3aa
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1b2df3aa
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b2df3aa
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@625a9c5d
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@625a9c5d
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@625a9c5d
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@127705e4
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@127705e4
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@127705e4
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7c011174
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7c011174
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7c011174
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@561953e3
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@561953e3
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@64920dc2
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@64920dc2
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2b38b1f
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b38b1f
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2e766822
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@21a02556
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5f174dd2
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5f174dd2
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3d90eeb3
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3d90eeb3
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7978e022
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7978e022
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@326e0b8e
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@326e0b8e
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@15f35bc3
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@15f35bc3
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@53ed80d3
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@53ed80d3
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@20a7953c
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@20a7953c
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e83a98
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e83a98
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e60b459
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e60b459
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2489e84a
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2489e84a
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@29ebbdf4
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29ebbdf4
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@70c69586
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@70c69586
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@70c69586
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19e0dffe
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@b0a1231
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@b0a1231
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@b0a1231
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@56928e17
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@60dd0587
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60dd0587
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4976085
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4976085
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1192b58e
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1192b58e
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3134153d
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3134153d
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e3eb0cd
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e3eb0cd
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3468ee6e
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@58d6e55a
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@58d6e55a
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@58d6e55a
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f5ce0bb
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f5ce0bb
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f5ce0bb
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@311ff287
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@109f8c7e
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1a8b81e8
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a8b81e8
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1a8b81e8
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@49fa1d74
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@49fa1d74
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@49fa1d74
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6bc24e72
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a097d77
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6d2a2560
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6d2a2560
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@24eeac69
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@346f41a9
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@346f41a9
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6d8796c1
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d8796c1
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c413ffc
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b8ec001
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@58606c91
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1e0fdb2f
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1e0fdb2f
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@47768e74
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2740e316
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5b5a4aed
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c991465
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5fef2aac
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7f973a14
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@76130a29
2020-12-07 09:59:59 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@124d02b2
2020-12-07 10:00:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@15fb4566
2020-12-07 10:00:00 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@15fb4566
2020-12-07 10:00:00 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6e3eb0cd
2020-12-07 10:00:00 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cdc7b09] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7364eed1]
2020-12-07 10:00:01 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cdc7b09] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1d2fb82]
2020-12-07 10:00:02 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 10:00:02 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 10:00:02 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 10:00:02 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 10:00:02 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1d2fb82] for TypeConfiguration
2020-12-07 10:00:02 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 10:00:05 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6be80629, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a85e86e, org.springframework.security.web.header.HeaderWriterFilter@a859c5, org.springframework.web.filter.CorsFilter@20a4cba7, org.springframework.security.web.authentication.logout.LogoutFilter@2f112ade, com.app.config.JwtRequestFilter@44392e64, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@10724a72, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ecec098, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10f10230, org.springframework.security.web.session.SessionManagementFilter@d65e744, org.springframework.security.web.access.ExceptionTranslationFilter@75f2ff80, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7dc92a06]
2020-12-07 10:00:05 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 10:00:05 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 10:00:05 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 10:00:06 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 10:00:06 [main] INFO  com.app.Application - Started Application in 12.908 seconds (JVM running for 14.009)
2020-12-07 10:00:07 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 10:00:07 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 10:00:07 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2020-12-07 10:00:07 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 10:00:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [2]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [17:00:39]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0030-09-10 00:00:00.0]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavaliiiii]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [18:46:52]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [satish]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 10:00:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 10:00:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 10:00:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 10:00:08 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 10:05:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_, branch0_.address as address2_2_, branch0_.code as code3_2_, branch0_.contact_name as contact_4_2_, branch0_.created_at as created_5_2_, branch0_.created_by as created_6_2_, branch0_.created_on as created_7_2_, branch0_.email_id as email_id8_2_, branch0_.mobile_no as mobile_n9_2_, branch0_.modified_at as modifie10_2_, branch0_.modified_by as modifie11_2_, branch0_.modified_on as modifie12_2_, branch0_.name as name13_2_, branch0_.phone_no as phone_n14_2_, branch0_.pincode as pincode15_2_, branch0_.state_slno as state_s16_2_ from gen_std_branch branch0_
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [48]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [mysore1]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [HSR-20203]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [pooja11]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [17:21:38]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [satish]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [2020-12-02]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [969362587411]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [HSR3]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [5236419871]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [587201]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [46]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [49]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [47]
2020-12-07 10:05:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-07 10:05:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [47]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [satish]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:54]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 10:05:23 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [karnataka]
2020-12-07 10:05:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_
2020-12-07 10:05:38 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-07 10:05:38 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-07 10:05:38 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-07 10:05:38 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-07 10:05:38 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-07 10:05:38 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-07 10:05:38 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-07 10:05:38 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-07 10:05:38 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-07 10:07:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.from_year=? and financialy0_.to_year=?
2020-12-07 10:07:59 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [2022]
2020-12-07 10:07:59 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [2023]
2020-12-07 10:07:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-07 10:07:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - insert into gen_std_financial_year (created_at, created_by, created_on, from_year, modified_at, modified_by, modified_on, to_year, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-07 10:07:59 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [10:07:59]
2020-12-07 10:07:59 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [keerthana]
2020-12-07 10:07:59 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-07]
2020-12-07 10:07:59 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [2022]
2020-12-07 10:07:59 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [TIME] - [null]
2020-12-07 10:07:59 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [null]
2020-12-07 10:07:59 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DATE] - [null]
2020-12-07 10:07:59 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [2023]
2020-12-07 10:07:59 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [100]
2020-12-07 10:08:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [100]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [10:07:59]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [keerthana]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-07]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2022]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-07 10:08:08 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2023]
2020-12-07 10:10:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - Select * FROM gen_std_state WHERE slno = ?
2020-12-07 10:10:12 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-07 10:11:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_, branch0_.address as address2_2_, branch0_.code as code3_2_, branch0_.contact_name as contact_4_2_, branch0_.created_at as created_5_2_, branch0_.created_by as created_6_2_, branch0_.created_on as created_7_2_, branch0_.email_id as email_id8_2_, branch0_.mobile_no as mobile_n9_2_, branch0_.modified_at as modifie10_2_, branch0_.modified_by as modifie11_2_, branch0_.modified_on as modifie12_2_, branch0_.name as name13_2_, branch0_.phone_no as phone_n14_2_, branch0_.pincode as pincode15_2_, branch0_.state_slno as state_s16_2_ from gen_std_branch branch0_
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [48]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [mysore1]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [HSR-20203]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [pooja11]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [17:21:38]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [satish]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [2020-12-02]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [969362587411]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [HSR3]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [5236419871]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [587201]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [46]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [49]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [47]
2020-12-07 10:11:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-07 10:11:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [47]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [satish]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:54]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 10:11:04 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [karnataka]
2020-12-07 10:11:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_state WHERE slno = ?
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [46]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [pooja]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_slno] : [BIGINT]) - [1]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:19:37]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [Goa]
2020-12-07 10:11:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select country0_.slno as slno1_4_0_, country0_.created_at as created_2_4_0_, country0_.created_by as created_3_4_0_, country0_.created_on as created_4_4_0_, country0_.modified_at as modified5_4_0_, country0_.modified_by as modified6_4_0_, country0_.modified_on as modified7_4_0_, country0_.name as name8_4_0_ from gen_std_country country0_ where country0_.slno=?
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_0_] : [TIME]) - [19:09:03]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_0_] : [VARCHAR]) - [pooja]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_0_] : [DATE]) - [2020-11-28]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_0_] : [TIME]) - [19:12:27]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_0_] : [VARCHAR]) - [admin]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_0_] : [DATE]) - [2020-11-28]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_0_] : [VARCHAR]) - [India]
2020-12-07 10:11:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_, branch0_.address as address2_2_, branch0_.code as code3_2_, branch0_.contact_name as contact_4_2_, branch0_.created_at as created_5_2_, branch0_.created_by as created_6_2_, branch0_.created_on as created_7_2_, branch0_.email_id as email_id8_2_, branch0_.mobile_no as mobile_n9_2_, branch0_.modified_at as modifie10_2_, branch0_.modified_by as modifie11_2_, branch0_.modified_on as modifie12_2_, branch0_.name as name13_2_, branch0_.phone_no as phone_n14_2_, branch0_.pincode as pincode15_2_, branch0_.state_slno as state_s16_2_ from gen_std_branch branch0_ where branch0_.name=? and branch0_.state_slno=?
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [BTM]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [46]
2020-12-07 10:11:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-07 10:11:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into gen_std_branch (address, code, contact_name, created_at, created_by, created_on, email_id, mobile_no, modified_at, modified_by, modified_on, name, phone_no, pincode, state_slno, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [Banglore]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [BTM-2020]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [abc]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [10:11:29]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [keerthana]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [2020-12-07]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [abc@gmail1.com]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [9972920707]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [TIME] - [null]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [VARCHAR] - [null]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [DATE] - [null]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [12] as [VARCHAR] - [BTM]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [13] as [VARCHAR] - [9997778888]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [14] as [INTEGER] - [580018]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [15] as [BIGINT] - [46]
2020-12-07 10:11:29 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [16] as [BIGINT] - [101]
2020-12-07 10:11:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_, branch0_.address as address2_2_, branch0_.code as code3_2_, branch0_.contact_name as contact_4_2_, branch0_.created_at as created_5_2_, branch0_.created_by as created_6_2_, branch0_.created_on as created_7_2_, branch0_.email_id as email_id8_2_, branch0_.mobile_no as mobile_n9_2_, branch0_.modified_at as modifie10_2_, branch0_.modified_by as modifie11_2_, branch0_.modified_on as modifie12_2_, branch0_.name as name13_2_, branch0_.phone_no as phone_n14_2_, branch0_.pincode as pincode15_2_, branch0_.state_slno as state_s16_2_ from gen_std_branch branch0_
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [48]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [mysore1]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [HSR-20203]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [pooja11]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [17:21:38]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [satish]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [2020-12-02]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [969362587411]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [HSR3]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [5236419871]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [587201]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [46]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [49]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [47]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [101]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [Banglore]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [BTM-2020]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [abc]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [10:11:29]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [keerthana]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [2020-12-07]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [abc@gmail1.com]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [9972920707]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [BTM]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [9997778888]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [580018]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [46]
2020-12-07 10:11:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-07 10:11:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [47]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [satish]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:54]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 10:11:36 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [karnataka]
2020-12-07 10:14:10 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 10:14:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [101]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [101]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [Banglore]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [BTM-2020]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [abc]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:11:29]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [keerthana]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-07]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [abc@gmail1.com]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [9972920707]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [BTM]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [9997778888]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [580018]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-07 10:14:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-07 10:14:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [100]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [100]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [10:07:59]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [keerthana]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-07]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2022]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2023]
2020-12-07 10:14:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE holiday_date = ?
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIMESTAMP] - [Tue Jun 12 00:00:00 IST 31]
2020-12-07 10:14:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-07 10:14:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into gen_std_holiday_list (branch_slno, created_at, created_by, created_on, financial_year_slno, holiday_date, holiday_name, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [101]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [10:14:10]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [keerthana]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIMESTAMP] - [Mon Dec 07 10:14:10 IST 2020]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [100]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [TIMESTAMP] - [Tue Jun 12 00:00:00 IST 31]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Christmas]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [TIME] - [null]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [VARCHAR] - [null]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [TIMESTAMP] - [null]
2020-12-07 10:14:10 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [BIGINT] - [102]
2020-12-07 10:38:31 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 10:38:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select sbtype0_.slno as slno1_18_, sbtype0_.created_at as created_2_18_, sbtype0_.created_by as created_3_18_, sbtype0_.created_on as created_4_18_, sbtype0_.modified_at as modified5_18_, sbtype0_.modified_by as modified6_18_, sbtype0_.modified_on as modified7_18_, sbtype0_.name as name8_18_ from gen_std_sb_type sbtype0_
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [1]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:31:21]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Saving Plus Account ]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [3]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:08]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Student Saving Account ]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [4]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:34:23]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [2]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [11:33:50]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-02]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [11:41:52]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [satish]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [2020-12-02]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account ]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [5]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:35:25]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [sat]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Savings Account]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_18_] : [BIGINT]) - [6]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_18_] : [TIME]) - [17:46:03]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_18_] : [VARCHAR]) - [Keerthana]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_18_] : [DATE]) - [2020-12-05]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_18_] : [TIME]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_18_] : [VARCHAR]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_18_] : [DATE]) - [null]
2020-12-07 10:38:31 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_18_] : [VARCHAR]) - [Salary Saving Account]
2020-12-07 10:38:41 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 10:38:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [2]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [17:00:39]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavali]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0030-09-10 00:00:00.0]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavaliiiii]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [18:46:52]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [satish]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [3]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [101]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [10:14:10]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [keerthana]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [100]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Christmas]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 10:38:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 10:38:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [101]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [Banglore]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [BTM-2020]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [abc]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [10:11:29]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [keerthana]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-07]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [abc@gmail1.com]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [9972920707]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [BTM]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [9997778888]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [580018]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 10:38:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [100]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [10:07:59]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [keerthana]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-07]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2022]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 10:38:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2023]
2020-12-07 10:39:57 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 10:39:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE slno = ?
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [2]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:00:39]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [94]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [1997-01-25 00:03:00.0]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [Dipavali]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [null]
2020-12-07 10:39:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 10:39:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 10:39:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update gen_std_holiday_list set branch_slno=?, financial_year_slno=?,holiday_date=?,holiday_name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [94]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [TIMESTAMP] - [Sun Sep 10 00:00:00 IST 30]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [my birthday]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [satish]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [2020-12-07]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIME] - [10:39:57]
2020-12-07 10:39:57 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [2]
2020-12-07 10:40:14 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 10:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_ where holidaylis0_.slno=?
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [2]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [17:00:39]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0030-09-10 00:00:00.0]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [my birthday]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [10:39:57]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [satish]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 10:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 10:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 10:40:14 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:05:00 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9696 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 11:05:00 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 11:05:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 11:05:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 197ms. Found 24 repository interfaces.
2020-12-07 11:05:02 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 11:05:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 11:05:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 11:05:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 11:05:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 11:05:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 11:05:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 11:05:02 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 11:05:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$23df008] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:05:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9aebb842] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:05:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:05:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@78e89bfe' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:05:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bfc05af4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:05:02 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:05:02 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 11:05:02 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 11:05:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 11:05:05 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 11:05:05 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 11:05:05 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 11:05:05 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 11:05:05 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5199 ms
2020-12-07 11:05:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 11:05:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@15c487a8
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@15c487a8
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15c487a8
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@794366a5
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@340d6d89
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1ee47d9e
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@493ac8d3
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@493ac8d3
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@493ac8d3
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@51ab1ee3
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@51ab1ee3
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@51ab1ee3
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c8a7e38
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c8a7e38
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c8a7e38
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1945113f
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1945113f
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1945113f
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1db87583
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1db87583
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1db87583
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2f894ad9
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2f894ad9
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2f894ad9
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@36baa049
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@36baa049
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36baa049
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@167381c7
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@167381c7
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ba060f3
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ba060f3
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@57c00115
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@57c00115
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5377414a
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71b639d0
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@542f6803
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@542f6803
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@316acbb5
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@316acbb5
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@717d7587
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@717d7587
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c0777b5
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c0777b5
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e642ee1
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e642ee1
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1eff3cfb
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1eff3cfb
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d4e13e1
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d4e13e1
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4833eff3
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4833eff3
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e38f0b7
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e38f0b7
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@767599a7
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@767599a7
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@463561c5
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@463561c5
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@58c1da09
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@58c1da09
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@58c1da09
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@751ae8a4
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@47e51549
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@47e51549
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@47e51549
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5ebffb44
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5edacf20
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5edacf20
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@234cff57
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@234cff57
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3f362135
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3f362135
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2a097d77
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2a097d77
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a916402
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a916402
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@62d1dc3c
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7f2d31af
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7f2d31af
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7f2d31af
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1084f78c
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1084f78c
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1084f78c
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2f74900b
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@27be17c8
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1e95b653
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e95b653
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1e95b653
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3df1a1ac
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3df1a1ac
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3df1a1ac
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4baed682
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2c2a027c
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@34a2d6e0
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@34a2d6e0
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e0fdb2f
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5fef2aac
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5fef2aac
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@66deec87
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@66deec87
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53e76c11
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6a1d6ef2
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@61514735
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@ebe067d
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ebe067d
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2b7e8044
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@550de6b8
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a1706e1
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c6c4689
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63cf9de0
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@594d9f07
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5befbac1
2020-12-07 11:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5e9f73b
2020-12-07 11:05:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4fc165f6
2020-12-07 11:05:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4fc165f6
2020-12-07 11:05:08 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6a916402
2020-12-07 11:05:08 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7741771e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@834e986]
2020-12-07 11:05:08 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7741771e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@46394f65]
2020-12-07 11:05:09 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 11:05:09 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 11:05:09 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 11:05:09 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 11:05:10 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@46394f65] for TypeConfiguration
2020-12-07 11:05:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 11:05:12 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
2020-12-07 11:05:12 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-07 11:05:12 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 11:05:12 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 11:05:12 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-07 11:05:12 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 11:05:12 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@46394f65] for TypeConfiguration
2020-12-07 11:05:12 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7e1fb22c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@46394f65]
2020-12-07 11:05:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-07 11:05:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-07 11:05:12 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-07 11:05:12 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property holidayList found for type HolidayList!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:93)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-12-07 11:12:58 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 2176 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 11:12:58 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 11:12:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 11:12:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 224ms. Found 24 repository interfaces.
2020-12-07 11:13:00 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 11:13:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 11:13:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 11:13:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 11:13:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 11:13:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 11:13:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 11:13:00 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 11:13:00 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4fafa9bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:13:00 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e85d71f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:13:00 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:13:00 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@24fabd0f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:13:00 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d3214a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:13:00 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:13:00 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 11:13:00 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 11:13:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 11:13:01 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 11:13:01 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 11:13:01 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 11:13:02 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 11:13:02 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3916 ms
2020-12-07 11:13:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 11:13:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@355c94be
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@355c94be
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@355c94be
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@157ec23b
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@526a9908
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@60d6fdd4
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@619f2afc
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@619f2afc
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@619f2afc
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7d32e714
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7d32e714
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d32e714
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2935fd2c
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2935fd2c
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2935fd2c
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@62b790a5
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@62b790a5
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@62b790a5
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1db7157f
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1db7157f
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1db7157f
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@cb39552
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@cb39552
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@cb39552
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6749fe50
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6749fe50
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6749fe50
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@bbd4791
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@bbd4791
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ee99964
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ee99964
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@361abd01
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@361abd01
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7165d530
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1b2df3aa
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@625a9c5d
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@625a9c5d
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@127705e4
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@127705e4
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c011174
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c011174
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@561953e3
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@561953e3
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64920dc2
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64920dc2
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2b38b1f
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2b38b1f
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28757abd
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28757abd
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@30839e44
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@30839e44
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@326e0b8e
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@326e0b8e
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@608b1fd2
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@608b1fd2
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7c51782d
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7c51782d
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@411a5965
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411a5965
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411a5965
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e83a98
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1ee27d73
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1ee27d73
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1ee27d73
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5583098b
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@56f730b2
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@56f730b2
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3e906375
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e906375
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2489e84a
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2489e84a
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@29ebbdf4
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@29ebbdf4
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@70c69586
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@70c69586
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@19e0dffe
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@b0a1231
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@b0a1231
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@b0a1231
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5a49af50
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5a49af50
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5a49af50
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@221a2068
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4976085
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1192b58e
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1192b58e
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1192b58e
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3134153d
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3134153d
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3134153d
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@25d0cb3a
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@463561c5
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@58d6e55a
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@58d6e55a
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4232b34a
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@311ff287
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@311ff287
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1220ef43
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1220ef43
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e8507f1
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@49fa1d74
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@53c1179a
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@22d9bc14
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@22d9bc14
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@25f723b0
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4aa11206
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40d60f2
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3382cf68
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f74900b
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6d8796c1
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e26173
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@27be17c8
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@ea04cab
2020-12-07 11:13:03 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@ea04cab
2020-12-07 11:13:03 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@70c69586
2020-12-07 11:13:04 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1fd7a37] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5b202ff]
2020-12-07 11:13:04 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1fd7a37] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3c7279a5]
2020-12-07 11:13:05 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 11:13:05 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 11:13:05 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 11:13:05 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 11:13:05 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3c7279a5] for TypeConfiguration
2020-12-07 11:13:05 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 11:13:06 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
2020-12-07 11:13:06 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-07 11:13:06 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 11:13:06 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 11:13:06 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-07 11:13:06 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 11:13:06 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3c7279a5] for TypeConfiguration
2020-12-07 11:13:06 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@41bbb219] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3c7279a5]
2020-12-07 11:13:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-07 11:13:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-07 11:13:06 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-07 11:13:06 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property holidayList found for type HolidayList!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:93)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-12-07 11:35:40 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 6056 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 11:35:40 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 11:35:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 11:35:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 191ms. Found 24 repository interfaces.
2020-12-07 11:35:42 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 11:35:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 11:35:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 11:35:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 11:35:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 11:35:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 11:35:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 11:35:42 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 11:35:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e95818d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:35:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8205e10a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:35:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:35:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@60e5272' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:35:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$a6da83bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:35:42 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:35:43 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 11:35:43 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 11:35:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 11:35:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 11:35:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 11:35:43 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 11:35:44 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 11:35:44 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3482 ms
2020-12-07 11:35:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 11:35:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@526a9908
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@526a9908
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@526a9908
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60d6fdd4
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@44a085e5
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@df921b1
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@eb6ec6
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@eb6ec6
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eb6ec6
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3f018494
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3f018494
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3f018494
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7c52fc81
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7c52fc81
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7c52fc81
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@75e27856
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@75e27856
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75e27856
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1f3b992
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1f3b992
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f3b992
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@52bf7bf6
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@52bf7bf6
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@52bf7bf6
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@40a72ecd
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@40a72ecd
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@40a72ecd
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@257ef9ed
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@257ef9ed
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@575b5f7d
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@575b5f7d
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1b2df3aa
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1b2df3aa
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@21da4b5f
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d1e0fbb
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5562c2c9
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5562c2c9
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@794366a5
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@794366a5
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@443faa85
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@443faa85
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@59a79443
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@59a79443
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1d50a7ca
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1d50a7ca
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21a02556
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21a02556
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f174dd2
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f174dd2
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d90eeb3
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d90eeb3
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@167381c7
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@167381c7
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77bc2e16
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77bc2e16
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4fe533ff
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4fe533ff
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@18a25bbd
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18a25bbd
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18a25bbd
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e5aafc6
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7ce85af2
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7ce85af2
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7ce85af2
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@47311277
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@40230eb9
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40230eb9
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2a39aa2b
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2a39aa2b
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2fd954f
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2fd954f
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6dc1dc69
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6dc1dc69
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3976ebfa
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3976ebfa
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4833eff3
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3b1dc579
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3b1dc579
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3b1dc579
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@338766de
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@338766de
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@338766de
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@31142d58
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4f8d86e4
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@767599a7
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@767599a7
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@767599a7
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@463561c5
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@463561c5
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@463561c5
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2f4b98f6
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2b2954e1
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@47e51549
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47e51549
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5ebffb44
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7e307087
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7e307087
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@49fa1d74
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@49fa1d74
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6bc24e72
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a097d77
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d2a2560
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3382cf68
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3382cf68
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e26173
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@27be17c8
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c413ffc
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d21852b
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6cd98a05
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b8ec001
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e95b653
2020-12-07 11:35:45 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6f6c6077
2020-12-07 11:35:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@52559a69
2020-12-07 11:35:46 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@52559a69
2020-12-07 11:35:46 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3976ebfa
2020-12-07 11:35:46 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6b649efa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@65ef48f2]
2020-12-07 11:35:46 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6b649efa] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5a14e60d]
2020-12-07 11:35:47 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 11:35:47 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 11:35:47 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 11:35:47 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 11:35:47 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5a14e60d] for TypeConfiguration
2020-12-07 11:35:47 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 11:35:48 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
2020-12-07 11:35:48 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-07 11:35:48 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 11:35:48 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 11:35:48 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-07 11:35:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 11:35:48 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5a14e60d] for TypeConfiguration
2020-12-07 11:35:48 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@571db8b4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5a14e60d]
2020-12-07 11:35:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-07 11:35:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-07 11:35:49 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-07 11:35:49 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'holidayList'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'holidayListRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.HolidayListRepository.holidayList(java.lang.Long)! No property holidayList found for type HolidayList!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property holidayList found for type HolidayList!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:93)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-12-07 11:39:42 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 13092 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 11:39:42 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 11:39:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 11:39:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 197ms. Found 24 repository interfaces.
2020-12-07 11:39:44 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 11:39:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 11:39:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 11:39:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 11:39:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 11:39:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 11:39:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 11:39:44 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 11:39:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4e615e1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:39:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e70f2658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:39:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:39:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@51e0301d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:39:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$be3c90a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:39:44 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 11:39:45 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 11:39:45 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 11:39:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 11:39:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 11:39:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 11:39:45 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 11:39:45 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 11:39:45 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3522 ms
2020-12-07 11:39:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 11:39:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73971965
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73971965
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73971965
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6ee99964
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@46f902e0
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@575b5f7d
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1b2df3aa
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1b2df3aa
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1b2df3aa
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@625a9c5d
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@625a9c5d
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@625a9c5d
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@127705e4
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@127705e4
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@127705e4
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7c011174
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7c011174
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7c011174
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@561953e3
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@561953e3
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@561953e3
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@64920dc2
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@64920dc2
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@64920dc2
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2b38b1f
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2b38b1f
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2b38b1f
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28757abd
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28757abd
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@30839e44
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@30839e44
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@ceddaf8
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@ceddaf8
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7fb53256
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7978e022
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@326e0b8e
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@326e0b8e
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@15f35bc3
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@15f35bc3
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@53ed80d3
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@53ed80d3
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@20a7953c
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@20a7953c
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e83a98
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e83a98
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1ee27d73
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1ee27d73
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53a84ff4
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53a84ff4
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7930ffa9
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7930ffa9
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6a0f2853
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6a0f2853
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3e0fbeb5
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3e0fbeb5
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4694f434
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4694f434
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@793d163b
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@793d163b
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@793d163b
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@221a2068
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7fc420b8
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7fc420b8
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7fc420b8
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1192b58e
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3134153d
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3134153d
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6e3eb0cd
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6e3eb0cd
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@421def93
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@421def93
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@235d659c
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@235d659c
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@101a461c
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@101a461c
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@311ff287
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@16a5eb6d
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@16a5eb6d
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@16a5eb6d
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5e8507f1
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5e8507f1
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5e8507f1
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@21eee94f
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7cfb4736
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@31b7d869
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@31b7d869
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@31b7d869
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3811510
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3811510
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3811510
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@748f93bb
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a43e0ac
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3382cf68
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3382cf68
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e26173
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6f6c6077
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f6c6077
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4baed682
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4baed682
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c2a027c
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@350ec690
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1e0fdb2f
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5d342959
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5d342959
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@42cc183e
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e4e8fdf
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a1d6ef2
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2721044
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@205df5dc
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6aa7b67f
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6bcc3f27
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@79aee22a
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@65514add
2020-12-07 11:39:47 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@65514add
2020-12-07 11:39:47 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@101a461c
2020-12-07 11:39:47 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@738d37fc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6fa2448b]
2020-12-07 11:39:48 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@738d37fc] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@10f405ff]
2020-12-07 11:39:49 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 11:39:49 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 11:39:49 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 11:39:49 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 11:39:49 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@10f405ff] for TypeConfiguration
2020-12-07 11:39:49 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 11:39:51 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@dbca149, org.springframework.security.web.context.SecurityContextPersistenceFilter@49f1184e, org.springframework.security.web.header.HeaderWriterFilter@25435731, org.springframework.web.filter.CorsFilter@68550d86, org.springframework.security.web.authentication.logout.LogoutFilter@76104df5, com.app.config.JwtRequestFilter@1174676f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@694b1ddb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c82bac3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@19d9ba89, org.springframework.security.web.session.SessionManagementFilter@8ecc457, org.springframework.security.web.access.ExceptionTranslationFilter@320fc4b0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2ed35f24]
2020-12-07 11:39:51 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 11:39:51 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 11:39:51 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 11:39:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 11:39:51 [main] INFO  com.app.Application - Started Application in 9.871 seconds (JVM running for 10.713)
2020-12-07 11:40:14 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 11:40:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 11:40:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2020-12-07 11:40:14 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:40:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE slno = ?
2020-12-07 11:40:14 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-07 11:40:14 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [2]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:00:39]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [94]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [0030-09-10 00:00:00.0]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [my birthday]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [10:39:57]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:40:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 11:40:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:40:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - DELETE FROM gen_std_holiday_list WHERE slno = ?
2020-12-07 11:40:15 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2020-12-07 11:41:13 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:41:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0030-09-10 00:00:00.0]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavaliiiii]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [18:46:52]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [satish]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [3]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [101]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [10:14:10]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [keerthana]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [100]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Christmas]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 11:41:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:41:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [101]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [Banglore]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [BTM-2020]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [abc]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [10:11:29]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [keerthana]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-07]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [abc@gmail1.com]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [9972920707]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [BTM]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [9997778888]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [580018]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 11:41:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [100]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [10:07:59]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [keerthana]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-07]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 11:41:14 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2023]
2020-12-07 11:43:20 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:43:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_ where holidaylis0_.slno=?
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [3]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [101]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [10:14:10]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [keerthana]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [100]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Christmas]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-07 11:43:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [101]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [Banglore]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [BTM-2020]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [abc]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [10:11:29]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [keerthana]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-07]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [abc@gmail1.com]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [9972920707]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [BTM]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [9997778888]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [580018]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 11:43:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [100]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [10:07:59]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [keerthana]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-07]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 11:43:20 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2023]
2020-12-07 11:46:41 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:46:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE slno = ?
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [3]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [101]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:14:10]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [keerthana]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [100]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [Christmas]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [null]
2020-12-07 11:46:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [101]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [Banglore]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [BTM-2020]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [abc]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [10:11:29]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [keerthana]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-07]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [abc@gmail1.com]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [9972920707]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [BTM]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [9997778888]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [580018]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 11:46:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [100]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [10:07:59]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [keerthana]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-07]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2023]
2020-12-07 11:46:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - update gen_std_holiday_list set branch_slno=?, financial_year_slno=?,holiday_date=?,holiday_name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [94]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [TIMESTAMP] - [Tue Jun 12 00:00:00 IST 31]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [Christmas]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [keerthana]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [2020-12-07]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIME] - [11:46:41]
2020-12-07 11:46:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [3]
2020-12-07 11:47:09 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:47:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_ where holidaylis0_.slno=?
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [3]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [49]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [10:14:10]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [keerthana]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Christmas]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [11:46:41]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [keerthana]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:47:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [47]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [47]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [satish]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:54]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [karnataka]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 11:47:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 11:47:09 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:48:48 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:48:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE slno = ?
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [3]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [3]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [49]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:14:10]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [keerthana]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [94]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [Christmas]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [11:46:41]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [keerthana]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:48:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [47]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [47]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [satish]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:54]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [karnataka]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 11:48:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:48:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update gen_std_holiday_list set branch_slno=?, financial_year_slno=?,holiday_date=?,holiday_name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [94]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [TIMESTAMP] - [Tue Jun 12 00:00:00 IST 31]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [Christmas]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [keerthana]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [2020-12-07]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIME] - [11:48:48]
2020-12-07 11:48:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [3]
2020-12-07 11:48:56 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:48:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0030-09-10 00:00:00.0]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavaliiiii]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [18:46:52]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [satish]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [3]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [10:14:10]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [keerthana]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Christmas]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [11:48:48]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [keerthana]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:48:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 11:48:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 11:48:56 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:50:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_, branch0_.address as address2_2_, branch0_.code as code3_2_, branch0_.contact_name as contact_4_2_, branch0_.created_at as created_5_2_, branch0_.created_by as created_6_2_, branch0_.created_on as created_7_2_, branch0_.email_id as email_id8_2_, branch0_.mobile_no as mobile_n9_2_, branch0_.modified_at as modifie10_2_, branch0_.modified_by as modifie11_2_, branch0_.modified_on as modifie12_2_, branch0_.name as name13_2_, branch0_.phone_no as phone_n14_2_, branch0_.pincode as pincode15_2_, branch0_.state_slno as state_s16_2_ from gen_std_branch branch0_ where branch0_.slno=?
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [49]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [47]
2020-12-07 11:50:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [47]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [satish]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:54]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [karnataka]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 11:50:15 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-07 11:51:24 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:51:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [mysore1]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [HSR-20203]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [pooja11]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:21:38]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [969362587411]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [HSR3]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [5236419871]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [587201]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-07 11:51:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-07 11:51:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [100]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [100]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [10:07:59]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [keerthana]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-07]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2022]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2023]
2020-12-07 11:51:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE holiday_date = ?
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIMESTAMP] - [Sat Jul 13 00:00:00 IST 20]
2020-12-07 11:51:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-07 11:51:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - insert into gen_std_holiday_list (branch_slno, created_at, created_by, created_on, financial_year_slno, holiday_date, holiday_name, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [11:51:24]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [keerthana]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIMESTAMP] - [Mon Dec 07 11:51:24 IST 2020]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [100]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [TIMESTAMP] - [Sat Jul 13 00:00:00 IST 20]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [Sankranti]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [TIME] - [null]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [VARCHAR] - [null]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [TIMESTAMP] - [null]
2020-12-07 11:51:24 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [BIGINT] - [103]
2020-12-07 11:51:33 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:51:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0030-09-10 00:00:00.0]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavaliiiii]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [18:46:52]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [satish]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [3]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [10:14:10]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [keerthana]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Christmas]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [11:48:48]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [keerthana]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [4]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [11:51:24]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [keerthana]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [100]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0020-07-13 00:00:00.0]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Sankranti]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 11:51:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:51:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [100]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [10:07:59]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [keerthana]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-07]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 11:51:33 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2023]
2020-12-07 11:52:40 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:52:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE slno = ?
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [4]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [11:51:24]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [keerthana]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [100]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [0020-07-13 00:00:00.0]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [Sankranti]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [null]
2020-12-07 11:52:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 11:52:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [100]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [10:07:59]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [keerthana]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-07]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2023]
2020-12-07 11:52:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - DELETE FROM gen_std_holiday_list WHERE slno = ?
2020-12-07 11:52:40 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-07 11:52:49 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_ where holidaylis0_.slno=?
2020-12-07 11:52:49 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-07 11:52:58 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:52:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0030-09-10 00:00:00.0]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavaliiiii]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [18:46:52]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [satish]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [3]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [10:14:10]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [keerthana]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Christmas]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [11:48:48]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [keerthana]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:52:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 11:52:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 11:52:58 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 11:54:35 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:54:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [mysore1]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [HSR-20203]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [pooja11]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:21:38]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-02]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [969362587411]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [HSR3]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [5236419871]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [587201]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [46]
2020-12-07 11:54:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-07 11:54:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-07 11:54:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE holiday_date = ?
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIMESTAMP] - [Tue Jun 12 00:00:00 IST 31]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [3]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [48]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [10:14:10]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [keerthana]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [94]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [Christmas]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [11:48:48]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [keerthana]
2020-12-07 11:54:35 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 11:58:18 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:58:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 11:58:18 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [43]
2020-12-07 11:58:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_, branch0_.address as address2_2_, branch0_.code as code3_2_, branch0_.contact_name as contact_4_2_, branch0_.created_at as created_5_2_, branch0_.created_by as created_6_2_, branch0_.created_on as created_7_2_, branch0_.email_id as email_id8_2_, branch0_.mobile_no as mobile_n9_2_, branch0_.modified_at as modifie10_2_, branch0_.modified_by as modifie11_2_, branch0_.modified_on as modifie12_2_, branch0_.name as name13_2_, branch0_.phone_no as phone_n14_2_, branch0_.pincode as pincode15_2_, branch0_.state_slno as state_s16_2_ from gen_std_branch branch0_
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [48]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [mysore1]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [HSR-20203]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [pooja11]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [17:21:38]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [satish]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [2020-12-02]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [969362587411]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [HSR3]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [5236419871]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [587201]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [46]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [49]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [47]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [101]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [Banglore]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [BTM-2020]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [abc]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [10:11:29]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [keerthana]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [2020-12-07]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [abc@gmail1.com]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [9972920707]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [BTM]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [9997778888]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [580018]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [46]
2020-12-07 11:58:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-07 11:58:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [47]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [satish]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:54]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:58:46 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [karnataka]
2020-12-07 11:59:30 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 11:59:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 11:59:30 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-07 11:59:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_, branch0_.address as address2_2_, branch0_.code as code3_2_, branch0_.contact_name as contact_4_2_, branch0_.created_at as created_5_2_, branch0_.created_by as created_6_2_, branch0_.created_on as created_7_2_, branch0_.email_id as email_id8_2_, branch0_.mobile_no as mobile_n9_2_, branch0_.modified_at as modifie10_2_, branch0_.modified_by as modifie11_2_, branch0_.modified_on as modifie12_2_, branch0_.name as name13_2_, branch0_.phone_no as phone_n14_2_, branch0_.pincode as pincode15_2_, branch0_.state_slno as state_s16_2_ from gen_std_branch branch0_
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [48]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [mysore1]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [HSR-20203]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [pooja11]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [17:21:38]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [satish]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [2020-12-02]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [969362587411]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [HSR3]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [5236419871]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [587201]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [46]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [49]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [47]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_2_] : [BIGINT]) - [101]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_] : [VARCHAR]) - [Banglore]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_] : [VARCHAR]) - [BTM-2020]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_] : [VARCHAR]) - [abc]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_] : [TIME]) - [10:11:29]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_] : [VARCHAR]) - [keerthana]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_] : [DATE]) - [2020-12-07]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_] : [VARCHAR]) - [abc@gmail1.com]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_] : [VARCHAR]) - [9972920707]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_] : [TIME]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_] : [DATE]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_] : [VARCHAR]) - [BTM]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_] : [VARCHAR]) - [9997778888]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_] : [INTEGER]) - [580018]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_] : [BIGINT]) - [46]
2020-12-07 11:59:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [46]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [pooja]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:37]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [Goa]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-07 11:59:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [47]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [satish]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:54]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 11:59:52 [http-nio-8080-exec-8] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [karnataka]
2020-12-07 12:01:02 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 12:01:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0030-09-10 00:00:00.0]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavaliiiii]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [18:46:52]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [satish]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [3]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [10:14:10]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [keerthana]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Christmas]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [11:48:48]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [keerthana]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 12:01:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 12:01:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 12:01:02 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 12:02:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_, state0_.created_by as created_2_22_, state0_.modified_at as modified3_22_, state0_.modified_by as modified4_22_, state0_.modified_on as modified5_22_, state0_.country_slno as country_9_22_, state0_.created_at as created_6_22_, state0_.created_on as created_7_22_, state0_.name as name8_22_ from gen_std_state state0_
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_] : [BIGINT]) - [46]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_] : [VARCHAR]) - [pooja]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_] : [TIME]) - [null]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_] : [VARCHAR]) - [null]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_] : [DATE]) - [null]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_] : [BIGINT]) - [1]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_] : [TIME]) - [17:19:37]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_] : [DATE]) - [2020-12-02]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_] : [VARCHAR]) - [Goa]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_] : [BIGINT]) - [47]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_] : [VARCHAR]) - [satish]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_] : [TIME]) - [null]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_] : [VARCHAR]) - [null]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_] : [DATE]) - [null]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_] : [BIGINT]) - [1]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_] : [TIME]) - [17:19:54]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_] : [DATE]) - [2020-12-02]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_] : [VARCHAR]) - [karnataka]
2020-12-07 12:02:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select country0_.slno as slno1_4_0_, country0_.created_at as created_2_4_0_, country0_.created_by as created_3_4_0_, country0_.created_on as created_4_4_0_, country0_.modified_at as modified5_4_0_, country0_.modified_by as modified6_4_0_, country0_.modified_on as modified7_4_0_, country0_.name as name8_4_0_ from gen_std_country country0_ where country0_.slno=?
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_0_] : [TIME]) - [19:09:03]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_0_] : [VARCHAR]) - [pooja]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_0_] : [DATE]) - [2020-11-28]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_0_] : [TIME]) - [19:12:27]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_0_] : [VARCHAR]) - [admin]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_0_] : [DATE]) - [2020-11-28]
2020-12-07 12:02:49 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_0_] : [VARCHAR]) - [India]
2020-12-07 12:03:25 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 12:03:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [49]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address] : [VARCHAR]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code] : [VARCHAR]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_name] : [VARCHAR]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id] : [VARCHAR]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_no] : [VARCHAR]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_no] : [VARCHAR]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode] : [INTEGER]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_slno] : [BIGINT]) - [47]
2020-12-07 12:03:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select state0_.slno as slno1_22_0_, state0_.created_by as created_2_22_0_, state0_.modified_at as modified3_22_0_, state0_.modified_by as modified4_22_0_, state0_.modified_on as modified5_22_0_, state0_.country_slno as country_9_22_0_, state0_.created_at as created_6_22_0_, state0_.created_on as created_7_22_0_, state0_.name as name8_22_0_, country1_.slno as slno1_4_1_, country1_.created_at as created_2_4_1_, country1_.created_by as created_3_4_1_, country1_.created_on as created_4_4_1_, country1_.modified_at as modified5_4_1_, country1_.modified_by as modified6_4_1_, country1_.modified_on as modified7_4_1_, country1_.name as name8_4_1_ from gen_std_state state0_ inner join gen_std_country country1_ on state0_.country_slno=country1_.slno where state0_.slno=?
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [47]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_1_] : [BIGINT]) - [1]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_0_] : [VARCHAR]) - [satish]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_0_] : [TIME]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_0_] : [VARCHAR]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_0_] : [DATE]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_0_] : [BIGINT]) - [1]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_0_] : [TIME]) - [17:19:54]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_0_] : [DATE]) - [2020-12-02]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_0_] : [VARCHAR]) - [karnataka]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_1_] : [TIME]) - [19:09:03]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_1_] : [VARCHAR]) - [pooja]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_1_] : [TIME]) - [19:12:27]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_1_] : [VARCHAR]) - [admin]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_1_] : [DATE]) - [2020-11-28]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_1_] : [VARCHAR]) - [India]
2020-12-07 12:03:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_, financialy0_.created_at as created_2_9_, financialy0_.created_by as created_3_9_, financialy0_.created_on as created_4_9_, financialy0_.from_year as from_yea5_9_, financialy0_.modified_at as modified6_9_, financialy0_.modified_by as modified7_9_, financialy0_.modified_on as modified8_9_, financialy0_.to_year as to_year9_9_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_9_] : [BIGINT]) - [94]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_] : [TIME]) - [15:17:36]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_] : [VARCHAR]) - [pooja]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_] : [DATE]) - [2020-12-05]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_] : [VARCHAR]) - [2021]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_] : [TIME]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_] : [VARCHAR]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_] : [DATE]) - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_] : [VARCHAR]) - [2022]
2020-12-07 12:03:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE holiday_date = ?
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIMESTAMP] - [Tue Jul 13 00:00:00 IST 6]
2020-12-07 12:03:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-07 12:03:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into gen_std_holiday_list (branch_slno, created_at, created_by, created_on, financial_year_slno, holiday_date, holiday_name, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [12:03:25]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [divyashree]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIMESTAMP] - [Mon Dec 07 12:03:25 IST 2020]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [BIGINT] - [94]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [TIMESTAMP] - [Tue Jul 13 00:00:00 IST 6]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [New Year]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [TIME] - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [VARCHAR] - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [TIMESTAMP] - [null]
2020-12-07 12:03:25 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [11] as [BIGINT] - [104]
2020-12-07 12:03:36 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 12:03:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0030-09-10 00:00:00.0]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavaliiiii]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [18:46:52]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [satish]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [3]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [10:14:10]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [keerthana]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Christmas]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [11:48:48]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [keerthana]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [4]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [49]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [12:03:25]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [divyashree]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0006-07-13 00:00:00.0]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [New Year]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 12:03:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 12:03:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [47]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [47]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [satish]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:54]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 12:03:36 [http-nio-8080-exec-4] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [karnataka]
2020-12-07 12:04:17 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 12:04:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE slno = ?
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [4]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [49]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [12:03:25]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [divyashree]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [94]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [0006-07-13 00:00:00.0]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [New Year]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [47]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [47]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [satish]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:54]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [karnataka]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 12:04:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 12:04:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - update gen_std_holiday_list set branch_slno=?, financial_year_slno=?,holiday_date=?,holiday_name=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [BIGINT] - [94]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [TIMESTAMP] - [Wed Jul 14 00:00:00 IST 6]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [New Year]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [keerthana]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [2020-12-07]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIME] - [12:04:17]
2020-12-07 12:04:17 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [4]
2020-12-07 12:04:31 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 12:04:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_ where holidaylis0_.slno=?
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [4]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [49]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [12:03:25]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [divyashree]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0006-07-14 00:00:00.0]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [New Year]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [12:04:17]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [keerthana]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 12:04:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [47]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [47]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [satish]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:54]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [karnataka]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 12:04:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 12:04:31 [http-nio-8080-exec-6] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 12:04:53 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 12:04:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - Select * FROM gen_std_holiday_list WHERE slno = ?
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [4]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_slno] : [BIGINT]) - [49]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [12:03:25]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [divyashree]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financial_year_slno] : [BIGINT]) - [94]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_date] : [TIMESTAMP]) - [0006-07-14 00:00:00.0]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_name] : [VARCHAR]) - [New Year]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [12:04:17]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [keerthana]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 12:04:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [49]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [47]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [47]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [satish]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:54]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [karnataka]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 12:04:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 12:04:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - DELETE FROM gen_std_holiday_list WHERE slno = ?
2020-12-07 12:04:53 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-07 12:05:05 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 12:05:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_ where holidaylis0_.slno=?
2020-12-07 12:05:05 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-07 12:12:34 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 12:12:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select holidaylis0_.slno as slno1_10_, holidaylis0_.branch_slno as branch_10_10_, holidaylis0_.created_at as created_2_10_, holidaylis0_.created_by as created_3_10_, holidaylis0_.created_on as created_4_10_, holidaylis0_.financial_year_slno as financi11_10_, holidaylis0_.holiday_date as holiday_5_10_, holidaylis0_.holiday_name as holiday_6_10_, holidaylis0_.modified_at as modified7_10_, holidaylis0_.modified_by as modified8_10_, holidaylis0_.modified_on as modified9_10_ from gen_std_holiday_list holidaylis0_
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [1]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [15:35:22]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [satish]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0030-09-10 00:00:00.0]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Dipavaliiiii]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [18:46:52]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [satish]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-05 00:00:00.0]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_10_] : [BIGINT]) - [3]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([branch_10_10_] : [BIGINT]) - [48]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_10_] : [TIME]) - [10:14:10]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_10_] : [VARCHAR]) - [keerthana]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([financi11_10_] : [BIGINT]) - [94]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_5_10_] : [TIMESTAMP]) - [0031-06-12 00:00:00.0]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([holiday_6_10_] : [VARCHAR]) - [Christmas]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_10_] : [TIME]) - [11:48:48]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_10_] : [VARCHAR]) - [keerthana]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_10_] : [TIMESTAMP]) - [2020-12-07 00:00:00.0]
2020-12-07 12:12:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select branch0_.slno as slno1_2_0_, branch0_.address as address2_2_0_, branch0_.code as code3_2_0_, branch0_.contact_name as contact_4_2_0_, branch0_.created_at as created_5_2_0_, branch0_.created_by as created_6_2_0_, branch0_.created_on as created_7_2_0_, branch0_.email_id as email_id8_2_0_, branch0_.mobile_no as mobile_n9_2_0_, branch0_.modified_at as modifie10_2_0_, branch0_.modified_by as modifie11_2_0_, branch0_.modified_on as modifie12_2_0_, branch0_.name as name13_2_0_, branch0_.phone_no as phone_n14_2_0_, branch0_.pincode as pincode15_2_0_, branch0_.state_slno as state_s16_2_0_, state1_.slno as slno1_22_1_, state1_.created_by as created_2_22_1_, state1_.modified_at as modified3_22_1_, state1_.modified_by as modified4_22_1_, state1_.modified_on as modified5_22_1_, state1_.country_slno as country_9_22_1_, state1_.created_at as created_6_22_1_, state1_.created_on as created_7_22_1_, state1_.name as name8_22_1_, country2_.slno as slno1_4_2_, country2_.created_at as created_2_4_2_, country2_.created_by as created_3_4_2_, country2_.created_on as created_4_4_2_, country2_.modified_at as modified5_4_2_, country2_.modified_by as modified6_4_2_, country2_.modified_on as modified7_4_2_, country2_.name as name8_4_2_ from gen_std_branch branch0_ inner join gen_std_state state1_ on branch0_.state_slno=state1_.slno inner join gen_std_country country2_ on state1_.country_slno=country2_.slno where branch0_.slno=?
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_22_1_] : [BIGINT]) - [46]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_4_2_] : [BIGINT]) - [1]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([address2_2_0_] : [VARCHAR]) - [mysore1]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([code3_2_0_] : [VARCHAR]) - [HSR-20203]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([contact_4_2_0_] : [VARCHAR]) - [pooja11]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_5_2_0_] : [TIME]) - [17:21:38]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_2_0_] : [VARCHAR]) - [satish]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_2_0_] : [DATE]) - [2020-12-02]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([email_id8_2_0_] : [VARCHAR]) - [jan@gmail1.com]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([mobile_n9_2_0_] : [VARCHAR]) - [969362587411]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie10_2_0_] : [TIME]) - [null]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie11_2_0_] : [VARCHAR]) - [null]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modifie12_2_0_] : [DATE]) - [null]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name13_2_0_] : [VARCHAR]) - [HSR3]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([phone_n14_2_0_] : [VARCHAR]) - [5236419871]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([pincode15_2_0_] : [INTEGER]) - [587201]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([state_s16_2_0_] : [BIGINT]) - [46]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_22_1_] : [VARCHAR]) - [pooja]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified3_22_1_] : [TIME]) - [null]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified4_22_1_] : [VARCHAR]) - [null]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_22_1_] : [DATE]) - [null]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([country_9_22_1_] : [BIGINT]) - [1]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_6_22_1_] : [TIME]) - [17:19:37]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_7_22_1_] : [DATE]) - [2020-12-02]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_22_1_] : [VARCHAR]) - [Goa]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_4_2_] : [TIME]) - [19:09:03]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_4_2_] : [VARCHAR]) - [pooja]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_4_2_] : [TIME]) - [19:12:27]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_4_2_] : [VARCHAR]) - [admin]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_4_2_] : [DATE]) - [2020-11-28]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_4_2_] : [VARCHAR]) - [India]
2020-12-07 12:12:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select financialy0_.slno as slno1_9_0_, financialy0_.created_at as created_2_9_0_, financialy0_.created_by as created_3_9_0_, financialy0_.created_on as created_4_9_0_, financialy0_.from_year as from_yea5_9_0_, financialy0_.modified_at as modified6_9_0_, financialy0_.modified_by as modified7_9_0_, financialy0_.modified_on as modified8_9_0_, financialy0_.to_year as to_year9_9_0_ from gen_std_financial_year financialy0_ where financialy0_.slno=?
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_9_0_] : [TIME]) - [15:17:36]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_9_0_] : [VARCHAR]) - [pooja]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_9_0_] : [DATE]) - [2020-12-05]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([from_yea5_9_0_] : [VARCHAR]) - [2021]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_9_0_] : [TIME]) - [null]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_9_0_] : [VARCHAR]) - [null]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_9_0_] : [DATE]) - [null]
2020-12-07 12:12:34 [http-nio-8080-exec-10] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([to_year9_9_0_] : [VARCHAR]) - [2022]
2020-12-07 12:59:08 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 4676 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 12:59:08 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 12:59:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 12:59:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 213ms. Found 24 repository interfaces.
2020-12-07 12:59:10 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 12:59:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 12:59:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 12:59:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 12:59:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 12:59:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 12:59:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 12:59:10 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 12:59:10 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3b7072c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 12:59:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d41e3b00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 12:59:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 12:59:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3be4f71' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 12:59:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f8f2ddb2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 12:59:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 12:59:11 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 12:59:11 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 12:59:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 12:59:12 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 12:59:12 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 12:59:12 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 12:59:12 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 12:59:12 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4277 ms
2020-12-07 12:59:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 12:59:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7219ac49
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7219ac49
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7219ac49
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@625a9c5d
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@9b76b60
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5562c2c9
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@794366a5
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@794366a5
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@794366a5
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@443faa85
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@443faa85
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@443faa85
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@59a79443
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@59a79443
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59a79443
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1d50a7ca
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1d50a7ca
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d50a7ca
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@21a02556
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@21a02556
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@21a02556
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5f174dd2
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5f174dd2
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f174dd2
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3d90eeb3
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3d90eeb3
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3d90eeb3
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7978e022
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7978e022
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@326e0b8e
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@326e0b8e
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@15f35bc3
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@15f35bc3
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@56382bc9
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6ba060f3
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@57c00115
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@57c00115
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@17aa8a11
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17aa8a11
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5e5aafc6
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e5aafc6
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ce85af2
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ce85af2
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1e60b459
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1e60b459
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41b13f3d
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41b13f3d
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@254449bb
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@254449bb
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6a0f2853
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6a0f2853
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3b1dc579
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3b1dc579
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4976085
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4976085
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1192b58e
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1192b58e
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3134153d
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3134153d
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3134153d
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@25d0cb3a
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3468ee6e
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3468ee6e
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3468ee6e
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@58c1da09
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4232b34a
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4232b34a
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@360e9c06
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@360e9c06
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@109f8c7e
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@109f8c7e
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1a8b81e8
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1a8b81e8
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49fa1d74
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49fa1d74
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6bc24e72
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7650ded6
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7650ded6
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7650ded6
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6d2a2560
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6d2a2560
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6d2a2560
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@748f93bb
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2a43e0ac
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4aa11206
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4aa11206
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4aa11206
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2e26173
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2e26173
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2e26173
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7d21852b
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1e95b653
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6a9cd0f8
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6a9cd0f8
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@203d1d93
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@77dba4cd
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77dba4cd
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@47768e74
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@47768e74
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c991465
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@76130a29
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2ecf5915
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@28369db0
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@28369db0
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4548d254
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@590f0c50
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@208f0007
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a90c13c
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@39c96e48
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@188598ad
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@40d23c82
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7cf78c85
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@270a620
2020-12-07 12:59:14 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@270a620
2020-12-07 12:59:14 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@49fa1d74
2020-12-07 12:59:14 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@996a546] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4fc165f6]
2020-12-07 12:59:14 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@996a546] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2fd1ad8a]
2020-12-07 12:59:15 [main] DEBUG org.hibernate.SQL - alter table if exists public.gen_std_compounding_period add column periodtype int4
2020-12-07 12:59:15 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 12:59:16 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 12:59:16 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 12:59:16 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 12:59:16 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2fd1ad8a] for TypeConfiguration
2020-12-07 12:59:16 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 12:59:18 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1669f4e5, org.springframework.security.web.context.SecurityContextPersistenceFilter@665b441e, org.springframework.security.web.header.HeaderWriterFilter@283ecb4b, org.springframework.web.filter.CorsFilter@6e6c8854, org.springframework.security.web.authentication.logout.LogoutFilter@342394b3, com.app.config.JwtRequestFilter@5972e3a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a5e4f32, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21ab919c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4be1dce6, org.springframework.security.web.session.SessionManagementFilter@4e9bd2c8, org.springframework.security.web.access.ExceptionTranslationFilter@70819ba8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4d79d187]
2020-12-07 12:59:18 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 12:59:18 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 12:59:19 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 12:59:19 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 12:59:19 [main] INFO  com.app.Application - Started Application in 11.507 seconds (JVM running for 12.23)
2020-12-07 13:00:55 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 13:00:55 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 13:00:55 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2020-12-07 13:00:55 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 13:00:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_, compoundin0_.periodtype as periodty9_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-07 13:00:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [maturity]
2020-12-07 13:00:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-07 13:00:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, periodtype, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-07 13:00:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:00:56]
2020-12-07 13:00:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-07 13:00:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-07]
2020-12-07 13:00:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-07 13:00:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-07 13:00:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-07 13:00:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [maturity]
2020-12-07 13:00:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [INTEGER] - [3]
2020-12-07 13:00:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [105]
2020-12-07 13:02:14 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 13:02:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_, compoundin0_.periodtype as periodty9_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-07 13:02:14 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [monthly]
2020-12-07 13:02:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-07 13:02:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, periodtype, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-07 13:02:14 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:02:14]
2020-12-07 13:02:14 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-07 13:02:14 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-07]
2020-12-07 13:02:14 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-07 13:02:14 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-07 13:02:14 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-07 13:02:14 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [monthly]
2020-12-07 13:02:14 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [INTEGER] - [3]
2020-12-07 13:02:14 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [BIGINT] - [106]
2020-12-07 13:10:05 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 13180 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 13:10:05 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 13:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 13:10:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 199ms. Found 24 repository interfaces.
2020-12-07 13:10:07 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 13:10:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 13:10:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 13:10:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 13:10:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 13:10:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 13:10:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 13:10:07 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 13:10:07 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e821232] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 13:10:07 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b72fda6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 13:10:07 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 13:10:07 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5754de72' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 13:10:07 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$dc047d1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 13:10:07 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 13:10:07 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 13:10:07 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 13:10:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 13:10:08 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 13:10:08 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 13:10:08 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 13:10:09 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 13:10:09 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3718 ms
2020-12-07 13:10:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 13:10:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 13:10:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6749fe50
2020-12-07 13:10:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6749fe50
2020-12-07 13:10:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6749fe50
2020-12-07 13:10:10 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@ae73c80
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@40a72ecd
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@17410c07
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@64f981e2
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@64f981e2
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@64f981e2
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@12f49ca8
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@12f49ca8
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@12f49ca8
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@21da4b5f
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@21da4b5f
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21da4b5f
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@9b76b60
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@9b76b60
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9b76b60
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@15c487a8
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@15c487a8
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@15c487a8
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@40f35e52
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@40f35e52
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@40f35e52
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@41da3aee
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@41da3aee
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@41da3aee
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@13dbed9e
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@13dbed9e
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2e766822
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2e766822
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@138aa3cc
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@138aa3cc
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5f174dd2
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@697173d9
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1d6d1d42
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d6d1d42
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6993c8df
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6993c8df
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@34585ac9
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@34585ac9
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@56382bc9
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@56382bc9
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@77bc2e16
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@77bc2e16
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4fe533ff
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4fe533ff
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18a25bbd
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18a25bbd
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5583098b
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5583098b
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a39aa2b
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a39aa2b
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6a0f2853
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6a0f2853
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@19e0dffe
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19e0dffe
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@b0a1231
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b0a1231
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b0a1231
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@56928e17
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@60dd0587
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@60dd0587
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@60dd0587
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@338766de
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@31142d58
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@31142d58
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1697f2b3
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1697f2b3
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@25d0cb3a
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@25d0cb3a
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3468ee6e
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3468ee6e
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58d6e55a
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58d6e55a
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4232b34a
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@360e9c06
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@360e9c06
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@360e9c06
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@109f8c7e
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@109f8c7e
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@109f8c7e
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1a8b81e8
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4bcaa195
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6bc24e72
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6bc24e72
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6bc24e72
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7650ded6
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7650ded6
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7650ded6
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6a916402
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@62d1dc3c
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2a43e0ac
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a43e0ac
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1084f78c
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2e26173
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2e26173
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6f6c6077
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6f6c6077
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31120021
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6a9cd0f8
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@350ec690
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7f973a14
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f973a14
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3451f01d
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@72503b19
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1cfc2538
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@66deec87
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d342959
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ecf5915
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@42cc183e
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4a1a256d
2020-12-07 13:10:11 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4a1a256d
2020-12-07 13:10:11 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@58d6e55a
2020-12-07 13:10:11 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7fedb795] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@10850d17]
2020-12-07 13:10:11 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7fedb795] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@40df6090]
2020-12-07 13:10:12 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 13:10:12 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 13:10:12 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 13:10:12 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 13:10:12 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@40df6090] for TypeConfiguration
2020-12-07 13:10:12 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 13:10:14 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@9de1b85, org.springframework.security.web.context.SecurityContextPersistenceFilter@71fb1da3, org.springframework.security.web.header.HeaderWriterFilter@d65e744, org.springframework.web.filter.CorsFilter@3d405fe5, org.springframework.security.web.authentication.logout.LogoutFilter@a251135, com.app.config.JwtRequestFilter@1ab28416, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6cc44207, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17e2835c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@52c6e959, org.springframework.security.web.session.SessionManagementFilter@5ef591af, org.springframework.security.web.access.ExceptionTranslationFilter@6f36267d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6be80629]
2020-12-07 13:10:14 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 13:10:14 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 13:10:15 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 13:10:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 13:10:15 [main] INFO  com.app.Application - Started Application in 10.596 seconds (JVM running for 11.523)
2020-12-07 13:10:56 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 13:10:56 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 13:10:56 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-12-07 13:10:56 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 13:10:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-07 13:10:56 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [monthly]
2020-12-07 13:10:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_3_] : [BIGINT]) - [2]
2020-12-07 13:10:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_] : [TIME]) - [13:02:14]
2020-12-07 13:10:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_] : [VARCHAR]) - [satish]
2020-12-07 13:10:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_] : [DATE]) - [2020-12-07]
2020-12-07 13:10:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_] : [TIME]) - [null]
2020-12-07 13:10:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_] : [VARCHAR]) - [null]
2020-12-07 13:10:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_] : [DATE]) - [null]
2020-12-07 13:10:56 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_] : [VARCHAR]) - [monthly]
2020-12-07 13:11:47 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 13992 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 13:11:47 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 13:11:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 13:11:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 131ms. Found 24 repository interfaces.
2020-12-07 13:11:49 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 13:11:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 13:11:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-12-07 13:11:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 13:11:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 13:11:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 13:11:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 13:11:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 13:11:49 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 13:11:49 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3cfbc758] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 13:11:49 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d5a98f92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 13:11:49 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 13:11:49 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@8c46918' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 13:11:49 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$fa7e3244] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 13:11:49 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 13:11:49 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 13:11:49 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 13:11:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 13:11:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 13:11:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 13:11:49 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 13:11:49 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 13:11:49 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2084 ms
2020-12-07 13:11:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 13:11:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1507c3c3
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1507c3c3
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1507c3c3
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6614bd4b
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b5c665c
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@41dc0598
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4f0cab0a
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4f0cab0a
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4f0cab0a
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6f76c2cc
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6f76c2cc
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6f76c2cc
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7da39774
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7da39774
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7da39774
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2aaf152b
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2aaf152b
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2aaf152b
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@24841372
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@24841372
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@24841372
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7e7f3cfd
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7e7f3cfd
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e7f3cfd
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56399b9e
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56399b9e
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56399b9e
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28bdbe88
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28bdbe88
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@606f81b5
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@606f81b5
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4288d98e
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4288d98e
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78a0ff63
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@326d27ac
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@661d88a
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@661d88a
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@50f097b5
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@50f097b5
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@597f0937
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@597f0937
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@303f1234
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@303f1234
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3ed34ef5
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3ed34ef5
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2f521c4
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2f521c4
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@506a1372
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@506a1372
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@35a0e495
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@35a0e495
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24534cb0
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24534cb0
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3a894088
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a894088
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@67de7a99
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@67de7a99
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@65383667
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@65383667
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@65383667
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6deee370
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7a3e5cd3
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a3e5cd3
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a3e5cd3
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@791c12e3
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@18f55704
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@18f55704
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@48904d5a
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48904d5a
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5e922647
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5e922647
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6504a875
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6504a875
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@61ecbee9
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@61ecbee9
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@61f6d381
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7d57dbb5
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7d57dbb5
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7d57dbb5
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@672a1c62
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@672a1c62
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@672a1c62
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6015a4a5
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2cd62003
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7e4c72d6
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7e4c72d6
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7e4c72d6
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6de6faa6
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6de6faa6
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6de6faa6
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1921994e
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4c447c09
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@37637a24
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@37637a24
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6dd1f638
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@310aee0b
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@310aee0b
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3a2d3909
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3a2d3909
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54d1608f
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24386839
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@244418a
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1455154c
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1455154c
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f2e1024
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@536d97f8
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c50ad4b
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@37496720
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28f9fedd
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17947e6d
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e17a321
2020-12-07 13:11:50 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@521bb1a4
2020-12-07 13:11:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6e60f18
2020-12-07 13:11:51 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6e60f18
2020-12-07 13:11:51 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@61ecbee9
2020-12-07 13:11:51 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2dbc408c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@991cbde]
2020-12-07 13:11:51 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2dbc408c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@594131f2]
2020-12-07 13:11:52 [main] DEBUG org.hibernate.SQL - create table gen_std_compounding_period (slno int8 not null, created_at time, created_by varchar(255), created_on DATE, modified_at time, modified_by varchar(255), modified_on DATE, name varchar(255), primary key (slno))
2020-12-07 13:11:52 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 13:11:52 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 13:11:52 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 13:11:52 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 13:11:52 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@594131f2] for TypeConfiguration
2020-12-07 13:11:52 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 13:11:53 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43e7f104, org.springframework.security.web.context.SecurityContextPersistenceFilter@626df173, org.springframework.security.web.header.HeaderWriterFilter@97b84a4, org.springframework.web.filter.CorsFilter@7294a684, org.springframework.security.web.authentication.logout.LogoutFilter@5e46a125, com.app.config.JwtRequestFilter@2986427e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2411b935, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a9051fd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2762253e, org.springframework.security.web.session.SessionManagementFilter@7a021f49, org.springframework.security.web.access.ExceptionTranslationFilter@4ba1c1a2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@774304ca]
2020-12-07 13:11:54 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 13:11:54 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 13:11:54 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 13:11:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 13:11:54 [main] INFO  com.app.Application - Started Application in 7.006 seconds (JVM running for 8.658)
2020-12-07 13:12:14 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 13:12:14 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 13:12:14 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2020-12-07 13:12:14 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 13:12:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.name=?
2020-12-07 13:12:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [monthly]
2020-12-07 13:12:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-07 13:12:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_compounding_period (created_at, created_by, created_on, modified_at, modified_by, modified_on, name, slno) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-07 13:12:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [TIME] - [13:12:14]
2020-12-07 13:12:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [satish]
2020-12-07 13:12:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [DATE] - [2020-12-07]
2020-12-07 13:12:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [TIME] - [null]
2020-12-07 13:12:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [null]
2020-12-07 13:12:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [DATE] - [null]
2020-12-07 13:12:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [VARCHAR] - [monthly]
2020-12-07 13:12:14 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [107]
2020-12-07 14:55:03 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=36m46s108ms916µs800ns).
2020-12-07 14:55:36 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2020-12-07 14:55:36 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2020-12-07 14:55:36 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-07 14:55:36 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 14:55:36 [RMI TCP Connection(2)-127.0.0.1] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@594131f2] for TypeConfiguration
2020-12-07 14:55:36 [RMI TCP Connection(2)-127.0.0.1] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@46d7d26d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@594131f2]
2020-12-07 14:55:36 [RMI TCP Connection(2)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-07 14:55:36 [RMI TCP Connection(2)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-07 14:56:04 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 13436 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 14:56:04 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 14:56:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 14:56:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 187ms. Found 25 repository interfaces.
2020-12-07 14:56:05 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 14:56:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 14:56:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 14:56:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 14:56:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 14:56:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 14:56:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 14:56:06 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 14:56:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$436a3f0c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 14:56:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$dc180746] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 14:56:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 14:56:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7bb004b8' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 14:56:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$eca9f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 14:56:06 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 14:56:06 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 14:56:06 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 14:56:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 14:56:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 14:56:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 14:56:07 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 14:56:07 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 14:56:07 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3365 ms
2020-12-07 14:56:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 14:56:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5562c2c9
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5562c2c9
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5562c2c9
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f36e8d1
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@480b57e2
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@561953e3
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@64920dc2
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@64920dc2
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@64920dc2
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2b38b1f
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2b38b1f
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b38b1f
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@28757abd
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@28757abd
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@28757abd
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@30839e44
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@30839e44
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@30839e44
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ceddaf8
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ceddaf8
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ceddaf8
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@27329d2a
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@27329d2a
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@27329d2a
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@57545c3f
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@57545c3f
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@57545c3f
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@76a805b7
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@76a805b7
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@591a4f8e
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@591a4f8e
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@48e8c32a
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@48e8c32a
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@411a5965
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4e83a98
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1ee27d73
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1ee27d73
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@53a84ff4
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@53a84ff4
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7930ffa9
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7930ffa9
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b7aa898
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b7aa898
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@62b93086
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@62b93086
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5731d3a
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5731d3a
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e9f2c32
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e9f2c32
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2676dc05
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2676dc05
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fc420b8
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fc420b8
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@12ad1b2a
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@12ad1b2a
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@345cbf40
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@345cbf40
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2f4b98f6
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2f4b98f6
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2f4b98f6
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b2954e1
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2da16263
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2da16263
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2da16263
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@101a461c
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@31db34da
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@31db34da
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1220ef43
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1220ef43
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@d08edc5
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@d08edc5
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@724aefc3
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@724aefc3
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5034f5dd
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5034f5dd
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1a47a1e8
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@18539cb1
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@18539cb1
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@18539cb1
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@22d9bc14
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@22d9bc14
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@22d9bc14
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40d60f2
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6d8796c1
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6cd98a05
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6cd98a05
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6cd98a05
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@286090c
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@286090c
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@286090c
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@58606c91
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7be2f29a
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3664f108
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3664f108
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2525a5b8
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5b5a4aed
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5b5a4aed
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@72503b19
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@72503b19
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5d342959
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42cc183e
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@79aee22a
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@40d23c82
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40d23c82
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3a4ab7f7
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6badba10
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b7e8044
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@550de6b8
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a1706e1
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c6c4689
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@63cf9de0
2020-12-07 14:56:08 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@594d9f07
2020-12-07 14:56:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@750f64fe
2020-12-07 14:56:09 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@750f64fe
2020-12-07 14:56:09 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5034f5dd
2020-12-07 14:56:09 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@cfd1075] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45117dd]
2020-12-07 14:56:09 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'state'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stateRepository': Cannot create inner bean '(inner bean)#b0e5507' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#b0e5507': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.LateFeeParameter
2020-12-07 14:56:09 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-07 14:56:09 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 14:56:09 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 14:56:09 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-07 14:56:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-07 14:56:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-07 14:56:09 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-07 14:56:09 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'state'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stateRepository': Cannot create inner bean '(inner bean)#b0e5507' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#b0e5507': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.LateFeeParameter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'state'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stateRepository': Cannot create inner bean '(inner bean)#b0e5507' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#b0e5507': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.LateFeeParameter
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stateRepository': Cannot create inner bean '(inner bean)#b0e5507' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#b0e5507': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.LateFeeParameter
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#b0e5507': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.LateFeeParameter
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 80 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.LateFeeParameter
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 88 common frames omitted
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: com.app.entity.LateFeeParameter
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:778)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:250)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:231)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:274)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 95 common frames omitted
2020-12-07 14:59:09 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 7884 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 14:59:09 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 14:59:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 14:59:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 212ms. Found 25 repository interfaces.
2020-12-07 14:59:12 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 14:59:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 14:59:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 14:59:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 14:59:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 14:59:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 14:59:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 14:59:12 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 14:59:12 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e821232] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 14:59:12 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b72fda6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 14:59:12 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 14:59:12 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5754de72' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 14:59:12 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$dc047d1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 14:59:12 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 14:59:12 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 14:59:12 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 14:59:13 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 14:59:13 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 14:59:13 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 14:59:13 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 14:59:13 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 14:59:13 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3882 ms
2020-12-07 14:59:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 14:59:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@52bf7bf6
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@52bf7bf6
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52bf7bf6
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@22f4f8f2
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@73971965
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6ee99964
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@361abd01
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@361abd01
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@361abd01
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1fd9893c
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1fd9893c
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1fd9893c
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@551e4c6d
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@551e4c6d
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@551e4c6d
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3fb9a67f
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3fb9a67f
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3fb9a67f
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3f36e8d1
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3f36e8d1
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3f36e8d1
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@340d6d89
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@340d6d89
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@340d6d89
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5dc0ff7d
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5dc0ff7d
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5dc0ff7d
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67531e3a
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67531e3a
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3003e580
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3003e580
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@10a98392
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@10a98392
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1945113f
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@ceddaf8
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@27329d2a
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@27329d2a
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@57545c3f
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@57545c3f
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@76a805b7
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@76a805b7
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@591a4f8e
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@591a4f8e
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48e8c32a
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48e8c32a
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5377414a
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5377414a
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5b9ecb
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5b9ecb
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5807efad
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5807efad
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@62b93086
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@62b93086
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1eff3cfb
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1eff3cfb
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5d4e13e1
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d4e13e1
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4833eff3
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4833eff3
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4833eff3
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dd2856e
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@77f905e3
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77f905e3
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77f905e3
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3b7eac14
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@e38f0b7
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e38f0b7
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@12ad1b2a
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@12ad1b2a
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@345cbf40
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@345cbf40
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2f4b98f6
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f4b98f6
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@751ae8a4
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@751ae8a4
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2da16263
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ebffb44
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ebffb44
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ebffb44
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5edacf20
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5edacf20
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5edacf20
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@234cff57
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@d08edc5
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@724aefc3
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@724aefc3
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@724aefc3
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5034f5dd
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5034f5dd
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5034f5dd
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1a47a1e8
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3811510
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@22d9bc14
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22d9bc14
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@25f723b0
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@27be17c8
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@27be17c8
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4fc5563d
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4fc5563d
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3df1a1ac
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4baed682
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@49cb1baf
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@76130a29
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76130a29
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@72503b19
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cfc2538
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@66deec87
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d342959
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ecf5915
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42cc183e
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e4e8fdf
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4cb957b8
2020-12-07 14:59:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4cb957b8
2020-12-07 14:59:15 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@751ae8a4
2020-12-07 14:59:15 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10850d17] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51e754e1]
2020-12-07 14:59:16 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10850d17] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@44d7e24]
2020-12-07 14:59:16 [main] DEBUG org.hibernate.SQL - create table gen_std_late_fee_parameter (slno int8 not null, created_at time, created_by varchar(255), created_on DATE, grace_period int4, late_fees numeric(19, 2), modified_at time, modified_by varchar(255), modified_on DATE, compounding_period_slno int8 not null, primary key (slno))
2020-12-07 14:59:17 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 14:59:17 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_late_fee_parameter add constraint FKly36r5pbqjh7sl4bm5iox05sn foreign key (compounding_period_slno) references gen_std_compounding_period
2020-12-07 14:59:17 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 14:59:17 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 14:59:17 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 14:59:17 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@44d7e24] for TypeConfiguration
2020-12-07 14:59:17 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 14:59:19 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2553dcc0, org.springframework.security.web.context.SecurityContextPersistenceFilter@63636de0, org.springframework.security.web.header.HeaderWriterFilter@7f8cd5fc, org.springframework.web.filter.CorsFilter@2e91cf69, org.springframework.security.web.authentication.logout.LogoutFilter@343727b5, com.app.config.JwtRequestFilter@204c5ddf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@352ce817, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27bbe773, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@746e534, org.springframework.security.web.session.SessionManagementFilter@41581c3f, org.springframework.security.web.access.ExceptionTranslationFilter@105dc246, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3d50a3d9]
2020-12-07 14:59:19 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 14:59:19 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 14:59:20 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 14:59:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 14:59:20 [main] INFO  com.app.Application - Started Application in 10.985 seconds (JVM running for 11.811)
2020-12-07 15:04:28 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 15:04:28 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 15:04:28 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 27 ms
2020-12-07 15:04:28 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 15:04:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-07 15:04:29 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 15:05:40 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 15:05:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-07 15:05:40 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 15:07:36 [http-nio-8080-exec-8] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 15:07:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-07 15:07:36 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 15:08:04 [http-nio-8080-exec-9] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 15:08:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_, compoundin0_.created_at as created_2_3_, compoundin0_.created_by as created_3_3_, compoundin0_.created_on as created_4_3_, compoundin0_.modified_at as modified5_3_, compoundin0_.modified_by as modified6_3_, compoundin0_.modified_on as modified7_3_, compoundin0_.name as name8_3_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-07 15:08:04 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 15:38:01 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 13820 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 15:38:01 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 15:38:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 15:38:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 206ms. Found 25 repository interfaces.
2020-12-07 15:38:03 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 15:38:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 15:38:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 15:38:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 15:38:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 15:38:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 15:38:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 15:38:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 15:38:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fb84dd97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:38:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$9432a5d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:38:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:38:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@26ae880a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:38:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b9074883] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:38:03 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:38:04 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 15:38:04 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 15:38:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 15:38:05 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 15:38:05 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 15:38:05 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 15:38:05 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 15:38:05 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3719 ms
2020-12-07 15:38:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 15:38:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@12f49ca8
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@12f49ca8
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@12f49ca8
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@44be69aa
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@551e4c6d
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2eed37f4
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@673c4f6e
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@673c4f6e
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@673c4f6e
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@480b57e2
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@480b57e2
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@480b57e2
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1ee47d9e
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1ee47d9e
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ee47d9e
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@493ac8d3
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@493ac8d3
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@493ac8d3
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51ab1ee3
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@51ab1ee3
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@51ab1ee3
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3c8a7e38
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3c8a7e38
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3c8a7e38
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1945113f
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1945113f
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1945113f
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1db87583
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1db87583
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f894ad9
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f894ad9
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@36baa049
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@36baa049
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@76a805b7
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@608b1fd2
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7c51782d
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c51782d
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@411a5965
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@411a5965
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@71b639d0
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@71b639d0
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@542f6803
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@542f6803
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@316acbb5
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@316acbb5
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@717d7587
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@717d7587
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c0777b5
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c0777b5
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e642ee1
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e642ee1
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4694f434
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4694f434
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77f905e3
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77f905e3
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@777d191f
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@777d191f
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f8d86e4
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f8d86e4
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f8d86e4
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@12ad1b2a
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@345cbf40
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@345cbf40
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@345cbf40
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@659feb22
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2b2954e1
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b2954e1
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2da16263
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2da16263
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5ebffb44
2020-12-07 15:38:06 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5ebffb44
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5edacf20
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5edacf20
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@234cff57
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@234cff57
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d08edc5
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@724aefc3
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@724aefc3
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@724aefc3
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5034f5dd
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5034f5dd
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5034f5dd
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@62d1dc3c
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@18539cb1
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@22d9bc14
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@22d9bc14
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@22d9bc14
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@40d60f2
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@40d60f2
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@40d60f2
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6d8796c1
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2c413ffc
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@286090c
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@286090c
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@58606c91
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7d979d34
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d979d34
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3458eca5
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3458eca5
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@34b87182
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5b5a4aed
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@72503b19
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@61514735
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61514735
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43b5021c
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28369db0
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@30893e08
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e86807a
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4548d254
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@590f0c50
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@208f0007
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a90c13c
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@270a620
2020-12-07 15:38:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@270a620
2020-12-07 15:38:07 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@234cff57
2020-12-07 15:38:07 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@996a546] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4fc165f6]
2020-12-07 15:38:07 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@996a546] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@357f6391]
2020-12-07 15:38:08 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 15:38:08 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 15:38:08 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 15:38:08 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 15:38:09 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@357f6391] for TypeConfiguration
2020-12-07 15:38:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 15:38:10 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.LateFeeParameterRepository.findByName(java.lang.String)! No property name found for type LateFeeParameter!
2020-12-07 15:38:10 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-07 15:38:10 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 15:38:10 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 15:38:10 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-07 15:38:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 15:38:10 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@357f6391] for TypeConfiguration
2020-12-07 15:38:10 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@47d81427] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@357f6391]
2020-12-07 15:38:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-07 15:38:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-07 15:38:10 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-07 15:38:10 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.LateFeeParameterRepository.findByName(java.lang.String)! No property name found for type LateFeeParameter!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.LateFeeParameterRepository.findByName(java.lang.String)! No property name found for type LateFeeParameter!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.LateFeeParameterRepository.findByName(java.lang.String)! No property name found for type LateFeeParameter!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.LateFeeParameterRepository.findByName(java.lang.String)! No property name found for type LateFeeParameter!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property name found for type LateFeeParameter!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-12-07 15:52:35 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 6220 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 15:52:35 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 15:52:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 15:52:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 453ms. Found 25 repository interfaces.
2020-12-07 15:52:38 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 15:52:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 15:52:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 15:52:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 15:52:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 15:52:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 15:52:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 15:52:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 15:52:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fcdb437a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:52:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$95890bb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:52:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:52:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@40d10481' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:52:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ba5dae66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:52:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:52:38 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 15:52:38 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 15:52:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 15:52:39 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 15:52:39 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 15:52:39 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 15:52:39 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 15:52:39 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4163 ms
2020-12-07 15:52:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 15:52:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@60a19573
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@60a19573
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@60a19573
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@619f2afc
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2152ab30
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@eb6ec6
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3f018494
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3f018494
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3f018494
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7c52fc81
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7c52fc81
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c52fc81
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@75e27856
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@75e27856
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@75e27856
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1f3b992
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1f3b992
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f3b992
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@52bf7bf6
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@52bf7bf6
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@52bf7bf6
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@40a72ecd
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@40a72ecd
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@40a72ecd
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@257ef9ed
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@257ef9ed
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@257ef9ed
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@575b5f7d
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@575b5f7d
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b2df3aa
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b2df3aa
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@625a9c5d
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@625a9c5d
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@9b76b60
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5562c2c9
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@794366a5
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@794366a5
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@443faa85
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@443faa85
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@59a79443
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@59a79443
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1d50a7ca
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1d50a7ca
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@21a02556
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@21a02556
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f174dd2
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f174dd2
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d90eeb3
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d90eeb3
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7978e022
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7978e022
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ba060f3
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ba060f3
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4fe533ff
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4fe533ff
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@18a25bbd
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@18a25bbd
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5583098b
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5583098b
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5583098b
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7ce85af2
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1e60b459
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e60b459
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e60b459
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@40230eb9
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a39aa2b
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a39aa2b
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2fd954f
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2fd954f
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6dc1dc69
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6dc1dc69
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3976ebfa
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3976ebfa
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56928e17
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56928e17
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3b1dc579
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@338766de
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@338766de
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@338766de
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@31142d58
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@31142d58
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@31142d58
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1697f2b3
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@767599a7
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@463561c5
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@463561c5
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@463561c5
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@58c1da09
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@58c1da09
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@58c1da09
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@751ae8a4
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2da16263
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7377781e
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7377781e
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5edacf20
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4bcaa195
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4bcaa195
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7cfb4736
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7cfb4736
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7650ded6
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6a916402
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@748f93bb
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2c413ffc
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c413ffc
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3b8ec001
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e95b653
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f6c6077
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4fc5563d
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@286090c
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31120021
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3df1a1ac
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58606c91
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7186b202
2020-12-07 15:52:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7186b202
2020-12-07 15:52:41 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@56928e17
2020-12-07 15:52:41 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5700c9db] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@671d03bb]
2020-12-07 15:52:42 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5700c9db] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@38e83838]
2020-12-07 15:52:43 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 15:52:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 15:52:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 15:52:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 15:52:43 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@38e83838] for TypeConfiguration
2020-12-07 15:52:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 15:52:44 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.LateFeeParameterRepository.findByCompoundingPeriodBySlno(java.lang.String)! No property bySlno found for type CompoundingPeriod! Traversed path: LateFeeParameter.compoundingPeriod.
2020-12-07 15:52:44 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-07 15:52:44 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 15:52:44 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 15:52:44 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-07 15:52:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 15:52:44 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@38e83838] for TypeConfiguration
2020-12-07 15:52:44 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@10d49900] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@38e83838]
2020-12-07 15:52:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-07 15:52:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-07 15:52:44 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-07 15:52:44 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.LateFeeParameterRepository.findByCompoundingPeriodBySlno(java.lang.String)! No property bySlno found for type CompoundingPeriod! Traversed path: LateFeeParameter.compoundingPeriod.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.LateFeeParameterRepository.findByCompoundingPeriodBySlno(java.lang.String)! No property bySlno found for type CompoundingPeriod! Traversed path: LateFeeParameter.compoundingPeriod.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.LateFeeParameterRepository.findByCompoundingPeriodBySlno(java.lang.String)! No property bySlno found for type CompoundingPeriod! Traversed path: LateFeeParameter.compoundingPeriod.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.app.repository.LateFeeParameterRepository.findByCompoundingPeriodBySlno(java.lang.String)! No property bySlno found for type CompoundingPeriod! Traversed path: LateFeeParameter.compoundingPeriod.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property bySlno found for type CompoundingPeriod! Traversed path: LateFeeParameter.compoundingPeriod.
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:392)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:416)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:416)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311)
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:380)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:381)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:76)
	... 103 common frames omitted
2020-12-07 15:53:35 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 12880 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 15:53:35 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 15:53:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 15:53:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 253ms. Found 25 repository interfaces.
2020-12-07 15:53:38 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 15:53:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 15:53:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 15:53:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 15:53:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 15:53:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 15:53:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 15:53:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 15:53:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a6313158] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:53:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3edef992] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:53:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:53:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1698d7c0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:53:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$63b39c44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:53:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 15:53:39 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 15:53:39 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 15:53:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 15:53:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 15:53:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 15:53:40 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 15:53:40 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 15:53:40 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4452 ms
2020-12-07 15:53:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 15:53:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7f9fc8bd
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7f9fc8bd
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f9fc8bd
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c854752
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f608e21
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3bec5821
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@176555c
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@176555c
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@176555c
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@97a145b
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@97a145b
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@97a145b
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@526a9908
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@526a9908
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@526a9908
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@60a19573
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@60a19573
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@60a19573
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4db60246
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4db60246
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4db60246
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@34d45ec0
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@34d45ec0
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@34d45ec0
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3ce443f9
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3ce443f9
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3ce443f9
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7523a3dc
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7523a3dc
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6bccd036
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6bccd036
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2a53f215
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2a53f215
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6749fe50
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@ae73c80
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@76a14c8d
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@76a14c8d
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@46f902e0
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@46f902e0
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7165d530
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7165d530
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7219ac49
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7219ac49
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2eed37f4
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2eed37f4
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@673c4f6e
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@673c4f6e
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@480b57e2
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@480b57e2
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1ee47d9e
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1ee47d9e
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@138aa3cc
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@138aa3cc
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@ceddaf8
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@ceddaf8
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@27329d2a
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@27329d2a
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@57545c3f
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57545c3f
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57545c3f
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@41184371
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@608b1fd2
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@608b1fd2
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@608b1fd2
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@53ed80d3
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@20a7953c
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20a7953c
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4e83a98
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e83a98
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1ee27d73
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1ee27d73
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@53a84ff4
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@53a84ff4
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7930ffa9
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7930ffa9
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3e906375
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2489e84a
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2489e84a
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2489e84a
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29ebbdf4
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29ebbdf4
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29ebbdf4
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@70c69586
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@19e0dffe
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@b0a1231
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@b0a1231
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@b0a1231
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5a49af50
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5a49af50
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5a49af50
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@60dd0587
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@338766de
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1192b58e
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1192b58e
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1697f2b3
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6e3eb0cd
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6e3eb0cd
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2b2954e1
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b2954e1
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@235d659c
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f5ce0bb
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@31db34da
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@724aefc3
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@724aefc3
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@53c1179a
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7650ded6
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5034f5dd
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31b7d869
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6a916402
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1a47a1e8
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d2a2560
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62d1dc3c
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4a9860
2020-12-07 15:53:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4a9860
2020-12-07 15:53:41 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7930ffa9
2020-12-07 15:53:41 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cff6b74] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@627ff1b8]
2020-12-07 15:53:42 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cff6b74] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@501957bf]
2020-12-07 15:53:43 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 15:53:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 15:53:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 15:53:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 15:53:43 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@501957bf] for TypeConfiguration
2020-12-07 15:53:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 15:53:45 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4713b631, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f7b8ae1, org.springframework.security.web.header.HeaderWriterFilter@7c871ce4, org.springframework.web.filter.CorsFilter@7a0d2c80, org.springframework.security.web.authentication.logout.LogoutFilter@13ddaffb, com.app.config.JwtRequestFilter@c697186, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4fa6fb7f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@79fcd194, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d4d0a14, org.springframework.security.web.session.SessionManagementFilter@3e63bd6b, org.springframework.security.web.access.ExceptionTranslationFilter@f9de1fd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3691d4da]
2020-12-07 15:53:46 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 15:53:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 15:53:46 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 15:53:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 15:53:46 [main] INFO  com.app.Application - Started Application in 11.305 seconds (JVM running for 12.125)
2020-12-07 15:54:03 [http-nio-8080-exec-7] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 15:54:03 [http-nio-8080-exec-7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 15:54:03 [http-nio-8080-exec-7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 33 ms
2020-12-07 15:54:03 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 15:54:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 15:54:04 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 16:01:45 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:01:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:01:45 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 16:01:55 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:01:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:01:55 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 16:04:49 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 6968 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 16:04:49 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 16:04:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 16:04:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 198ms. Found 25 repository interfaces.
2020-12-07 16:04:52 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 16:04:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 16:04:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:04:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:04:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:04:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:04:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:04:52 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:04:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9fdb99c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:04:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$388961fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:04:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:04:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@45792847' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:04:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5d5e04b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:04:52 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:04:52 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 16:04:52 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 16:04:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 16:04:53 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 16:04:53 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 16:04:53 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 16:04:53 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 16:04:53 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4231 ms
2020-12-07 16:04:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 16:04:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3ce443f9
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3ce443f9
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3ce443f9
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@62b790a5
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2806d6da
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@75e27856
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1f3b992
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1f3b992
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1f3b992
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@52bf7bf6
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@52bf7bf6
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52bf7bf6
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@40a72ecd
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@40a72ecd
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@40a72ecd
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@257ef9ed
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@257ef9ed
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@257ef9ed
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@575b5f7d
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@575b5f7d
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@575b5f7d
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1b2df3aa
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1b2df3aa
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1b2df3aa
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@625a9c5d
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@625a9c5d
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@625a9c5d
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@127705e4
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@127705e4
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7c011174
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7c011174
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@561953e3
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@561953e3
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@41da3aee
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@59a79443
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1d50a7ca
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d50a7ca
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@21a02556
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@21a02556
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5f174dd2
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5f174dd2
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d90eeb3
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d90eeb3
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7978e022
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7978e022
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@326e0b8e
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@326e0b8e
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@15f35bc3
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@15f35bc3
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@53ed80d3
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@53ed80d3
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e5aafc6
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e5aafc6
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@56f730b2
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@56f730b2
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3e906375
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e906375
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2489e84a
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2489e84a
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2489e84a
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@254449bb
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6a0f2853
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6a0f2853
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6a0f2853
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6dc1dc69
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3976ebfa
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3976ebfa
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@56928e17
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@56928e17
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@60dd0587
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@60dd0587
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4976085
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4976085
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1192b58e
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1192b58e
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1697f2b3
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@25d0cb3a
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@25d0cb3a
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@25d0cb3a
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3468ee6e
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3468ee6e
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3468ee6e
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@58d6e55a
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4232b34a
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@360e9c06
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@360e9c06
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@360e9c06
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@109f8c7e
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@109f8c7e
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@109f8c7e
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7e307087
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@234cff57
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6bc24e72
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6bc24e72
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a097d77
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6d2a2560
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d2a2560
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2e7157c7
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2e7157c7
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@346f41a9
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4aa11206
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2c413ffc
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2c2a027c
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c2a027c
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@350ec690
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49cb1baf
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3664f108
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@77dba4cd
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@34a2d6e0
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2525a5b8
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3458eca5
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e0fdb2f
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7f6329cb
2020-12-07 16:04:55 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7f6329cb
2020-12-07 16:04:55 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1192b58e
2020-12-07 16:04:55 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41b64020] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a538ed8]
2020-12-07 16:04:56 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41b64020] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@dbed7fd]
2020-12-07 16:04:57 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 16:04:57 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 16:04:57 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 16:04:57 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 16:04:57 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@dbed7fd] for TypeConfiguration
2020-12-07 16:04:57 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 16:04:59 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e4d2232, org.springframework.security.web.context.SecurityContextPersistenceFilter@105dc246, org.springframework.security.web.header.HeaderWriterFilter@440461ef, org.springframework.web.filter.CorsFilter@24f5e9e8, org.springframework.security.web.authentication.logout.LogoutFilter@27bbe773, com.app.config.JwtRequestFilter@63a7af06, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7f8cd5fc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c316230, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@50e6ee24, org.springframework.security.web.session.SessionManagementFilter@6b71e98f, org.springframework.security.web.access.ExceptionTranslationFilter@2c978637, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6738e8b2]
2020-12-07 16:04:59 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 16:04:59 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 16:04:59 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 16:05:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 16:05:00 [main] INFO  com.app.Application - Started Application in 11.073 seconds (JVM running for 12.018)
2020-12-07 16:06:27 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 16:06:27 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 16:06:27 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2020-12-07 16:06:27 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:06:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:06:28 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 16:13:41 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:13:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:13:41 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 16:14:15 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 11416 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 16:14:15 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 16:14:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 16:14:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 201ms. Found 25 repository interfaces.
2020-12-07 16:14:17 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 16:14:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 16:14:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:14:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:14:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:14:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:14:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:14:17 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:14:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a40a1be6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:14:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3cb7e420] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:14:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:14:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1f1cae23' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:14:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$618c86d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:14:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:14:17 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 16:14:17 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 16:14:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 16:14:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 16:14:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 16:14:18 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 16:14:18 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 16:14:18 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3682 ms
2020-12-07 16:14:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 16:14:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@34d45ec0
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@34d45ec0
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34d45ec0
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2935fd2c
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@57fbc06f
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c52fc81
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@75e27856
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@75e27856
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75e27856
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1f3b992
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1f3b992
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f3b992
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@52bf7bf6
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@52bf7bf6
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52bf7bf6
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@40a72ecd
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@40a72ecd
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40a72ecd
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@257ef9ed
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@257ef9ed
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@257ef9ed
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@575b5f7d
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@575b5f7d
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@575b5f7d
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1b2df3aa
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1b2df3aa
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b2df3aa
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@625a9c5d
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@625a9c5d
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@127705e4
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@127705e4
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7c011174
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7c011174
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@40f35e52
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@443faa85
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@59a79443
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@59a79443
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1d50a7ca
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1d50a7ca
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@21a02556
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@21a02556
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f174dd2
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f174dd2
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3d90eeb3
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3d90eeb3
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7978e022
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7978e022
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@326e0b8e
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@326e0b8e
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15f35bc3
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15f35bc3
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17aa8a11
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17aa8a11
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5583098b
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5583098b
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@56f730b2
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56f730b2
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e906375
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e906375
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e906375
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@41b13f3d
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@254449bb
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@254449bb
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@254449bb
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fd954f
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6dc1dc69
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6dc1dc69
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3976ebfa
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3976ebfa
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@56928e17
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@56928e17
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@60dd0587
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60dd0587
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4976085
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4976085
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31142d58
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1697f2b3
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1697f2b3
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1697f2b3
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@25d0cb3a
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@25d0cb3a
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@25d0cb3a
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3468ee6e
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58c1da09
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4232b34a
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4232b34a
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4232b34a
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@360e9c06
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@360e9c06
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@360e9c06
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7377781e
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5edacf20
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4bcaa195
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4bcaa195
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f362135
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7650ded6
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7650ded6
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3811510
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3811510
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@748f93bb
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a43e0ac
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3382cf68
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@58606c91
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@58606c91
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7be2f29a
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@203d1d93
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c2a027c
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@118dcbbd
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d979d34
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@350ec690
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@49cb1baf
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3664f108
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5700c9db
2020-12-07 16:14:20 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5700c9db
2020-12-07 16:14:20 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4976085
2020-12-07 16:14:20 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44dc7b7d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@15fb4566]
2020-12-07 16:14:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44dc7b7d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@251c8145]
2020-12-07 16:14:22 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 16:14:22 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 16:14:22 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 16:14:22 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 16:14:22 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@251c8145] for TypeConfiguration
2020-12-07 16:14:22 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 16:14:24 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7acb5200, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c225adb, org.springframework.security.web.header.HeaderWriterFilter@24a7d3d3, org.springframework.web.filter.CorsFilter@3d50a3d9, org.springframework.security.web.authentication.logout.LogoutFilter@ea84346, com.app.config.JwtRequestFilter@6b2f7527, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b71e98f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62c6db99, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3661b732, org.springframework.security.web.session.SessionManagementFilter@482942d8, org.springframework.security.web.access.ExceptionTranslationFilter@3ffa0f38, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@34647f58]
2020-12-07 16:14:24 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 16:14:24 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 16:14:25 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 16:14:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 16:14:25 [main] INFO  com.app.Application - Started Application in 10.649 seconds (JVM running for 11.402)
2020-12-07 16:15:24 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 16:15:24 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 16:15:25 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 38 ms
2020-12-07 16:15:25 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:15:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:15:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 16:15:27 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:15:27 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 16:16:04 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:16:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:16:04 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 16:18:25 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 13996 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 16:18:25 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 16:18:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 16:18:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 220ms. Found 25 repository interfaces.
2020-12-07 16:18:28 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 16:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 16:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:18:28 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:18:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f85ea3f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:18:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$910c6c2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:18:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:18:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5631962' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:18:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b5e10edf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:18:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:18:28 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 16:18:28 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 16:18:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 16:18:29 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 16:18:29 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 16:18:29 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 16:18:29 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 16:18:29 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3910 ms
2020-12-07 16:18:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 16:18:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1db7157f
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1db7157f
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1db7157f
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4f4c88f9
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1f3b992
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7beae796
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@22f4f8f2
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@22f4f8f2
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22f4f8f2
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@17410c07
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@17410c07
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@17410c07
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@64f981e2
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@64f981e2
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64f981e2
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@12f49ca8
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@12f49ca8
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@12f49ca8
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@21da4b5f
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@21da4b5f
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@21da4b5f
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@9b76b60
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@9b76b60
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@9b76b60
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@15c487a8
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@15c487a8
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@15c487a8
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40f35e52
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40f35e52
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41da3aee
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41da3aee
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@13dbed9e
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@13dbed9e
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1d50a7ca
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3003e580
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@10a98392
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@10a98392
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@697173d9
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@697173d9
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1d6d1d42
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1d6d1d42
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6993c8df
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6993c8df
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@34585ac9
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@34585ac9
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@56382bc9
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@56382bc9
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77bc2e16
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77bc2e16
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4fe533ff
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4fe533ff
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47311277
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47311277
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@41b13f3d
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@41b13f3d
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@254449bb
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@254449bb
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a0f2853
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a0f2853
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a0f2853
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6dc1dc69
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3976ebfa
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3976ebfa
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3976ebfa
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4833eff3
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3b1dc579
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3b1dc579
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@338766de
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@338766de
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@31142d58
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@31142d58
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1697f2b3
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1697f2b3
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25d0cb3a
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25d0cb3a
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@463561c5
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@58c1da09
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@58c1da09
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@58c1da09
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4232b34a
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4232b34a
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4232b34a
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@360e9c06
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7377781e
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7e307087
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7e307087
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7e307087
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4bcaa195
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4bcaa195
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4bcaa195
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3f362135
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@724aefc3
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6a916402
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6a916402
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62d1dc3c
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2a43e0ac
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2a43e0ac
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3382cf68
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3382cf68
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2e26173
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d21852b
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@31120021
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2525a5b8
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2525a5b8
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3c380bd8
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@34b87182
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@47768e74
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2740e316
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b5a4aed
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2c991465
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5fef2aac
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f973a14
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@29896529
2020-12-07 16:18:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@29896529
2020-12-07 16:18:31 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@25d0cb3a
2020-12-07 16:18:31 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@684e8c9d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6ecc02bb]
2020-12-07 16:18:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@684e8c9d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1edccfd4]
2020-12-07 16:18:33 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 16:18:34 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 16:18:34 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 16:18:34 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 16:18:34 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1edccfd4] for TypeConfiguration
2020-12-07 16:18:34 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 16:18:36 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@491cc0eb, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c316230, org.springframework.security.web.header.HeaderWriterFilter@6ed7b9c5, org.springframework.web.filter.CorsFilter@727f36dd, org.springframework.security.web.authentication.logout.LogoutFilter@65e92505, com.app.config.JwtRequestFilter@3f87780b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@10ba9780, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a3bf37c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c70a1de, org.springframework.security.web.session.SessionManagementFilter@65b680b4, org.springframework.security.web.access.ExceptionTranslationFilter@69cc49ec, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2e4d2232]
2020-12-07 16:18:36 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 16:18:36 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 16:18:36 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 16:18:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 16:18:36 [main] INFO  com.app.Application - Started Application in 11.676 seconds (JVM running for 12.621)
2020-12-07 16:18:51 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 16:18:51 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 16:18:51 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2020-12-07 16:18:51 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:18:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:18:51 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 16:23:38 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 13328 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 16:23:38 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 16:23:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 16:23:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 206ms. Found 25 repository interfaces.
2020-12-07 16:23:40 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 16:23:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 16:23:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:23:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:23:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:23:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:23:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:23:40 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:23:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8e1b3819] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:23:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$26c90053] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:23:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:23:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@60e5272' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:23:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$4b9da305] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:23:40 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:23:40 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 16:23:40 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 16:23:41 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 16:23:41 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 16:23:41 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 16:23:41 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 16:23:42 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 16:23:42 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3609 ms
2020-12-07 16:23:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 16:23:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1dd74143
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1dd74143
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1dd74143
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@47ac613b
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@60a19573
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@619f2afc
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7d32e714
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7d32e714
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d32e714
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2935fd2c
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2935fd2c
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2935fd2c
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@62b790a5
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@62b790a5
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62b790a5
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1db7157f
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1db7157f
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1db7157f
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@cb39552
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@cb39552
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@cb39552
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6749fe50
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6749fe50
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6749fe50
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@bbd4791
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@bbd4791
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@bbd4791
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6ee99964
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6ee99964
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@361abd01
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@361abd01
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1fd9893c
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1fd9893c
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7219ac49
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@625a9c5d
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@127705e4
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@127705e4
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7c011174
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7c011174
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@561953e3
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@561953e3
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@64920dc2
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@64920dc2
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2b38b1f
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2b38b1f
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@28757abd
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@28757abd
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30839e44
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30839e44
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@ceddaf8
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@ceddaf8
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@15f35bc3
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@15f35bc3
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7c51782d
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c51782d
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@411a5965
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@411a5965
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@71b639d0
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@71b639d0
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@71b639d0
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ee27d73
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@53a84ff4
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@53a84ff4
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@53a84ff4
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@56f730b2
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3e906375
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3e906375
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2489e84a
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2489e84a
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@29ebbdf4
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@29ebbdf4
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@70c69586
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@70c69586
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e0fbeb5
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e0fbeb5
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b0a1231
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5a49af50
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5a49af50
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5a49af50
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@221a2068
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@221a2068
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@221a2068
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fc420b8
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1192b58e
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3134153d
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3134153d
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3134153d
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e3eb0cd
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e3eb0cd
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e3eb0cd
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3468ee6e
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@58c1da09
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@f5ce0bb
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f5ce0bb
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@360e9c06
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@16a5eb6d
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@16a5eb6d
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@d08edc5
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d08edc5
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21eee94f
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7cfb4736
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1a47a1e8
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@40d60f2
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40d60f2
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6d8796c1
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e26173
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@27be17c8
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c413ffc
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d21852b
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6cd98a05
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3b8ec001
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e95b653
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7f85217c
2020-12-07 16:23:43 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7f85217c
2020-12-07 16:23:43 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3e0fbeb5
2020-12-07 16:23:43 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72543547] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3d88e6b9]
2020-12-07 16:23:44 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72543547] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3709748f]
2020-12-07 16:23:45 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 16:23:45 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 16:23:45 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 16:23:45 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 16:23:45 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3709748f] for TypeConfiguration
2020-12-07 16:23:45 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 16:23:48 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59d0fac9, org.springframework.security.web.context.SecurityContextPersistenceFilter@699bb304, org.springframework.security.web.header.HeaderWriterFilter@62f7d7bd, org.springframework.web.filter.CorsFilter@1d3546f9, org.springframework.security.web.authentication.logout.LogoutFilter@1b556a88, com.app.config.JwtRequestFilter@1dd247b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@40fee459, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e2718b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@50ecef36, org.springframework.security.web.session.SessionManagementFilter@5a31abe9, org.springframework.security.web.access.ExceptionTranslationFilter@48333b12, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@541897c6]
2020-12-07 16:23:48 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 16:23:48 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 16:23:48 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 16:23:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 16:23:48 [main] INFO  com.app.Application - Started Application in 11.003 seconds (JVM running for 11.788)
2020-12-07 16:23:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 16:23:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 16:23:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2020-12-07 16:23:52 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:23:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:23:52 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 16:25:20 [http-nio-8080-exec-5] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:25:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:25:20 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 16:26:14 [http-nio-8080-exec-6] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:26:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:26:14 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 16:27:06 [http-nio-8080-exec-7] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:27:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:27:06 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 16:29:03 [http-nio-8080-exec-10] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:29:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - Select * FROM gen_std_branch WHERE slno = ?
2020-12-07 16:29:03 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 16:30:19 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 12128 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 16:30:19 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 16:30:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 16:30:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 211ms. Found 25 repository interfaces.
2020-12-07 16:30:21 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 16:30:21 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 16:30:21 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:30:21 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:30:21 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:30:21 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:30:21 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:30:21 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:30:21 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9a4c8953] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:30:21 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$32fa518d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:30:21 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:30:21 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3c7cfcbb' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:30:21 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$57cef43f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:30:21 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:30:22 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 16:30:22 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 16:30:22 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 16:30:22 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 16:30:22 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 16:30:22 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 16:30:23 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 16:30:23 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3400 ms
2020-12-07 16:30:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 16:30:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4086d8fb
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4086d8fb
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4086d8fb
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77c10a5f
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@795f8317
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@97a145b
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@526a9908
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@526a9908
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@526a9908
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@60a19573
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@60a19573
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@60a19573
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4db60246
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4db60246
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4db60246
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@34d45ec0
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@34d45ec0
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34d45ec0
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3ce443f9
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3ce443f9
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ce443f9
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7523a3dc
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7523a3dc
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7523a3dc
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6bccd036
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6bccd036
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6bccd036
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a53f215
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a53f215
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@261db982
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@261db982
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@73971965
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@73971965
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ee99964
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@46f902e0
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7165d530
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7165d530
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7219ac49
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7219ac49
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2eed37f4
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2eed37f4
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@673c4f6e
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@673c4f6e
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@480b57e2
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@480b57e2
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1ee47d9e
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1ee47d9e
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@493ac8d3
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@493ac8d3
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@51ab1ee3
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@51ab1ee3
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fb53256
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fb53256
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@57545c3f
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57545c3f
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@76a805b7
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76a805b7
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@591a4f8e
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@591a4f8e
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@591a4f8e
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c51782d
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@411a5965
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@411a5965
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@411a5965
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4e83a98
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1ee27d73
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ee27d73
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@53a84ff4
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53a84ff4
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7930ffa9
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7930ffa9
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5b7aa898
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5b7aa898
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@62b93086
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@62b93086
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29ebbdf4
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@70c69586
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@70c69586
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@70c69586
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e0fbeb5
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e0fbeb5
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e0fbeb5
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4694f434
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5a49af50
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@221a2068
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@221a2068
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@221a2068
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7fc420b8
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7fc420b8
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7fc420b8
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1192b58e
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1697f2b3
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6e3eb0cd
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e3eb0cd
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3468ee6e
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@235d659c
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@235d659c
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5ebffb44
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ebffb44
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31db34da
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@16a5eb6d
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@d08edc5
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@62d1dc3c
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62d1dc3c
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18539cb1
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@748f93bb
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7f2d31af
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e7157c7
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2a43e0ac
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@22d9bc14
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@346f41a9
2020-12-07 16:30:24 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1084f78c
2020-12-07 16:30:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5cff6b74
2020-12-07 16:30:25 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5cff6b74
2020-12-07 16:30:25 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@62b93086
2020-12-07 16:30:25 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52559a69] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@285583d4]
2020-12-07 16:30:25 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52559a69] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@102c18e]
2020-12-07 16:30:26 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 16:30:26 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 16:30:26 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 16:30:26 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 16:30:26 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@102c18e] for TypeConfiguration
2020-12-07 16:30:26 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 16:30:28 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@efa04b5, org.springframework.security.web.context.SecurityContextPersistenceFilter@73d8c8d7, org.springframework.security.web.header.HeaderWriterFilter@6f7b8ae1, org.springframework.web.filter.CorsFilter@a80a896, org.springframework.security.web.authentication.logout.LogoutFilter@43fbc2bf, com.app.config.JwtRequestFilter@3d2b13b1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48333b12, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a2fb8a5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13c81bc5, org.springframework.security.web.session.SessionManagementFilter@206bd7a0, org.springframework.security.web.access.ExceptionTranslationFilter@3e63bd6b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6d4d0a14]
2020-12-07 16:30:28 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 16:30:29 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 16:30:29 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 16:30:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 16:30:29 [main] INFO  com.app.Application - Started Application in 10.574 seconds (JVM running for 11.354)
2020-12-07 16:30:48 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 6048 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 16:30:48 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 16:30:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 16:30:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 225ms. Found 25 repository interfaces.
2020-12-07 16:30:50 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 16:30:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 16:30:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:30:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:30:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:30:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:30:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:30:51 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:30:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2bc3ef9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:30:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c471b7d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:30:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:30:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4e628b52' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:30:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e9465a88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:30:51 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:30:51 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 16:30:51 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 16:30:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 16:30:52 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 16:30:52 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 16:30:52 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 16:30:52 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 16:30:52 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4147 ms
2020-12-07 16:30:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 16:30:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5a8c93
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5a8c93
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5a8c93
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a3e8e24
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55651434
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5634a861
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@75e09567
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@75e09567
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75e09567
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3e7b65d7
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3e7b65d7
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e7b65d7
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6949e948
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6949e948
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6949e948
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2e3572e8
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2e3572e8
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e3572e8
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@633fd91
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@633fd91
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@633fd91
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@44d64d4e
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@44d64d4e
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44d64d4e
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@60d6fdd4
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@60d6fdd4
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60d6fdd4
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@619f2afc
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@619f2afc
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7d32e714
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7d32e714
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2935fd2c
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2935fd2c
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57fbc06f
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c52fc81
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@75e27856
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@75e27856
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1f3b992
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1f3b992
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@52bf7bf6
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52bf7bf6
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@40a72ecd
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@40a72ecd
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@257ef9ed
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@257ef9ed
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@575b5f7d
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@575b5f7d
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1b2df3aa
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1b2df3aa
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@625a9c5d
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@625a9c5d
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@443faa85
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@443faa85
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@13dbed9e
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@13dbed9e
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2e766822
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e766822
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@138aa3cc
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@138aa3cc
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@138aa3cc
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f174dd2
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3d90eeb3
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3d90eeb3
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3d90eeb3
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d6d1d42
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6993c8df
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6993c8df
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@34585ac9
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@34585ac9
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@56382bc9
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@56382bc9
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@77bc2e16
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@77bc2e16
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fe533ff
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fe533ff
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17aa8a11
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5e5aafc6
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5e5aafc6
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5e5aafc6
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7ce85af2
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7ce85af2
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7ce85af2
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e60b459
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@40230eb9
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2a39aa2b
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2a39aa2b
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2a39aa2b
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2fd954f
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2fd954f
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2fd954f
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1eff3cfb
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7e9f2c32
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4833eff3
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4833eff3
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@dd2856e
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@338766de
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@338766de
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1192b58e
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1192b58e
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1697f2b3
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@767599a7
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3468ee6e
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@311ff287
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@311ff287
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@109f8c7e
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5edacf20
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16a5eb6d
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7e307087
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1220ef43
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1a8b81e8
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@234cff57
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5e8507f1
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@14168e1
2020-12-07 16:30:54 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@14168e1
2020-12-07 16:30:54 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4fe533ff
2020-12-07 16:30:54 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ec99035] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@60743cdb]
2020-12-07 16:30:55 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ec99035] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@551be9f6]
2020-12-07 16:30:56 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 16:30:56 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 16:30:56 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 16:30:56 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 16:30:56 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@551be9f6] for TypeConfiguration
2020-12-07 16:30:56 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 16:30:58 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@83e5898, org.springframework.security.web.context.SecurityContextPersistenceFilter@4fef4f96, org.springframework.security.web.header.HeaderWriterFilter@20163008, org.springframework.web.filter.CorsFilter@7c4a03a, org.springframework.security.web.authentication.logout.LogoutFilter@73d8c8d7, com.app.config.JwtRequestFilter@430106cf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d3b4e09, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e63bd6b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@63b58ff4, org.springframework.security.web.session.SessionManagementFilter@1bbb48dd, org.springframework.security.web.access.ExceptionTranslationFilter@19d9ba89, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@65e92505]
2020-12-07 16:30:58 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 16:30:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 16:30:59 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 16:30:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 16:30:59 [main] INFO  com.app.Application - Started Application in 11.127 seconds (JVM running for 11.892)
2020-12-07 16:31:03 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 16:31:03 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 16:31:03 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2020-12-07 16:31:03 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:31:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_compounding_period WHERE slno = ?
2020-12-07 16:31:03 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 16:31:03 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [107]
2020-12-07 16:31:03 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [13:12:14]
2020-12-07 16:31:03 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-07 16:31:03 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-07]
2020-12-07 16:31:03 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-07 16:31:03 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-07 16:31:03 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-07 16:31:03 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [monthly]
2020-12-07 16:31:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_12_, latefeepar0_.compounding_period_slno as compoun10_12_, latefeepar0_.created_at as created_2_12_, latefeepar0_.created_by as created_3_12_, latefeepar0_.created_on as created_4_12_, latefeepar0_.grace_period as grace_pe5_12_, latefeepar0_.late_fees as late_fee6_12_, latefeepar0_.modified_at as modified7_12_, latefeepar0_.modified_by as modified8_12_, latefeepar0_.modified_on as modified9_12_ from gen_std_late_fee_parameter latefeepar0_ where latefeepar0_.compounding_period_slno=?
2020-12-07 16:31:03 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 16:31:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-07 16:31:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into gen_std_late_fee_parameter (compounding_period_slno, created_at, created_by, created_on, grace_period, late_fees, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-07 16:31:04 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 16:31:04 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [16:31:03]
2020-12-07 16:31:04 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [satish]
2020-12-07 16:31:04 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-07]
2020-12-07 16:31:04 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [INTEGER] - [12]
2020-12-07 16:31:04 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [45.0]
2020-12-07 16:31:04 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIME] - [null]
2020-12-07 16:31:04 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [null]
2020-12-07 16:31:04 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [DATE] - [null]
2020-12-07 16:31:04 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [BIGINT] - [108]
2020-12-07 16:59:21 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 14236 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 16:59:21 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 16:59:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 16:59:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 220ms. Found 25 repository interfaces.
2020-12-07 16:59:23 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 16:59:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 16:59:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:59:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:59:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:59:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:59:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 16:59:24 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 16:59:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a72ac2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:59:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$23207469] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:59:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:59:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6a9d5dff' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:59:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$47f5171b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:59:24 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 16:59:24 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 16:59:24 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 16:59:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 16:59:25 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 16:59:25 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 16:59:25 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 16:59:25 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 16:59:25 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3978 ms
2020-12-07 16:59:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 16:59:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2e766822
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2e766822
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e766822
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@21a02556
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@10a98392
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1945113f
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1db87583
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1db87583
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1db87583
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2f894ad9
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2f894ad9
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2f894ad9
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@36baa049
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@36baa049
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@36baa049
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@167381c7
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@167381c7
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@167381c7
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6ba060f3
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6ba060f3
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ba060f3
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@57c00115
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@57c00115
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@57c00115
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@17aa8a11
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@17aa8a11
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@17aa8a11
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e5aafc6
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e5aafc6
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7ce85af2
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7ce85af2
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1e60b459
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1e60b459
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@40230eb9
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c0777b5
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4e642ee1
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4e642ee1
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1eff3cfb
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1eff3cfb
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5d4e13e1
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5d4e13e1
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4833eff3
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4833eff3
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b1dc579
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b1dc579
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@338766de
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@338766de
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31142d58
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31142d58
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1697f2b3
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1697f2b3
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@751ae8a4
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@751ae8a4
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@360e9c06
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@360e9c06
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@109f8c7e
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@109f8c7e
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1a8b81e8
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1a8b81e8
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1a8b81e8
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bcaa195
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6bc24e72
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6bc24e72
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6bc24e72
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2a097d77
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6a916402
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a916402
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@24eeac69
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@24eeac69
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2a43e0ac
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2a43e0ac
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4aa11206
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4aa11206
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e26173
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e26173
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d21852b
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4fc5563d
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4fc5563d
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4fc5563d
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a9cd0f8
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a9cd0f8
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a9cd0f8
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@118dcbbd
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@49cb1baf
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3458eca5
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3458eca5
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3458eca5
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2740e316
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2740e316
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2740e316
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5fef2aac
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@124d02b2
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@53e76c11
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@53e76c11
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6a1d6ef2
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@61514735
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61514735
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4548d254
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4548d254
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a90c13c
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@40d23c82
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3a1706e1
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@688a2c09
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@688a2c09
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@303c55fa
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9efcd90
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7eb200ce
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2ee83775
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c2924d7
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b5de58f
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6587305a
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@abbe000
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6eb089e6
2020-12-07 16:59:27 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6eb089e6
2020-12-07 16:59:27 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2e26173
2020-12-07 16:59:27 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75aea2ba] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a47597]
2020-12-07 16:59:28 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75aea2ba] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@46b2dcc5]
2020-12-07 16:59:29 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 16:59:29 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 16:59:29 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 16:59:29 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 16:59:29 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@46b2dcc5] for TypeConfiguration
2020-12-07 16:59:29 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 16:59:31 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64887fbc, org.springframework.security.web.context.SecurityContextPersistenceFilter@59d0fac9, org.springframework.security.web.header.HeaderWriterFilter@8167f57, org.springframework.web.filter.CorsFilter@26b3fe8, org.springframework.security.web.authentication.logout.LogoutFilter@24f5e9e8, com.app.config.JwtRequestFilter@6f7c9755, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50ecef36, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b2f8152, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f6d7e7c, org.springframework.security.web.session.SessionManagementFilter@79a68657, org.springframework.security.web.access.ExceptionTranslationFilter@13c81bc5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@733bd6f3]
2020-12-07 16:59:32 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 16:59:32 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 16:59:32 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 16:59:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 16:59:32 [main] INFO  com.app.Application - Started Application in 11.358 seconds (JVM running for 12.223)
2020-12-07 16:59:53 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 16:59:53 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 16:59:53 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 26 ms
2020-12-07 16:59:53 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 16:59:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_12_, latefeepar0_.compounding_period_slno as compoun10_12_, latefeepar0_.created_at as created_2_12_, latefeepar0_.created_by as created_3_12_, latefeepar0_.created_on as created_4_12_, latefeepar0_.grace_period as grace_pe5_12_, latefeepar0_.late_fees as late_fee6_12_, latefeepar0_.modified_at as modified7_12_, latefeepar0_.modified_by as modified8_12_, latefeepar0_.modified_on as modified9_12_ from gen_std_late_fee_parameter latefeepar0_
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_12_] : [BIGINT]) - [108]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([compoun10_12_] : [BIGINT]) - [107]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_12_] : [TIME]) - [16:31:03]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_12_] : [VARCHAR]) - [satish]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_12_] : [DATE]) - [2020-12-07]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([grace_pe5_12_] : [INTEGER]) - [12]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([late_fee6_12_] : [NUMERIC]) - [45.00]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_12_] : [TIME]) - [null]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_12_] : [VARCHAR]) - [null]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_12_] : [DATE]) - [null]
2020-12-07 16:59:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_0_, compoundin0_.created_at as created_2_3_0_, compoundin0_.created_by as created_3_3_0_, compoundin0_.created_on as created_4_3_0_, compoundin0_.modified_at as modified5_3_0_, compoundin0_.modified_by as modified6_3_0_, compoundin0_.modified_on as modified7_3_0_, compoundin0_.name as name8_3_0_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_0_] : [TIME]) - [13:12:14]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_0_] : [VARCHAR]) - [satish]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_0_] : [DATE]) - [2020-12-07]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_0_] : [TIME]) - [null]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_0_] : [VARCHAR]) - [null]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_0_] : [DATE]) - [null]
2020-12-07 16:59:54 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_0_] : [VARCHAR]) - [monthly]
2020-12-07 17:05:01 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 7004 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 17:05:01 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 17:05:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 17:05:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 238ms. Found 25 repository interfaces.
2020-12-07 17:05:03 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 17:05:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 17:05:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:05:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:05:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:05:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:05:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:05:03 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:05:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$17e20cb7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:05:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b08fd4f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:05:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:05:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@c81fd12' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:05:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d56477a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:05:04 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:05:04 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 17:05:04 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 17:05:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 17:05:05 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 17:05:05 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 17:05:05 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 17:05:05 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 17:05:05 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4518 ms
2020-12-07 17:05:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 17:05:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7beae796
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7beae796
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7beae796
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@261db982
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@bbd4791
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@76a14c8d
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@46f902e0
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@46f902e0
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@46f902e0
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7165d530
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7165d530
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7165d530
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7219ac49
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7219ac49
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7219ac49
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2eed37f4
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2eed37f4
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eed37f4
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@673c4f6e
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@673c4f6e
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@673c4f6e
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@480b57e2
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@480b57e2
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@480b57e2
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1ee47d9e
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1ee47d9e
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ee47d9e
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@493ac8d3
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@493ac8d3
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@51ab1ee3
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@51ab1ee3
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3c8a7e38
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c8a7e38
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@30839e44
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@45aca496
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7fb53256
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7fb53256
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5afbd567
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5afbd567
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@41184371
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@41184371
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@608b1fd2
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@608b1fd2
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7c51782d
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7c51782d
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@411a5965
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@411a5965
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@71b639d0
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@71b639d0
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@542f6803
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@542f6803
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2489e84a
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2489e84a
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5731d3a
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5731d3a
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7e9f2c32
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7e9f2c32
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2676dc05
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2676dc05
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2676dc05
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4694f434
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@793d163b
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@793d163b
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@793d163b
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@221a2068
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7fc420b8
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7fc420b8
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5f631ca0
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5f631ca0
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f5effb0
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f5effb0
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@659feb22
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@659feb22
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2b2954e1
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2b2954e1
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@235d659c
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@101a461c
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@101a461c
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@101a461c
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@31db34da
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@31db34da
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@31db34da
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1220ef43
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5e8507f1
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@21eee94f
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@21eee94f
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@21eee94f
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53c1179a
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53c1179a
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53c1179a
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@31b7d869
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6d2a2560
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2e7157c7
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e7157c7
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@346f41a9
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6d8796c1
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d8796c1
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1e95b653
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e95b653
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@286090c
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58606c91
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7d979d34
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5fef2aac
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5fef2aac
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@124d02b2
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3451f01d
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@72503b19
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1cfc2538
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@66deec87
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d342959
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ecf5915
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7364eed1
2020-12-07 17:05:07 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7364eed1
2020-12-07 17:05:07 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2b2954e1
2020-12-07 17:05:07 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26865482] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34451ed8]
2020-12-07 17:05:08 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26865482] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1d289d3f]
2020-12-07 17:05:09 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 17:05:09 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 17:05:09 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 17:05:09 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 17:05:09 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1d289d3f] for TypeConfiguration
2020-12-07 17:05:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:05:11 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1906f982, org.springframework.security.web.context.SecurityContextPersistenceFilter@48aaaed9, org.springframework.security.web.header.HeaderWriterFilter@5c316230, org.springframework.web.filter.CorsFilter@5444f1c3, org.springframework.security.web.authentication.logout.LogoutFilter@63b58ff4, com.app.config.JwtRequestFilter@10fc1a22, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@27bbe773, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6da9541c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6a5c2d2d, org.springframework.security.web.session.SessionManagementFilter@1885dc2b, org.springframework.security.web.access.ExceptionTranslationFilter@65b680b4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ae74eef]
2020-12-07 17:05:12 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 17:05:12 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 17:05:12 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 17:05:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 17:05:12 [main] INFO  com.app.Application - Started Application in 11.941 seconds (JVM running for 12.756)
2020-12-07 17:05:30 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 17:05:30 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 17:05:30 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2020-12-07 17:05:30 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 17:05:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_12_, latefeepar0_.compounding_period_slno as compoun10_12_, latefeepar0_.created_at as created_2_12_, latefeepar0_.created_by as created_3_12_, latefeepar0_.created_on as created_4_12_, latefeepar0_.grace_period as grace_pe5_12_, latefeepar0_.late_fees as late_fee6_12_, latefeepar0_.modified_at as modified7_12_, latefeepar0_.modified_by as modified8_12_, latefeepar0_.modified_on as modified9_12_ from gen_std_late_fee_parameter latefeepar0_ where latefeepar0_.slno=?
2020-12-07 17:05:31 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 17:05:40 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 17:05:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_12_, latefeepar0_.compounding_period_slno as compoun10_12_, latefeepar0_.created_at as created_2_12_, latefeepar0_.created_by as created_3_12_, latefeepar0_.created_on as created_4_12_, latefeepar0_.grace_period as grace_pe5_12_, latefeepar0_.late_fees as late_fee6_12_, latefeepar0_.modified_at as modified7_12_, latefeepar0_.modified_by as modified8_12_, latefeepar0_.modified_on as modified9_12_ from gen_std_late_fee_parameter latefeepar0_ where latefeepar0_.slno=?
2020-12-07 17:05:40 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2020-12-07 17:07:08 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9928 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 17:07:08 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 17:07:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 17:07:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 233ms. Found 25 repository interfaces.
2020-12-07 17:07:11 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 17:07:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 17:07:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:07:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:07:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:07:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:07:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:07:11 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:07:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7e6d554f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:07:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$171b1d89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:07:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:07:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3c0036b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:07:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3befc03b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:07:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:07:11 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 17:07:11 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 17:07:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 17:07:13 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 17:07:13 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 17:07:13 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 17:07:13 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 17:07:13 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5194 ms
2020-12-07 17:07:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 17:07:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 17:07:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3fb9a67f
2020-12-07 17:07:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3fb9a67f
2020-12-07 17:07:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3fb9a67f
2020-12-07 17:07:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@673c4f6e
2020-12-07 17:07:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c011174
2020-12-07 17:07:15 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f35e52
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@41da3aee
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@41da3aee
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@41da3aee
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@13dbed9e
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@13dbed9e
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13dbed9e
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2e766822
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2e766822
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2e766822
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@138aa3cc
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@138aa3cc
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@138aa3cc
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@45aca496
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@45aca496
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@45aca496
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7fb53256
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7fb53256
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fb53256
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5afbd567
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5afbd567
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5afbd567
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@41184371
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@41184371
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@608b1fd2
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@608b1fd2
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7c51782d
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7c51782d
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@20a7953c
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4fe533ff
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@18a25bbd
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@18a25bbd
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5583098b
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5583098b
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@56f730b2
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@56f730b2
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e906375
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e906375
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2489e84a
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2489e84a
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@29ebbdf4
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@29ebbdf4
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70c69586
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70c69586
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0fbeb5
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0fbeb5
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4976085
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4976085
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5f631ca0
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f631ca0
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5f5effb0
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f5effb0
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@659feb22
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@659feb22
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@659feb22
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@421def93
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@235d659c
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@235d659c
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@235d659c
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f5ce0bb
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@311ff287
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@311ff287
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@16a5eb6d
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@16a5eb6d
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5e8507f1
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5e8507f1
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@21eee94f
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@21eee94f
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@53c1179a
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@53c1179a
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31b7d869
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3811510
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3811510
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3811510
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e7157c7
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e7157c7
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e7157c7
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@25f723b0
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3382cf68
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2c413ffc
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2c413ffc
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2c413ffc
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6f6c6077
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6f6c6077
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6f6c6077
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@31120021
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6a9cd0f8
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@350ec690
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@350ec690
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77dba4cd
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@47768e74
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@47768e74
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@124d02b2
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@124d02b2
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1cfc2538
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2ecf5915
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6aa7b67f
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@39c96e48
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@39c96e48
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7cf78c85
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ebe067d
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a4ab7f7
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6badba10
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2b7e8044
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@550de6b8
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a1706e1
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c6c4689
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5c134052
2020-12-07 17:07:16 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5c134052
2020-12-07 17:07:16 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@53c1179a
2020-12-07 17:07:16 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19fd43da] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@115dcaea]
2020-12-07 17:07:17 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19fd43da] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@21edd891]
2020-12-07 17:07:18 [main] DEBUG org.hibernate.SQL - create table gen_std_late_fee_parameter (slno int8 not null, created_at time, created_by varchar(255), created_on DATE, grace_period int4, late_fees numeric(19, 2), modified_at time, modified_by varchar(255), modified_on DATE, compounding_period_slno int8 not null, primary key (slno))
2020-12-07 17:07:18 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 17:07:18 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_late_fee_parameter add constraint FKly36r5pbqjh7sl4bm5iox05sn foreign key (compounding_period_slno) references gen_std_compounding_period
2020-12-07 17:07:18 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 17:07:18 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 17:07:18 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 17:07:19 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@21edd891] for TypeConfiguration
2020-12-07 17:07:19 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:07:22 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4177d422, org.springframework.security.web.context.SecurityContextPersistenceFilter@582ca1e2, org.springframework.security.web.header.HeaderWriterFilter@4a45ca1c, org.springframework.web.filter.CorsFilter@7bde704a, org.springframework.security.web.authentication.logout.LogoutFilter@1826475, com.app.config.JwtRequestFilter@78d61f17, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38093ffe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@50d05167, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12f3fcd, org.springframework.security.web.session.SessionManagementFilter@2173e4d5, org.springframework.security.web.access.ExceptionTranslationFilter@18dafd3b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5ebfe7fa]
2020-12-07 17:07:23 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 17:07:23 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 17:07:24 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 17:07:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 17:07:24 [main] INFO  com.app.Application - Started Application in 16.866 seconds (JVM running for 17.788)
2020-12-07 17:10:13 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 17:10:13 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 17:10:13 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 27 ms
2020-12-07 17:10:13 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 17:10:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_compounding_period WHERE slno = ?
2020-12-07 17:10:13 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 17:10:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [107]
2020-12-07 17:10:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [13:12:14]
2020-12-07 17:10:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-07 17:10:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-07]
2020-12-07 17:10:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-07 17:10:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-07 17:10:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-07 17:10:13 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name] : [VARCHAR]) - [monthly]
2020-12-07 17:10:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_12_, latefeepar0_.compounding_period_slno as compoun10_12_, latefeepar0_.created_at as created_2_12_, latefeepar0_.created_by as created_3_12_, latefeepar0_.created_on as created_4_12_, latefeepar0_.grace_period as grace_pe5_12_, latefeepar0_.late_fees as late_fee6_12_, latefeepar0_.modified_at as modified7_12_, latefeepar0_.modified_by as modified8_12_, latefeepar0_.modified_on as modified9_12_ from gen_std_late_fee_parameter latefeepar0_ where latefeepar0_.compounding_period_slno=?
2020-12-07 17:10:14 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 17:10:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select nextval ('hibernate_sequence')
2020-12-07 17:10:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into gen_std_late_fee_parameter (compounding_period_slno, created_at, created_by, created_on, grace_period, late_fees, modified_at, modified_by, modified_on, slno) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-07 17:10:14 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 17:10:14 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [TIME] - [17:10:14]
2020-12-07 17:10:14 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [satish]
2020-12-07 17:10:14 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [DATE] - [2020-12-07]
2020-12-07 17:10:14 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [INTEGER] - [12]
2020-12-07 17:10:14 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [NUMERIC] - [45.0]
2020-12-07 17:10:14 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [TIME] - [null]
2020-12-07 17:10:14 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [VARCHAR] - [null]
2020-12-07 17:10:14 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [9] as [DATE] - [null]
2020-12-07 17:10:14 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [10] as [BIGINT] - [109]
2020-12-07 17:11:11 [http-nio-8080-exec-3] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 17:11:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_12_, latefeepar0_.compounding_period_slno as compoun10_12_, latefeepar0_.created_at as created_2_12_, latefeepar0_.created_by as created_3_12_, latefeepar0_.created_on as created_4_12_, latefeepar0_.grace_period as grace_pe5_12_, latefeepar0_.late_fees as late_fee6_12_, latefeepar0_.modified_at as modified7_12_, latefeepar0_.modified_by as modified8_12_, latefeepar0_.modified_on as modified9_12_ from gen_std_late_fee_parameter latefeepar0_ where latefeepar0_.slno=?
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno1_12_] : [BIGINT]) - [48]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([compoun10_12_] : [BIGINT]) - [107]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_12_] : [TIME]) - [17:10:14]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_12_] : [VARCHAR]) - [satish]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_12_] : [DATE]) - [2020-12-07]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([grace_pe5_12_] : [INTEGER]) - [12]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([late_fee6_12_] : [NUMERIC]) - [45.00]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_12_] : [TIME]) - [null]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified8_12_] : [VARCHAR]) - [null]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified9_12_] : [DATE]) - [null]
2020-12-07 17:11:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_0_, compoundin0_.created_at as created_2_3_0_, compoundin0_.created_by as created_3_3_0_, compoundin0_.created_on as created_4_3_0_, compoundin0_.modified_at as modified5_3_0_, compoundin0_.modified_by as modified6_3_0_, compoundin0_.modified_on as modified7_3_0_, compoundin0_.name as name8_3_0_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_0_] : [TIME]) - [13:12:14]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_0_] : [VARCHAR]) - [satish]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_0_] : [DATE]) - [2020-12-07]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_0_] : [TIME]) - [null]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_0_] : [VARCHAR]) - [null]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_0_] : [DATE]) - [null]
2020-12-07 17:11:11 [http-nio-8080-exec-3] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_0_] : [VARCHAR]) - [monthly]
2020-12-07 17:11:19 [http-nio-8080-exec-4] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 17:11:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select latefeepar0_.slno as slno1_12_, latefeepar0_.compounding_period_slno as compoun10_12_, latefeepar0_.created_at as created_2_12_, latefeepar0_.created_by as created_3_12_, latefeepar0_.created_on as created_4_12_, latefeepar0_.grace_period as grace_pe5_12_, latefeepar0_.late_fees as late_fee6_12_, latefeepar0_.modified_at as modified7_12_, latefeepar0_.modified_by as modified8_12_, latefeepar0_.modified_on as modified9_12_ from gen_std_late_fee_parameter latefeepar0_ where latefeepar0_.slno=?
2020-12-07 17:11:19 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [4]
2020-12-07 17:27:13 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 7232 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 17:27:13 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 17:27:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 17:27:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 237ms. Found 25 repository interfaces.
2020-12-07 17:27:15 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 17:27:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 17:27:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:27:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:27:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:27:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:27:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:27:15 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:27:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d58af9b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:27:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6e38c1f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:27:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:27:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@652ce654' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:27:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$930d64a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:27:16 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:27:16 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 17:27:16 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 17:27:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 17:27:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 17:27:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 17:27:17 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 17:27:17 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 17:27:17 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3981 ms
2020-12-07 17:27:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 17:27:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@15c487a8
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@15c487a8
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15c487a8
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@794366a5
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@340d6d89
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1ee47d9e
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@493ac8d3
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@493ac8d3
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@493ac8d3
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@51ab1ee3
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@51ab1ee3
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@51ab1ee3
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c8a7e38
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c8a7e38
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c8a7e38
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1945113f
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1945113f
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1945113f
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1db87583
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1db87583
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1db87583
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2f894ad9
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2f894ad9
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2f894ad9
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@36baa049
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@36baa049
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36baa049
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@167381c7
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@167381c7
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ba060f3
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ba060f3
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@57c00115
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@57c00115
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5377414a
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71b639d0
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@542f6803
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@542f6803
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@316acbb5
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@316acbb5
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@717d7587
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@717d7587
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c0777b5
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c0777b5
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e642ee1
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e642ee1
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1eff3cfb
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1eff3cfb
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d4e13e1
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d4e13e1
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4833eff3
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4833eff3
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e38f0b7
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e38f0b7
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@767599a7
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@767599a7
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@463561c5
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@463561c5
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@58c1da09
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@58c1da09
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@58c1da09
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@751ae8a4
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@47e51549
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@47e51549
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@47e51549
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5ebffb44
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5edacf20
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5edacf20
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@234cff57
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@234cff57
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3f362135
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3f362135
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2a097d77
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2a097d77
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a916402
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a916402
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@62d1dc3c
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7f2d31af
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7f2d31af
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7f2d31af
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1084f78c
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1084f78c
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1084f78c
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2f74900b
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@27be17c8
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1e95b653
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e95b653
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1e95b653
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3df1a1ac
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3df1a1ac
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3df1a1ac
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4baed682
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2c2a027c
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@34a2d6e0
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@34a2d6e0
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e0fdb2f
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5fef2aac
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5fef2aac
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@66deec87
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@66deec87
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53e76c11
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6a1d6ef2
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@61514735
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@ebe067d
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@ebe067d
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2b7e8044
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@550de6b8
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a1706e1
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c6c4689
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63cf9de0
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@594d9f07
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5befbac1
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5e9f73b
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@22d7fd41
2020-12-07 17:27:19 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@22d7fd41
2020-12-07 17:27:19 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6a916402
2020-12-07 17:27:19 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cc8416a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@331ff3ac]
2020-12-07 17:27:20 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cc8416a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@251d7fdd]
2020-12-07 17:27:21 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 17:27:21 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 17:27:21 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 17:27:21 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 17:27:21 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@251d7fdd] for TypeConfiguration
2020-12-07 17:27:21 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:27:22 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-07 17:27:22 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-07 17:27:22 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 17:27:22 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 17:27:22 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-07 17:27:22 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:27:22 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@251d7fdd] for TypeConfiguration
2020-12-07 17:27:22 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2d2133fd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@251d7fdd]
2020-12-07 17:27:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-07 17:27:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-07 17:27:22 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-07 17:27:22 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-07 17:28:25 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 14304 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 17:28:25 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 17:28:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 17:28:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 212ms. Found 25 repository interfaces.
2020-12-07 17:28:27 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 17:28:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 17:28:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:28:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:28:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:28:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:28:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:28:27 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:28:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4e615e1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:28:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e70f2658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:28:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:28:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@51e0301d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:28:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$be3c90a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:28:28 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:28:28 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 17:28:28 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 17:28:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 17:28:29 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 17:28:29 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 17:28:29 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 17:28:29 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 17:28:29 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4003 ms
2020-12-07 17:28:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 17:28:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@40a72ecd
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@40a72ecd
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@40a72ecd
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@17410c07
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@59c70ceb
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@361abd01
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1fd9893c
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1fd9893c
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1fd9893c
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@551e4c6d
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@551e4c6d
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@551e4c6d
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3fb9a67f
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3fb9a67f
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3fb9a67f
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3f36e8d1
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3f36e8d1
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f36e8d1
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@340d6d89
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@340d6d89
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@340d6d89
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5dc0ff7d
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5dc0ff7d
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5dc0ff7d
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@67531e3a
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@67531e3a
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@67531e3a
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3003e580
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3003e580
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10a98392
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10a98392
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@697173d9
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@697173d9
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1db87583
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@27329d2a
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@57545c3f
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@57545c3f
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@76a805b7
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@76a805b7
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@591a4f8e
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@591a4f8e
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48e8c32a
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48e8c32a
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5377414a
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5377414a
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d5b9ecb
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d5b9ecb
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5807efad
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5807efad
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@47311277
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@47311277
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5731d3a
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5731d3a
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5d4e13e1
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d4e13e1
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4833eff3
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4833eff3
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3b1dc579
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3b1dc579
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3b1dc579
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77f905e3
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@777d191f
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@777d191f
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@777d191f
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@e38f0b7
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@12ad1b2a
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@12ad1b2a
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@345cbf40
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@345cbf40
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f4b98f6
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f4b98f6
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@751ae8a4
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@751ae8a4
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@47e51549
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@47e51549
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5ebffb44
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5edacf20
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5edacf20
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5edacf20
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@234cff57
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@234cff57
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@234cff57
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3f362135
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@724aefc3
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5034f5dd
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5034f5dd
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5034f5dd
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62d1dc3c
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62d1dc3c
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62d1dc3c
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@18539cb1
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2e7157c7
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@40d60f2
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@40d60f2
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6d8796c1
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1e95b653
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e95b653
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6a9cd0f8
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a9cd0f8
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@203d1d93
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d979d34
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3458eca5
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@66deec87
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@66deec87
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@42cc183e
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e4e8fdf
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a1d6ef2
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2721044
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205df5dc
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6aa7b67f
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bcc3f27
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7fedb795
2020-12-07 17:28:31 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7fedb795
2020-12-07 17:28:31 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@47e51549
2020-12-07 17:28:31 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c53f292] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46fb0c33]
2020-12-07 17:28:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c53f292] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6cc64028]
2020-12-07 17:28:33 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 17:28:33 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 17:28:33 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 17:28:33 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 17:28:33 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6cc64028] for TypeConfiguration
2020-12-07 17:28:33 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:28:34 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-07 17:28:35 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-07 17:28:35 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 17:28:35 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 17:28:35 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-07 17:28:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:28:35 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6cc64028] for TypeConfiguration
2020-12-07 17:28:35 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@191b44ca] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6cc64028]
2020-12-07 17:28:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-07 17:28:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-07 17:28:35 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-07 17:28:35 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-07 17:33:12 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 9228 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 17:33:12 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 17:33:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 17:33:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 229ms. Found 25 repository interfaces.
2020-12-07 17:33:14 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 17:33:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 17:33:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:33:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:33:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:33:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:33:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:33:14 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:33:15 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$436a3f0c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:33:15 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$dc180746] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:33:15 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:33:15 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7ac9af2a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:33:15 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$eca9f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:33:15 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:33:15 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 17:33:15 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 17:33:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 17:33:16 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 17:33:16 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 17:33:16 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 17:33:16 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 17:33:16 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3897 ms
2020-12-07 17:33:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 17:33:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5562c2c9
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5562c2c9
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5562c2c9
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f36e8d1
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@480b57e2
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@561953e3
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@64920dc2
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@64920dc2
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@64920dc2
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2b38b1f
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2b38b1f
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b38b1f
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@28757abd
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@28757abd
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@28757abd
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@30839e44
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@30839e44
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@30839e44
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ceddaf8
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ceddaf8
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ceddaf8
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@27329d2a
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@27329d2a
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@27329d2a
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@57545c3f
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@57545c3f
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@57545c3f
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@76a805b7
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@76a805b7
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@591a4f8e
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@591a4f8e
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@48e8c32a
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@48e8c32a
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@411a5965
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4e83a98
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1ee27d73
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1ee27d73
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@53a84ff4
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@53a84ff4
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7930ffa9
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7930ffa9
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b7aa898
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b7aa898
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@62b93086
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@62b93086
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5731d3a
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5731d3a
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e9f2c32
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e9f2c32
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2676dc05
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2676dc05
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fc420b8
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fc420b8
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@12ad1b2a
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@12ad1b2a
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@345cbf40
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@345cbf40
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2f4b98f6
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2f4b98f6
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2f4b98f6
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b2954e1
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2da16263
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2da16263
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2da16263
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@101a461c
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@31db34da
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@31db34da
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1220ef43
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1220ef43
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@d08edc5
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@d08edc5
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@724aefc3
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@724aefc3
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5034f5dd
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5034f5dd
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1a47a1e8
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@18539cb1
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@18539cb1
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@18539cb1
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@22d9bc14
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@22d9bc14
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@22d9bc14
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40d60f2
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6d8796c1
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6cd98a05
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6cd98a05
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6cd98a05
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@286090c
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@286090c
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@286090c
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@58606c91
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7be2f29a
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3664f108
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3664f108
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2525a5b8
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5b5a4aed
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5b5a4aed
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@72503b19
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@72503b19
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5d342959
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42cc183e
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@79aee22a
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@40d23c82
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40d23c82
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3a4ab7f7
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6badba10
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b7e8044
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@550de6b8
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a1706e1
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c6c4689
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@63cf9de0
2020-12-07 17:33:17 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@594d9f07
2020-12-07 17:33:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5a7df831
2020-12-07 17:33:18 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5a7df831
2020-12-07 17:33:18 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5034f5dd
2020-12-07 17:33:18 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6cae2e4d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@604d23fa]
2020-12-07 17:33:19 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6cae2e4d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4d518c66]
2020-12-07 17:33:20 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 17:33:20 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 17:33:20 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 17:33:20 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 17:33:20 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4d518c66] for TypeConfiguration
2020-12-07 17:33:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:33:21 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-07 17:33:21 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-07 17:33:21 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 17:33:21 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 17:33:21 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-07 17:33:21 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:33:21 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4d518c66] for TypeConfiguration
2020-12-07 17:33:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7b2dd35d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4d518c66]
2020-12-07 17:33:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-07 17:33:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-07 17:33:21 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-07 17:33:21 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-07 17:36:36 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 5000 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 17:36:36 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 17:36:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 17:36:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 216ms. Found 25 repository interfaces.
2020-12-07 17:36:38 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 17:36:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 17:36:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:36:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:36:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:36:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:36:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:36:38 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:36:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$17e20cb7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:36:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b08fd4f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:36:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:36:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@c81fd12' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:36:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$d56477a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:36:38 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:36:38 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 17:36:38 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 17:36:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 17:36:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 17:36:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 17:36:40 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 17:36:40 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 17:36:40 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3817 ms
2020-12-07 17:36:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 17:36:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7beae796
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7beae796
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7beae796
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@261db982
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@bbd4791
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@76a14c8d
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@46f902e0
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@46f902e0
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@46f902e0
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7165d530
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7165d530
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7165d530
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7219ac49
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7219ac49
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7219ac49
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2eed37f4
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2eed37f4
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eed37f4
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@673c4f6e
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@673c4f6e
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@673c4f6e
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@480b57e2
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@480b57e2
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@480b57e2
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1ee47d9e
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1ee47d9e
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ee47d9e
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@493ac8d3
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@493ac8d3
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@51ab1ee3
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@51ab1ee3
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3c8a7e38
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c8a7e38
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@30839e44
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@45aca496
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7fb53256
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7fb53256
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5afbd567
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5afbd567
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@41184371
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@41184371
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@608b1fd2
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@608b1fd2
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7c51782d
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7c51782d
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@411a5965
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@411a5965
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@71b639d0
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@71b639d0
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@542f6803
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@542f6803
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2489e84a
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2489e84a
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5731d3a
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5731d3a
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7e9f2c32
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7e9f2c32
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2676dc05
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2676dc05
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2676dc05
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4694f434
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@793d163b
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@793d163b
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@793d163b
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@221a2068
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7fc420b8
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7fc420b8
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5f631ca0
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5f631ca0
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f5effb0
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f5effb0
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@659feb22
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@659feb22
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2b2954e1
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2b2954e1
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@235d659c
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@101a461c
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@101a461c
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@101a461c
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@31db34da
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@31db34da
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@31db34da
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1220ef43
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5e8507f1
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@21eee94f
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@21eee94f
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@21eee94f
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53c1179a
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53c1179a
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53c1179a
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@31b7d869
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6d2a2560
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2e7157c7
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e7157c7
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@346f41a9
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6d8796c1
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d8796c1
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1e95b653
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e95b653
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@286090c
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58606c91
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7d979d34
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5fef2aac
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5fef2aac
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@124d02b2
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3451f01d
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@72503b19
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1cfc2538
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@66deec87
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d342959
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ecf5915
2020-12-07 17:36:41 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-07 17:36:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7364eed1
2020-12-07 17:36:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7364eed1
2020-12-07 17:36:42 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2b2954e1
2020-12-07 17:36:42 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26865482] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34451ed8]
2020-12-07 17:36:42 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26865482] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1d289d3f]
2020-12-07 17:36:43 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 17:36:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 17:36:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 17:36:43 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 17:36:43 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1d289d3f] for TypeConfiguration
2020-12-07 17:36:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:36:45 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-07 17:36:45 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-07 17:36:45 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 17:36:45 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 17:36:45 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-07 17:36:45 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:36:45 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1d289d3f] for TypeConfiguration
2020-12-07 17:36:45 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5059d398] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1d289d3f]
2020-12-07 17:36:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-07 17:36:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-07 17:36:45 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-07 17:36:45 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-07 17:38:26 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 260 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 17:38:26 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 17:38:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 17:38:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 221ms. Found 25 repository interfaces.
2020-12-07 17:38:28 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 17:38:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 17:38:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:38:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:38:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:38:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:38:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:38:29 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:38:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7e6d554f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:38:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$171b1d89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:38:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:38:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3c0036b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:38:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3befc03b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:38:29 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:38:29 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 17:38:29 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 17:38:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 17:38:30 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 17:38:30 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 17:38:30 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 17:38:30 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 17:38:30 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4076 ms
2020-12-07 17:38:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 17:38:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3fb9a67f
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3fb9a67f
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3fb9a67f
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@673c4f6e
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c011174
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f35e52
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@41da3aee
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@41da3aee
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@41da3aee
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@13dbed9e
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@13dbed9e
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13dbed9e
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2e766822
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2e766822
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2e766822
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@138aa3cc
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@138aa3cc
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@138aa3cc
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@45aca496
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@45aca496
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@45aca496
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7fb53256
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7fb53256
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fb53256
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5afbd567
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5afbd567
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5afbd567
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@41184371
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@41184371
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@608b1fd2
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@608b1fd2
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7c51782d
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7c51782d
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@20a7953c
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4fe533ff
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@18a25bbd
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@18a25bbd
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5583098b
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5583098b
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@56f730b2
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@56f730b2
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e906375
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e906375
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2489e84a
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2489e84a
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@29ebbdf4
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@29ebbdf4
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70c69586
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70c69586
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0fbeb5
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0fbeb5
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4976085
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4976085
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5f631ca0
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f631ca0
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5f5effb0
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f5effb0
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@659feb22
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@659feb22
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@659feb22
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@421def93
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@235d659c
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@235d659c
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@235d659c
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f5ce0bb
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@311ff287
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@311ff287
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@16a5eb6d
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@16a5eb6d
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5e8507f1
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5e8507f1
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@21eee94f
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@21eee94f
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@53c1179a
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@53c1179a
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31b7d869
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3811510
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3811510
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3811510
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e7157c7
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e7157c7
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e7157c7
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@25f723b0
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3382cf68
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2c413ffc
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2c413ffc
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2c413ffc
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6f6c6077
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6f6c6077
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6f6c6077
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@31120021
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6a9cd0f8
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@350ec690
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@350ec690
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77dba4cd
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@47768e74
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@47768e74
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@124d02b2
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@124d02b2
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1cfc2538
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2ecf5915
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6aa7b67f
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@39c96e48
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@39c96e48
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7cf78c85
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ebe067d
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a4ab7f7
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6badba10
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2b7e8044
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@550de6b8
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a1706e1
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c6c4689
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4fc165f6
2020-12-07 17:38:32 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4fc165f6
2020-12-07 17:38:32 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@53c1179a
2020-12-07 17:38:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7741771e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@834e986]
2020-12-07 17:38:33 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7741771e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@31aab981]
2020-12-07 17:38:34 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 17:38:34 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 17:38:34 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 17:38:34 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 17:38:34 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@31aab981] for TypeConfiguration
2020-12-07 17:38:34 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:38:36 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
2020-12-07 17:38:36 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2020-12-07 17:38:36 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 17:38:36 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [Janasamruddhi] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
2020-12-07 17:38:36 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-12-07 17:38:36 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:38:36 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@31aab981] for TypeConfiguration
2020-12-07 17:38:36 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5d6d424d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@31aab981]
2020-12-07 17:38:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-12-07 17:38:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2020-12-07 17:38:36 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-07 17:38:36 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:540)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.app.Application.main(Application.java:25)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:414)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtRequestFilter': Unsatisfied dependency expressed through field 'loginImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5098)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1432)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1422)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:944)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:261)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:801)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:372)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginImpl': Unsatisfied dependency expressed through field 'lateFeeParameter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lateFeeParameterRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1237)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1164)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 67 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.app.repository.LateFeeParameterRepository.findBySlnoValue(java.lang.Long)! Illegal attempt to dereference path source [null.slno] of basic type
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:82)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:79)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:566)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:559)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.Iterator.forEachRemaining(Unknown Source)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:561)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:551)
	at java.util.Optional.map(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:551)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:324)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:211)
	at org.springframework.data.util.Lazy.get(Lazy.java:94)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741)
	... 77 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal attempt to dereference path source [null.slno] of basic type
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.illegalDereference(AbstractPathImpl.java:82)
	at org.hibernate.query.criteria.internal.path.AbstractPathImpl.get(AbstractPathImpl.java:174)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:661)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:605)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:577)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:379)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:302)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:207)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:57)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:145)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:268)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:77)
	... 103 common frames omitted
2020-12-07 17:46:36 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 11716 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 17:46:36 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 17:46:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 17:46:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 210ms. Found 25 repository interfaces.
2020-12-07 17:46:39 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 17:46:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 17:46:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:46:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:46:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:46:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:46:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 17:46:39 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 17:46:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4e615e1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:46:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e70f2658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:46:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:46:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@51e0301d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:46:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$be3c90a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:46:39 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 17:46:39 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 17:46:39 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 17:46:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 17:46:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 17:46:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 17:46:40 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 17:46:40 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 17:46:40 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4262 ms
2020-12-07 17:46:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 17:46:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@40a72ecd
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@40a72ecd
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@40a72ecd
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@17410c07
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@59c70ceb
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@361abd01
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1fd9893c
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1fd9893c
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1fd9893c
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@551e4c6d
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@551e4c6d
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@551e4c6d
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3fb9a67f
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3fb9a67f
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3fb9a67f
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3f36e8d1
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3f36e8d1
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f36e8d1
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@340d6d89
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@340d6d89
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@340d6d89
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5dc0ff7d
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5dc0ff7d
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5dc0ff7d
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@67531e3a
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@67531e3a
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@67531e3a
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3003e580
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3003e580
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10a98392
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10a98392
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@697173d9
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@697173d9
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1db87583
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@27329d2a
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@57545c3f
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@57545c3f
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@76a805b7
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@76a805b7
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@591a4f8e
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@591a4f8e
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48e8c32a
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48e8c32a
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5377414a
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5377414a
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d5b9ecb
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d5b9ecb
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5807efad
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5807efad
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@47311277
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@47311277
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5731d3a
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5731d3a
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5d4e13e1
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d4e13e1
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4833eff3
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4833eff3
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3b1dc579
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3b1dc579
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3b1dc579
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77f905e3
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@777d191f
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@777d191f
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@777d191f
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@e38f0b7
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@12ad1b2a
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@12ad1b2a
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@345cbf40
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@345cbf40
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f4b98f6
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f4b98f6
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@751ae8a4
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@751ae8a4
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@47e51549
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@47e51549
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5ebffb44
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5edacf20
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5edacf20
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5edacf20
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@234cff57
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@234cff57
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@234cff57
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3f362135
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@724aefc3
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5034f5dd
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5034f5dd
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5034f5dd
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62d1dc3c
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62d1dc3c
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62d1dc3c
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@18539cb1
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2e7157c7
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@40d60f2
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@40d60f2
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6d8796c1
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1e95b653
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e95b653
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6a9cd0f8
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a9cd0f8
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@203d1d93
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d979d34
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3458eca5
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@66deec87
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@66deec87
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@53e76c11
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@42cc183e
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e4e8fdf
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a1d6ef2
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2721044
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@205df5dc
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6aa7b67f
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bcc3f27
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7fedb795
2020-12-07 17:46:42 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7fedb795
2020-12-07 17:46:42 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@47e51549
2020-12-07 17:46:42 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c53f292] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46fb0c33]
2020-12-07 17:46:43 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c53f292] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6cc64028]
2020-12-07 17:46:44 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 17:46:44 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 17:46:44 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 17:46:44 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 17:46:44 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6cc64028] for TypeConfiguration
2020-12-07 17:46:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 17:46:46 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@389bc2d3, org.springframework.security.web.context.SecurityContextPersistenceFilter@1e1ea16d, org.springframework.security.web.header.HeaderWriterFilter@1885dc2b, org.springframework.web.filter.CorsFilter@442310fd, org.springframework.security.web.authentication.logout.LogoutFilter@38093ffe, com.app.config.JwtRequestFilter@33a3e5db, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2157889c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a45ca1c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@23263ba, org.springframework.security.web.session.SessionManagementFilter@ea84346, org.springframework.security.web.access.ExceptionTranslationFilter@716e6fa5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1cfd6f63]
2020-12-07 17:46:46 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 17:46:47 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 17:46:47 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 17:46:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 17:46:47 [main] INFO  com.app.Application - Started Application in 11.729 seconds (JVM running for 12.697)
2020-12-07 17:47:06 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 17:47:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 17:47:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2020-12-07 17:47:06 [http-nio-8080-exec-1] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 17:47:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - Select * FROM gen_std_late_fee_parameter WHERE slno = ?
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([compounding_period_slno] : [BIGINT]) - [107]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:10:14]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-07]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([grace_period] : [INTEGER]) - [12]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([late_fees] : [NUMERIC]) - [45.00]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [null]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [null]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [null]
2020-12-07 17:47:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_0_, compoundin0_.created_at as created_2_3_0_, compoundin0_.created_by as created_3_3_0_, compoundin0_.created_on as created_4_3_0_, compoundin0_.modified_at as modified5_3_0_, compoundin0_.modified_by as modified6_3_0_, compoundin0_.modified_on as modified7_3_0_, compoundin0_.name as name8_3_0_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_0_] : [TIME]) - [13:12:14]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_0_] : [VARCHAR]) - [satish]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_0_] : [DATE]) - [2020-12-07]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_0_] : [TIME]) - [null]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_0_] : [VARCHAR]) - [null]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_0_] : [DATE]) - [null]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_0_] : [VARCHAR]) - [monthly]
2020-12-07 17:47:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update gen_std_late_fee_parameter set compounding_period_slno=?, grace_period=?, late_fees=?, modified_by=?, modified_on=?, modified_at=? WHERE slno = ?
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [INTEGER] - [1]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [NUMERIC] - [4.0]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [satish]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [DATE] - [2020-12-07]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [TIME] - [17:47:07]
2020-12-07 17:47:07 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [BIGINT] - [48]
2020-12-07 18:18:51 [main] INFO  com.app.Application - Starting Application on LAPTOP-EMG6L2KD with PID 12548 (F:\bsq\Banking\Banking\target\classes started by Satish Nadakattin in F:\bsq\Banking\Banking)
2020-12-07 18:18:51 [main] INFO  com.app.Application - No active profile set, falling back to default profiles: default
2020-12-07 18:18:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-07 18:18:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 243ms. Found 25 repository interfaces.
2020-12-07 18:18:53 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
2020-12-07 18:18:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-12-07 18:18:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 18:18:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-12-07 18:18:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 18:18:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 18:18:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-12-07 18:18:53 [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-12-07 18:18:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d8dda5e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 18:18:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$718b6e1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 18:18:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 18:18:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7d755813' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 18:18:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$966010cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 18:18:54 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-07 18:18:54 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-12-07 18:18:54 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-12-07 18:18:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-12-07 18:18:55 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-12-07 18:18:55 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.13
2020-12-07 18:18:55 [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_241\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_241/bin/server;C:/Program Files/Java/jre1.8.0_241/bin;C:/Program Files/Java/jre1.8.0_241/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_241\bin;C:\Program Files\Java\jre1.8.0_241\bin;C:\Program Files\nodejs\;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\Satish Nadakattin\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Satish Nadakattin\AppData\Roaming\npm;C:\Users\Satish Nadakattin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\spring-tool-suite-4-4.6.1.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.1.RELEASE;;.]
2020-12-07 18:18:55 [main] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring embedded WebApplicationContext
2020-12-07 18:18:55 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4252 ms
2020-12-07 18:18:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-12-07 18:18:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@526a9908
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@526a9908
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@526a9908
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@60d6fdd4
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@44a085e5
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@df921b1
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@eb6ec6
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@eb6ec6
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eb6ec6
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3f018494
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3f018494
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3f018494
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7c52fc81
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7c52fc81
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7c52fc81
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@75e27856
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@75e27856
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75e27856
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1f3b992
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1f3b992
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f3b992
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@52bf7bf6
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@52bf7bf6
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@52bf7bf6
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@40a72ecd
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@40a72ecd
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@40a72ecd
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@257ef9ed
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@257ef9ed
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@575b5f7d
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@575b5f7d
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1b2df3aa
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1b2df3aa
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@21da4b5f
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d1e0fbb
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5562c2c9
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5562c2c9
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@794366a5
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@794366a5
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@443faa85
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@443faa85
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@59a79443
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@59a79443
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1d50a7ca
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1d50a7ca
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21a02556
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21a02556
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f174dd2
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f174dd2
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d90eeb3
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d90eeb3
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@167381c7
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@167381c7
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77bc2e16
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77bc2e16
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4fe533ff
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4fe533ff
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@18a25bbd
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18a25bbd
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18a25bbd
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e5aafc6
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7ce85af2
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7ce85af2
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7ce85af2
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@47311277
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@40230eb9
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40230eb9
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2a39aa2b
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2a39aa2b
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2fd954f
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2fd954f
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6dc1dc69
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6dc1dc69
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3976ebfa
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3976ebfa
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4833eff3
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3b1dc579
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3b1dc579
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3b1dc579
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@338766de
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@338766de
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@338766de
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@31142d58
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4f8d86e4
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@767599a7
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@767599a7
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@767599a7
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@463561c5
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@463561c5
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@463561c5
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2f4b98f6
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2b2954e1
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@47e51549
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47e51549
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5ebffb44
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7e307087
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7e307087
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@49fa1d74
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@49fa1d74
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6bc24e72
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a097d77
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d2a2560
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3382cf68
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3382cf68
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e26173
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@27be17c8
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c413ffc
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d21852b
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6cd98a05
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b8ec001
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e95b653
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6f6c6077
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1fd7a37
2020-12-07 18:18:57 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1fd7a37
2020-12-07 18:18:57 [main] INFO  org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3976ebfa
2020-12-07 18:18:57 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d88e6b9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@22bf9122]
2020-12-07 18:18:58 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d88e6b9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@79ecc507]
2020-12-07 18:18:59 [main] DEBUG org.hibernate.SQL - create table gen_std_privileges (slno int8 not null, create boolean, created_at time, created_by varchar(255), created_on DATE, delete boolean, is_active boolean, modified_at time, modified_by varchar(255), modified_on DATE, update boolean, view boolean, features_slno int8 not null, modules_slno int8 not null, roles_slno int8 not null, primary key (slno))
2020-12-07 18:18:59 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FK6k8n64nownaw6fx1gmms7bt68 foreign key (features_slno) references gen_std_features
2020-12-07 18:18:59 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKmv5n9ac9flvncgfb1wwqcfwia foreign key (modules_slno) references gen_std_modules
2020-12-07 18:18:59 [main] DEBUG org.hibernate.SQL - alter table if exists gen_std_privileges add constraint FKe2bihokywd0i9jjgx3kgn9dyb foreign key (roles_slno) references gen_std_roles
2020-12-07 18:18:59 [main] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@79ecc507] for TypeConfiguration
2020-12-07 18:18:59 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-07 18:19:02 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@50ecef36, org.springframework.security.web.context.SecurityContextPersistenceFilter@bcd9ed6, org.springframework.security.web.header.HeaderWriterFilter@6a299b9d, org.springframework.web.filter.CorsFilter@767d9b9, org.springframework.security.web.authentication.logout.LogoutFilter@52f7fa65, com.app.config.JwtRequestFilter@1c79d093, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13cc31df, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@49c13ecd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@593f7d2e, org.springframework.security.web.session.SessionManagementFilter@17477bbb, org.springframework.security.web.access.ExceptionTranslationFilter@de63949, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1826475]
2020-12-07 18:19:02 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-12-07 18:19:02 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-07 18:19:03 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-12-07 18:19:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/Janasamruddhi'
2020-12-07 18:19:03 [main] INFO  com.app.Application - Started Application in 12.16 seconds (JVM running for 13.004)
2020-12-07 18:19:38 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[.[/Janasamruddhi] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-07 18:19:38 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-12-07 18:19:38 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2020-12-07 18:19:38 [http-nio-8080-exec-2] WARN  com.app.config.JwtRequestFilter - JWT Token does not begin with Bearer String
2020-12-07 18:19:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - Select * FROM gen_std_late_fee_parameter WHERE slno = ?
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([slno] : [BIGINT]) - [48]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([compounding_period_slno] : [BIGINT]) - [107]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_at] : [TIME]) - [17:10:14]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_by] : [VARCHAR]) - [satish]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_on] : [DATE]) - [2020-12-07]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([grace_period] : [INTEGER]) - [1]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([late_fees] : [NUMERIC]) - [4.00]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_at] : [TIME]) - [17:47:07]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_by] : [VARCHAR]) - [satish]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified_on] : [DATE]) - [2020-12-07]
2020-12-07 18:19:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select compoundin0_.slno as slno1_3_0_, compoundin0_.created_at as created_2_3_0_, compoundin0_.created_by as created_3_3_0_, compoundin0_.created_on as created_4_3_0_, compoundin0_.modified_at as modified5_3_0_, compoundin0_.modified_by as modified6_3_0_, compoundin0_.modified_on as modified7_3_0_, compoundin0_.name as name8_3_0_ from gen_std_compounding_period compoundin0_ where compoundin0_.slno=?
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [107]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_2_3_0_] : [TIME]) - [13:12:14]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_3_3_0_] : [VARCHAR]) - [satish]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([created_4_3_0_] : [DATE]) - [2020-12-07]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified5_3_0_] : [TIME]) - [null]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified6_3_0_] : [VARCHAR]) - [null]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([modified7_3_0_] : [DATE]) - [null]
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.t.descriptor.sql.BasicExtractor - extracted value ([name8_3_0_] : [VARCHAR]) - [monthly]
2020-12-07 18:19:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - DELETE FROM gen_std_late_fee_parameter WHERE slno = ?
2020-12-07 18:19:39 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [48]
